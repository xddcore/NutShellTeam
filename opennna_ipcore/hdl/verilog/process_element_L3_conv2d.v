// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module process_element_L3_conv2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_fmap_address0,
        input_fmap_ce0,
        input_fmap_q0,
        input_fmap_address1,
        input_fmap_ce1,
        input_fmap_q1,
        output_fmap_address0,
        output_fmap_ce0,
        output_fmap_we0,
        output_fmap_d0,
        output_fmap_q0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_pp0_stage1 = 7'd4;
parameter    ap_ST_fsm_pp0_stage2 = 7'd8;
parameter    ap_ST_fsm_pp0_stage3 = 7'd16;
parameter    ap_ST_fsm_pp0_stage4 = 7'd32;
parameter    ap_ST_fsm_state51 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] input_fmap_address0;
output   input_fmap_ce0;
input  [14:0] input_fmap_q0;
output  [11:0] input_fmap_address1;
output   input_fmap_ce1;
input  [14:0] input_fmap_q1;
output  [12:0] output_fmap_address0;
output   output_fmap_ce0;
output   output_fmap_we0;
output  [15:0] output_fmap_d0;
input  [15:0] output_fmap_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] input_fmap_address0;
reg input_fmap_ce0;
reg[11:0] input_fmap_address1;
reg input_fmap_ce1;
reg[12:0] output_fmap_address0;
reg output_fmap_ce0;
reg output_fmap_we0;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [4:0] L3_bias_V_address0;
reg    L3_bias_V_ce0;
wire   [5:0] L3_bias_V_q0;
wire   [8:0] L3_Kernel_V_0_0_address0;
reg    L3_Kernel_V_0_0_ce0;
wire   [6:0] L3_Kernel_V_0_0_q0;
wire   [8:0] L3_Kernel_V_0_1_address0;
reg    L3_Kernel_V_0_1_ce0;
wire   [6:0] L3_Kernel_V_0_1_q0;
wire   [8:0] L3_Kernel_V_0_2_address0;
reg    L3_Kernel_V_0_2_ce0;
wire   [6:0] L3_Kernel_V_0_2_q0;
wire   [8:0] L3_Kernel_V_1_0_address0;
reg    L3_Kernel_V_1_0_ce0;
wire   [6:0] L3_Kernel_V_1_0_q0;
wire   [8:0] L3_Kernel_V_1_1_address0;
reg    L3_Kernel_V_1_1_ce0;
wire   [6:0] L3_Kernel_V_1_1_q0;
wire   [8:0] L3_Kernel_V_1_2_address0;
reg    L3_Kernel_V_1_2_ce0;
wire   [6:0] L3_Kernel_V_1_2_q0;
wire   [8:0] L3_Kernel_V_2_0_address0;
reg    L3_Kernel_V_2_0_ce0;
wire   [6:0] L3_Kernel_V_2_0_q0;
wire   [8:0] L3_Kernel_V_2_1_address0;
reg    L3_Kernel_V_2_1_ce0;
wire   [6:0] L3_Kernel_V_2_1_q0;
wire   [8:0] L3_Kernel_V_2_2_address0;
reg    L3_Kernel_V_2_2_ce0;
wire   [6:0] L3_Kernel_V_2_2_q0;
reg   [16:0] indvar_flatten130_reg_360;
reg   [5:0] kernel_number_reg_371;
reg   [12:0] indvar_flatten33_reg_383;
reg   [4:0] kernel_channel_reg_395;
reg   [7:0] indvar_flatten_reg_407;
reg   [3:0] shift_col_num_reg_419;
reg   [3:0] shift_row_num_reg_431;
reg   [14:0] reg_443;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state8_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_state18_pp0_stage1_iter3;
wire    ap_block_state23_pp0_stage1_iter4;
wire    ap_block_state28_pp0_stage1_iter5;
wire    ap_block_state33_pp0_stage1_iter6;
wire    ap_block_state38_pp0_stage1_iter7;
wire    ap_block_state43_pp0_stage1_iter8;
wire    ap_block_state48_pp0_stage1_iter9;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln107_reg_3272;
reg   [0:0] icmp_ln107_reg_3272_pp0_iter1_reg;
reg   [0:0] select_ln109_5_reg_3436;
reg   [0:0] select_ln109_6_reg_3443;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state9_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_state19_pp0_stage2_iter3;
wire    ap_block_state24_pp0_stage2_iter4;
wire    ap_block_state29_pp0_stage2_iter5;
wire    ap_block_state34_pp0_stage2_iter6;
wire    ap_block_state39_pp0_stage2_iter7;
wire    ap_block_state44_pp0_stage2_iter8;
wire    ap_block_state49_pp0_stage2_iter9;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] select_ln109_4_reg_3430;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state10_pp0_stage3_iter1;
wire    ap_block_state15_pp0_stage3_iter2;
wire    ap_block_state20_pp0_stage3_iter3;
wire    ap_block_state25_pp0_stage3_iter4;
wire    ap_block_state30_pp0_stage3_iter5;
wire    ap_block_state35_pp0_stage3_iter6;
wire    ap_block_state40_pp0_stage3_iter7;
wire    ap_block_state45_pp0_stage3_iter8;
wire    ap_block_state50_pp0_stage3_iter9;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] select_ln109_4_reg_3430_pp0_iter1_reg;
reg   [0:0] select_ln109_5_reg_3436_pp0_iter1_reg;
reg   [0:0] select_ln109_6_reg_3443_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state11_pp0_stage4_iter1;
wire    ap_block_state16_pp0_stage4_iter2;
wire    ap_block_state21_pp0_stage4_iter3;
wire    ap_block_state26_pp0_stage4_iter4;
wire    ap_block_state31_pp0_stage4_iter5;
wire    ap_block_state36_pp0_stage4_iter6;
wire    ap_block_state41_pp0_stage4_iter7;
wire    ap_block_state46_pp0_stage4_iter8;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_state17_pp0_stage0_iter3;
wire    ap_block_state22_pp0_stage0_iter4;
wire    ap_block_state27_pp0_stage0_iter5;
wire    ap_block_state32_pp0_stage0_iter6;
wire    ap_block_state37_pp0_stage0_iter7;
wire    ap_block_state42_pp0_stage0_iter8;
wire    ap_block_state47_pp0_stage0_iter9;
wire    ap_block_pp0_stage0_11001;
reg   [14:0] reg_448;
wire   [4:0] trunc_ln129_fu_452_p1;
reg   [4:0] trunc_ln129_reg_3267;
wire   [0:0] icmp_ln107_fu_456_p2;
reg   [0:0] icmp_ln107_reg_3272_pp0_iter2_reg;
reg   [0:0] icmp_ln107_reg_3272_pp0_iter3_reg;
reg   [0:0] icmp_ln107_reg_3272_pp0_iter4_reg;
reg   [0:0] icmp_ln107_reg_3272_pp0_iter5_reg;
reg   [0:0] icmp_ln107_reg_3272_pp0_iter6_reg;
reg   [0:0] icmp_ln107_reg_3272_pp0_iter7_reg;
reg   [0:0] icmp_ln107_reg_3272_pp0_iter8_reg;
reg   [0:0] icmp_ln107_reg_3272_pp0_iter9_reg;
wire   [16:0] add_ln107_1_fu_462_p2;
reg   [16:0] add_ln107_1_reg_3276;
reg    ap_enable_reg_pp0_iter0;
wire   [5:0] add_ln107_fu_468_p2;
reg   [5:0] add_ln107_reg_3281;
wire   [0:0] icmp_ln109_fu_474_p2;
reg   [0:0] icmp_ln109_reg_3287;
reg   [0:0] icmp_ln109_reg_3287_pp0_iter1_reg;
reg   [0:0] icmp_ln109_reg_3287_pp0_iter2_reg;
wire   [4:0] select_ln107_fu_480_p3;
reg   [4:0] select_ln107_reg_3298;
wire   [0:0] xor_ln107_fu_488_p2;
reg   [0:0] xor_ln107_reg_3308;
reg   [0:0] xor_ln107_reg_3308_pp0_iter1_reg;
reg   [0:0] xor_ln107_reg_3308_pp0_iter2_reg;
reg   [0:0] xor_ln107_reg_3308_pp0_iter3_reg;
reg   [0:0] xor_ln107_reg_3308_pp0_iter4_reg;
reg   [0:0] xor_ln107_reg_3308_pp0_iter5_reg;
reg   [0:0] xor_ln107_reg_3308_pp0_iter6_reg;
reg   [0:0] xor_ln107_reg_3308_pp0_iter7_reg;
reg   [0:0] xor_ln107_reg_3308_pp0_iter8_reg;
wire   [0:0] icmp_ln111_fu_494_p2;
reg   [0:0] icmp_ln111_reg_3318;
wire   [5:0] select_ln107_1_fu_500_p3;
reg   [5:0] select_ln107_1_reg_3324;
wire   [4:0] trunc_ln129_2_fu_510_p1;
reg   [4:0] trunc_ln129_2_reg_3335;
wire   [0:0] icmp_ln113_fu_514_p2;
reg   [0:0] icmp_ln113_reg_3340;
wire   [0:0] and_ln107_5_fu_520_p2;
reg   [0:0] and_ln107_5_reg_3345;
reg   [0:0] and_ln107_5_reg_3345_pp0_iter1_reg;
reg   [0:0] and_ln107_5_reg_3345_pp0_iter2_reg;
reg   [0:0] and_ln107_5_reg_3345_pp0_iter3_reg;
reg   [0:0] and_ln107_5_reg_3345_pp0_iter4_reg;
reg   [0:0] and_ln107_5_reg_3345_pp0_iter5_reg;
reg   [0:0] and_ln107_5_reg_3345_pp0_iter6_reg;
reg   [0:0] and_ln107_5_reg_3345_pp0_iter7_reg;
reg   [0:0] and_ln107_5_reg_3345_pp0_iter8_reg;
wire   [4:0] add_ln109_fu_524_p2;
reg   [4:0] add_ln109_reg_3356;
reg   [4:0] add_ln109_reg_3356_pp0_iter1_reg;
wire   [0:0] or_ln109_fu_529_p2;
reg   [0:0] or_ln109_reg_3362;
wire   [3:0] select_ln109_fu_534_p3;
reg   [3:0] select_ln109_reg_3369;
wire   [4:0] select_ln109_1_fu_542_p3;
reg   [4:0] select_ln109_1_reg_3377;
wire   [0:0] icmp_ln121_5_fu_549_p2;
reg   [0:0] icmp_ln121_5_reg_3384;
wire   [0:0] icmp_ln121_6_fu_554_p2;
reg   [0:0] icmp_ln121_6_reg_3389;
wire   [0:0] icmp_ln121_7_fu_559_p2;
reg   [0:0] icmp_ln121_7_reg_3394;
wire   [0:0] icmp_ln121_8_fu_564_p2;
reg   [0:0] icmp_ln121_8_reg_3399;
reg   [0:0] icmp_ln121_8_reg_3399_pp0_iter1_reg;
reg   [0:0] icmp_ln121_8_reg_3399_pp0_iter2_reg;
reg   [0:0] icmp_ln121_8_reg_3399_pp0_iter3_reg;
reg   [0:0] icmp_ln121_8_reg_3399_pp0_iter4_reg;
reg   [0:0] icmp_ln121_8_reg_3399_pp0_iter5_reg;
reg   [0:0] icmp_ln121_8_reg_3399_pp0_iter6_reg;
reg   [0:0] icmp_ln121_8_reg_3399_pp0_iter7_reg;
reg   [0:0] icmp_ln121_8_reg_3399_pp0_iter8_reg;
wire   [0:0] icmp_ln121_3_fu_610_p2;
reg   [0:0] icmp_ln121_3_reg_3404;
reg   [0:0] icmp_ln121_3_reg_3404_pp0_iter1_reg;
reg   [0:0] icmp_ln121_3_reg_3404_pp0_iter2_reg;
reg   [0:0] icmp_ln121_3_reg_3404_pp0_iter3_reg;
reg   [0:0] icmp_ln121_3_reg_3404_pp0_iter4_reg;
reg   [0:0] icmp_ln121_3_reg_3404_pp0_iter5_reg;
reg   [0:0] icmp_ln121_3_reg_3404_pp0_iter6_reg;
reg   [0:0] icmp_ln121_3_reg_3404_pp0_iter7_reg;
reg   [0:0] icmp_ln121_3_reg_3404_pp0_iter8_reg;
wire   [3:0] empty_157_fu_622_p2;
reg   [3:0] empty_157_reg_3409;
wire   [0:0] icmp_ln12151_fu_646_p2;
reg   [0:0] icmp_ln12151_reg_3414;
reg   [0:0] icmp_ln12151_reg_3414_pp0_iter1_reg;
wire   [59:0] sub_ln129_fu_701_p2;
reg   [59:0] sub_ln129_reg_3419;
wire   [8:0] select_ln109_3_fu_707_p3;
reg   [8:0] select_ln109_3_reg_3425;
wire   [0:0] select_ln109_4_fu_714_p3;
reg   [0:0] select_ln109_4_reg_3430_pp0_iter2_reg;
reg   [0:0] select_ln109_4_reg_3430_pp0_iter3_reg;
reg   [0:0] select_ln109_4_reg_3430_pp0_iter4_reg;
wire   [0:0] select_ln109_5_fu_720_p3;
reg   [0:0] select_ln109_5_reg_3436_pp0_iter2_reg;
reg   [0:0] select_ln109_5_reg_3436_pp0_iter3_reg;
reg   [0:0] select_ln109_5_reg_3436_pp0_iter4_reg;
reg   [0:0] select_ln109_5_reg_3436_pp0_iter5_reg;
reg   [0:0] select_ln109_5_reg_3436_pp0_iter6_reg;
wire   [0:0] select_ln109_6_fu_726_p3;
reg   [0:0] select_ln109_6_reg_3443_pp0_iter2_reg;
reg   [0:0] select_ln109_6_reg_3443_pp0_iter3_reg;
reg   [0:0] select_ln109_6_reg_3443_pp0_iter4_reg;
reg   [0:0] select_ln109_6_reg_3443_pp0_iter5_reg;
reg   [0:0] select_ln109_6_reg_3443_pp0_iter6_reg;
reg   [0:0] select_ln109_6_reg_3443_pp0_iter7_reg;
wire   [0:0] and_ln109_fu_749_p2;
reg   [0:0] and_ln109_reg_3449;
wire   [3:0] p_dup_fu_755_p2;
reg   [3:0] p_dup_reg_3455;
wire   [3:0] select_ln111_fu_770_p3;
reg   [3:0] select_ln111_reg_3460;
wire   [11:0] trunc_ln129_5_fu_801_p1;
reg   [11:0] trunc_ln129_5_reg_3468;
wire   [7:0] trunc_ln129_6_fu_805_p1;
reg   [7:0] trunc_ln129_6_reg_3473;
wire   [7:0] add_ln111_fu_809_p2;
reg   [7:0] add_ln111_reg_3478;
wire   [12:0] add_ln109_1_fu_815_p2;
reg   [12:0] add_ln109_1_reg_3483;
wire   [63:0] zext_ln129_5_fu_821_p1;
reg   [63:0] zext_ln129_5_reg_3488;
wire   [3:0] select_ln111_1_fu_836_p3;
reg   [3:0] select_ln111_1_reg_3525;
wire   [11:0] trunc_ln129_3_fu_854_p1;
reg   [11:0] trunc_ln129_3_reg_3535;
wire   [7:0] trunc_ln129_4_fu_858_p1;
reg   [7:0] trunc_ln129_4_reg_3540;
wire   [11:0] sub_ln129_2_fu_869_p2;
reg   [11:0] sub_ln129_2_reg_3545;
wire   [11:0] trunc_ln129_7_fu_895_p1;
reg   [11:0] trunc_ln129_7_reg_3552;
wire   [7:0] trunc_ln129_8_fu_899_p1;
reg   [7:0] trunc_ln129_8_reg_3557;
reg  signed [6:0] L3_Kernel_V_0_0_load_reg_3562;
reg  signed [6:0] L3_Kernel_V_0_1_load_reg_3567;
reg  signed [6:0] L3_Kernel_V_0_2_load_reg_3572;
reg  signed [6:0] L3_Kernel_V_1_0_load_reg_3577;
reg  signed [6:0] L3_Kernel_V_1_1_load_reg_3582;
reg  signed [6:0] L3_Kernel_V_1_2_load_reg_3587;
wire   [11:0] sub_ln129_1_fu_910_p2;
reg   [11:0] sub_ln129_1_reg_3592;
wire   [9:0] grp_fu_3188_p3;
reg   [9:0] empty_160_reg_3599;
wire   [11:0] sub_ln129_3_fu_922_p2;
reg   [11:0] sub_ln129_3_reg_3604;
wire   [11:0] zext_ln129_11_fu_927_p1;
reg   [11:0] zext_ln129_11_reg_3611;
wire   [11:0] add_ln129_8_fu_930_p2;
reg   [11:0] add_ln129_8_reg_3617;
wire   [3:0] add_ln129_fu_935_p2;
reg   [3:0] add_ln129_reg_3622;
wire   [11:0] zext_ln129_15_fu_940_p1;
reg   [11:0] zext_ln129_15_reg_3627;
wire   [11:0] add_ln129_11_fu_944_p2;
reg   [11:0] add_ln129_11_reg_3633;
wire   [7:0] select_ln111_4_fu_949_p3;
reg   [7:0] select_ln111_4_reg_3638;
wire   [12:0] select_ln109_10_fu_955_p3;
reg   [12:0] select_ln109_10_reg_3643;
wire   [11:0] add_ln129_7_fu_964_p2;
reg   [11:0] add_ln129_7_reg_3653;
wire   [11:0] add_ln129_9_fu_972_p2;
reg   [11:0] add_ln129_9_reg_3663;
wire   [11:0] add_ln129_10_fu_976_p2;
reg   [11:0] add_ln129_10_reg_3668;
wire   [11:0] add_ln129_12_fu_984_p2;
reg   [11:0] add_ln129_12_reg_3678;
wire   [11:0] add_ln129_13_fu_997_p2;
reg   [11:0] add_ln129_13_reg_3683;
wire   [11:0] add_ln129_14_fu_1002_p2;
reg   [11:0] add_ln129_14_reg_3688;
wire   [11:0] add_ln129_15_fu_1007_p2;
reg   [11:0] add_ln129_15_reg_3693;
reg   [5:0] L3_bias_V_load_reg_3713;
wire   [12:0] grp_fu_3196_p3;
reg   [12:0] empty_162_reg_3783;
reg  signed [6:0] L3_Kernel_V_2_0_load_reg_3813;
reg  signed [6:0] L3_Kernel_V_2_1_load_reg_3818;
reg  signed [6:0] L3_Kernel_V_2_2_load_reg_3823;
reg   [12:0] output_fmap_addr_reg_3828;
reg   [12:0] output_fmap_addr_reg_3828_pp0_iter2_reg;
reg   [12:0] output_fmap_addr_reg_3828_pp0_iter3_reg;
reg   [12:0] output_fmap_addr_reg_3828_pp0_iter4_reg;
reg   [12:0] output_fmap_addr_reg_3828_pp0_iter5_reg;
reg   [12:0] output_fmap_addr_reg_3828_pp0_iter6_reg;
reg   [12:0] output_fmap_addr_reg_3828_pp0_iter7_reg;
reg   [12:0] output_fmap_addr_reg_3828_pp0_iter8_reg;
reg   [15:0] output_fmap_load_reg_3858;
wire  signed [21:0] grp_fu_3204_p2;
reg  signed [21:0] mul_ln1118_76_reg_3863;
reg  signed [21:0] mul_ln1118_76_reg_3863_pp0_iter3_reg;
reg  signed [21:0] mul_ln1118_76_reg_3863_pp0_iter4_reg;
reg  signed [21:0] mul_ln1118_76_reg_3863_pp0_iter5_reg;
reg   [0:0] tmp_496_reg_3869;
reg   [0:0] tmp_496_reg_3869_pp0_iter3_reg;
reg   [0:0] tmp_496_reg_3869_pp0_iter4_reg;
wire  signed [21:0] grp_fu_3211_p2;
reg  signed [21:0] mul_ln1118_77_reg_3874;
reg  signed [21:0] mul_ln1118_77_reg_3874_pp0_iter3_reg;
reg  signed [21:0] mul_ln1118_77_reg_3874_pp0_iter4_reg;
reg  signed [21:0] mul_ln1118_77_reg_3874_pp0_iter5_reg;
reg   [0:0] tmp_502_reg_3880;
reg   [0:0] tmp_502_reg_3880_pp0_iter3_reg;
reg   [0:0] tmp_502_reg_3880_pp0_iter4_reg;
reg   [0:0] tmp_502_reg_3880_pp0_iter5_reg;
wire   [0:0] icmp_ln121_4_fu_1121_p2;
reg   [0:0] icmp_ln121_4_reg_3895;
wire  signed [21:0] grp_fu_3218_p2;
reg  signed [21:0] mul_ln1118_reg_3905;
reg   [0:0] tmp_478_reg_3911;
wire  signed [21:0] grp_fu_3225_p2;
reg  signed [21:0] mul_ln1118_74_reg_3916;
reg  signed [21:0] mul_ln1118_74_reg_3916_pp0_iter3_reg;
reg   [0:0] tmp_484_reg_3922;
reg   [0:0] tmp_484_reg_3922_pp0_iter3_reg;
wire  signed [15:0] sext_ln107_fu_1147_p1;
reg  signed [15:0] sext_ln107_reg_3932;
reg  signed [15:0] sext_ln107_reg_3932_pp0_iter3_reg;
reg  signed [15:0] sext_ln107_reg_3932_pp0_iter4_reg;
reg  signed [15:0] sext_ln107_reg_3932_pp0_iter5_reg;
reg  signed [15:0] sext_ln107_reg_3932_pp0_iter6_reg;
reg  signed [15:0] sext_ln107_reg_3932_pp0_iter7_reg;
reg  signed [15:0] sext_ln107_reg_3932_pp0_iter8_reg;
wire  signed [23:0] shl_ln_fu_1167_p3;
reg  signed [23:0] shl_ln_reg_3944;
reg   [15:0] trunc_ln_reg_3949;
reg   [0:0] tmp_477_reg_3954;
wire  signed [21:0] grp_fu_3232_p2;
reg  signed [21:0] mul_ln1118_75_reg_3960;
reg  signed [21:0] mul_ln1118_75_reg_3960_pp0_iter3_reg;
reg   [0:0] tmp_490_reg_3966;
reg   [0:0] tmp_490_reg_3966_pp0_iter3_reg;
wire  signed [21:0] grp_fu_3239_p2;
reg  signed [21:0] mul_ln1118_78_reg_3971;
reg  signed [21:0] mul_ln1118_78_reg_3971_pp0_iter3_reg;
reg  signed [21:0] mul_ln1118_78_reg_3971_pp0_iter4_reg;
reg  signed [21:0] mul_ln1118_78_reg_3971_pp0_iter5_reg;
reg  signed [21:0] mul_ln1118_78_reg_3971_pp0_iter6_reg;
reg   [0:0] tmp_508_reg_3977;
reg   [0:0] tmp_508_reg_3977_pp0_iter3_reg;
reg   [0:0] tmp_508_reg_3977_pp0_iter4_reg;
reg   [0:0] tmp_508_reg_3977_pp0_iter5_reg;
reg   [0:0] tmp_508_reg_3977_pp0_iter6_reg;
wire   [15:0] add_ln415_fu_1219_p2;
reg   [15:0] add_ln415_reg_3982;
reg   [0:0] tmp_479_reg_3988;
wire  signed [21:0] grp_fu_3246_p2;
reg  signed [21:0] mul_ln1118_79_reg_3996;
reg  signed [21:0] mul_ln1118_79_reg_3996_pp0_iter3_reg;
reg  signed [21:0] mul_ln1118_79_reg_3996_pp0_iter4_reg;
reg  signed [21:0] mul_ln1118_79_reg_3996_pp0_iter5_reg;
reg  signed [21:0] mul_ln1118_79_reg_3996_pp0_iter6_reg;
reg   [0:0] tmp_514_reg_4002;
reg   [0:0] tmp_514_reg_4002_pp0_iter3_reg;
reg   [0:0] tmp_514_reg_4002_pp0_iter4_reg;
reg   [0:0] tmp_514_reg_4002_pp0_iter5_reg;
reg   [0:0] tmp_514_reg_4002_pp0_iter6_reg;
wire  signed [21:0] grp_fu_3253_p2;
reg  signed [21:0] mul_ln1118_80_reg_4007;
reg  signed [21:0] mul_ln1118_80_reg_4007_pp0_iter3_reg;
reg  signed [21:0] mul_ln1118_80_reg_4007_pp0_iter4_reg;
reg  signed [21:0] mul_ln1118_80_reg_4007_pp0_iter5_reg;
reg  signed [21:0] mul_ln1118_80_reg_4007_pp0_iter6_reg;
reg  signed [21:0] mul_ln1118_80_reg_4007_pp0_iter7_reg;
reg   [0:0] tmp_520_reg_4013;
reg   [0:0] tmp_520_reg_4013_pp0_iter3_reg;
reg   [0:0] tmp_520_reg_4013_pp0_iter4_reg;
reg   [0:0] tmp_520_reg_4013_pp0_iter5_reg;
reg   [0:0] tmp_520_reg_4013_pp0_iter6_reg;
reg   [0:0] tmp_520_reg_4013_pp0_iter7_reg;
reg   [0:0] tmp_476_reg_4018;
wire   [0:0] tmp_480_fu_1276_p3;
reg   [0:0] tmp_480_reg_4024;
wire   [0:0] or_ln778_fu_1289_p2;
reg   [0:0] or_ln778_reg_4029;
wire   [0:0] and_ln781_fu_1320_p2;
reg   [0:0] and_ln781_reg_4034;
wire   [0:0] and_ln786_fu_1326_p2;
reg   [0:0] and_ln786_reg_4040;
wire  signed [21:0] grp_fu_3260_p2;
reg  signed [21:0] mul_ln1118_81_reg_4046;
reg  signed [21:0] mul_ln1118_81_reg_4046_pp0_iter3_reg;
reg  signed [21:0] mul_ln1118_81_reg_4046_pp0_iter4_reg;
reg  signed [21:0] mul_ln1118_81_reg_4046_pp0_iter5_reg;
reg  signed [21:0] mul_ln1118_81_reg_4046_pp0_iter6_reg;
reg  signed [21:0] mul_ln1118_81_reg_4046_pp0_iter7_reg;
reg  signed [21:0] mul_ln1118_81_reg_4046_pp0_iter8_reg;
reg   [0:0] tmp_526_reg_4052;
reg   [0:0] tmp_526_reg_4052_pp0_iter3_reg;
reg   [0:0] tmp_526_reg_4052_pp0_iter4_reg;
reg   [0:0] tmp_526_reg_4052_pp0_iter5_reg;
reg   [0:0] tmp_526_reg_4052_pp0_iter6_reg;
reg   [0:0] tmp_526_reg_4052_pp0_iter7_reg;
reg   [0:0] tmp_526_reg_4052_pp0_iter8_reg;
wire   [15:0] select_ln340_148_fu_1409_p3;
reg   [15:0] select_ln340_148_reg_4057;
wire  signed [23:0] shl_ln728_s_fu_1422_p3;
reg  signed [23:0] shl_ln728_s_reg_4062;
reg   [15:0] trunc_ln708_s_reg_4067;
reg   [0:0] tmp_483_reg_4072;
wire   [15:0] add_ln415_74_fu_1460_p2;
reg   [15:0] add_ln415_74_reg_4078;
reg   [0:0] tmp_485_reg_4084;
reg   [0:0] tmp_482_reg_4092;
wire   [0:0] tmp_486_fu_1503_p3;
reg   [0:0] tmp_486_reg_4098;
wire   [0:0] or_ln778_74_fu_1516_p2;
reg   [0:0] or_ln778_74_reg_4103;
wire   [0:0] and_ln781_74_fu_1547_p2;
reg   [0:0] and_ln781_74_reg_4108;
wire   [0:0] and_ln786_149_fu_1553_p2;
reg   [0:0] and_ln786_149_reg_4114;
wire   [15:0] select_ln340_150_fu_1629_p3;
reg   [15:0] select_ln340_150_reg_4120;
wire  signed [23:0] shl_ln728_73_fu_1642_p3;
reg  signed [23:0] shl_ln728_73_reg_4125;
reg   [15:0] trunc_ln708_72_reg_4130;
reg   [0:0] tmp_489_reg_4135;
wire   [15:0] add_ln415_75_fu_1680_p2;
reg   [15:0] add_ln415_75_reg_4141;
reg   [0:0] tmp_491_reg_4147;
reg   [0:0] tmp_488_reg_4155;
wire   [0:0] tmp_492_fu_1723_p3;
reg   [0:0] tmp_492_reg_4161;
wire   [0:0] or_ln778_75_fu_1736_p2;
reg   [0:0] or_ln778_75_reg_4166;
wire   [0:0] and_ln781_75_fu_1767_p2;
reg   [0:0] and_ln781_75_reg_4171;
wire   [0:0] and_ln786_151_fu_1773_p2;
reg   [0:0] and_ln786_151_reg_4177;
wire   [15:0] select_ln340_152_fu_1849_p3;
reg   [15:0] select_ln340_152_reg_4183;
wire  signed [23:0] shl_ln728_74_fu_1862_p3;
reg  signed [23:0] shl_ln728_74_reg_4188;
reg   [15:0] trunc_ln708_73_reg_4193;
reg   [0:0] tmp_495_reg_4198;
wire   [15:0] add_ln415_76_fu_1900_p2;
reg   [15:0] add_ln415_76_reg_4204;
reg   [0:0] tmp_497_reg_4210;
reg   [0:0] tmp_494_reg_4218;
wire   [0:0] tmp_498_fu_1943_p3;
reg   [0:0] tmp_498_reg_4224;
wire   [0:0] or_ln778_76_fu_1956_p2;
reg   [0:0] or_ln778_76_reg_4229;
wire   [0:0] and_ln781_76_fu_1987_p2;
reg   [0:0] and_ln781_76_reg_4234;
wire   [0:0] and_ln786_153_fu_1993_p2;
reg   [0:0] and_ln786_153_reg_4240;
wire   [15:0] select_ln340_154_fu_2069_p3;
reg   [15:0] select_ln340_154_reg_4246;
wire  signed [23:0] shl_ln728_75_fu_2082_p3;
reg  signed [23:0] shl_ln728_75_reg_4251;
reg   [15:0] trunc_ln708_74_reg_4256;
reg   [0:0] tmp_501_reg_4261;
wire   [15:0] add_ln415_77_fu_2120_p2;
reg   [15:0] add_ln415_77_reg_4267;
reg   [0:0] tmp_503_reg_4273;
reg   [0:0] tmp_500_reg_4281;
wire   [0:0] tmp_504_fu_2163_p3;
reg   [0:0] tmp_504_reg_4287;
wire   [0:0] or_ln778_77_fu_2176_p2;
reg   [0:0] or_ln778_77_reg_4292;
wire   [0:0] and_ln781_77_fu_2207_p2;
reg   [0:0] and_ln781_77_reg_4297;
wire   [0:0] and_ln786_155_fu_2213_p2;
reg   [0:0] and_ln786_155_reg_4303;
wire   [15:0] select_ln340_156_fu_2289_p3;
reg   [15:0] select_ln340_156_reg_4309;
wire  signed [23:0] shl_ln728_76_fu_2302_p3;
reg  signed [23:0] shl_ln728_76_reg_4314;
reg   [15:0] trunc_ln708_75_reg_4319;
reg   [0:0] tmp_507_reg_4324;
wire   [15:0] add_ln415_78_fu_2340_p2;
reg   [15:0] add_ln415_78_reg_4330;
reg   [0:0] tmp_509_reg_4336;
reg   [0:0] tmp_506_reg_4344;
wire   [0:0] tmp_510_fu_2383_p3;
reg   [0:0] tmp_510_reg_4350;
wire   [0:0] or_ln778_78_fu_2396_p2;
reg   [0:0] or_ln778_78_reg_4355;
wire   [0:0] and_ln781_78_fu_2427_p2;
reg   [0:0] and_ln781_78_reg_4360;
wire   [0:0] and_ln786_157_fu_2433_p2;
reg   [0:0] and_ln786_157_reg_4366;
wire   [15:0] select_ln340_158_fu_2509_p3;
reg   [15:0] select_ln340_158_reg_4372;
wire  signed [23:0] shl_ln728_77_fu_2522_p3;
reg  signed [23:0] shl_ln728_77_reg_4377;
reg   [15:0] trunc_ln708_76_reg_4382;
reg   [0:0] tmp_513_reg_4387;
wire   [15:0] add_ln415_79_fu_2560_p2;
reg   [15:0] add_ln415_79_reg_4393;
reg   [0:0] tmp_515_reg_4399;
reg   [0:0] tmp_512_reg_4407;
wire   [0:0] tmp_516_fu_2603_p3;
reg   [0:0] tmp_516_reg_4413;
wire   [0:0] or_ln778_79_fu_2616_p2;
reg   [0:0] or_ln778_79_reg_4418;
wire   [0:0] and_ln781_79_fu_2647_p2;
reg   [0:0] and_ln781_79_reg_4423;
wire   [0:0] and_ln786_159_fu_2653_p2;
reg   [0:0] and_ln786_159_reg_4429;
wire   [15:0] select_ln340_160_fu_2729_p3;
reg   [15:0] select_ln340_160_reg_4435;
wire  signed [23:0] shl_ln728_78_fu_2742_p3;
reg  signed [23:0] shl_ln728_78_reg_4440;
reg   [15:0] trunc_ln708_77_reg_4445;
reg   [0:0] tmp_519_reg_4450;
wire   [15:0] add_ln415_80_fu_2780_p2;
reg   [15:0] add_ln415_80_reg_4456;
reg   [0:0] tmp_521_reg_4462;
reg   [0:0] tmp_518_reg_4470;
wire   [0:0] tmp_522_fu_2823_p3;
reg   [0:0] tmp_522_reg_4476;
wire   [0:0] or_ln778_80_fu_2836_p2;
reg   [0:0] or_ln778_80_reg_4481;
wire   [0:0] and_ln781_80_fu_2867_p2;
reg   [0:0] and_ln781_80_reg_4486;
wire   [0:0] and_ln786_161_fu_2873_p2;
reg   [0:0] and_ln786_161_reg_4492;
wire   [15:0] select_ln340_162_fu_2949_p3;
reg   [15:0] select_ln340_162_reg_4498;
wire  signed [23:0] shl_ln728_79_fu_2973_p3;
reg  signed [23:0] shl_ln728_79_reg_4503;
reg   [15:0] trunc_ln708_78_reg_4508;
reg   [0:0] tmp_525_reg_4513;
wire   [15:0] add_ln415_81_fu_3011_p2;
reg   [15:0] add_ln415_81_reg_4519;
reg   [0:0] tmp_527_reg_4525;
reg   [0:0] tmp_524_reg_4533;
wire   [0:0] tmp_528_fu_3054_p3;
reg   [0:0] tmp_528_reg_4539;
wire   [0:0] or_ln778_81_fu_3067_p2;
reg   [0:0] or_ln778_81_reg_4544;
wire   [0:0] and_ln781_81_fu_3098_p2;
reg   [0:0] and_ln781_81_reg_4549;
wire   [0:0] and_ln786_163_fu_3104_p2;
reg   [0:0] and_ln786_163_reg_4555;
wire   [15:0] select_ln340_164_fu_3180_p3;
reg   [15:0] select_ln340_164_reg_4561;
wire    ap_block_pp0_stage2_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage3_subdone;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg   [16:0] ap_phi_mux_indvar_flatten130_phi_fu_364_p4;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_kernel_number_phi_fu_375_p4;
reg   [12:0] ap_phi_mux_indvar_flatten33_phi_fu_387_p4;
reg   [4:0] ap_phi_mux_kernel_channel_phi_fu_399_p4;
reg   [7:0] ap_phi_mux_indvar_flatten_phi_fu_411_p4;
reg   [3:0] ap_phi_mux_shift_col_num_phi_fu_423_p4;
wire    ap_block_pp0_stage1;
reg   [3:0] ap_phi_mux_shift_row_num_phi_fu_435_p4;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln129_13_fu_968_p1;
wire   [63:0] zext_ln129_17_fu_980_p1;
wire   [63:0] zext_ln107_fu_1012_p1;
wire   [63:0] zext_ln129_12_fu_1016_p1;
wire   [63:0] zext_ln129_16_fu_1020_p1;
wire   [63:0] zext_ln129_20_fu_1033_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln129_21_fu_1037_p1;
wire   [63:0] zext_ln129_14_fu_1055_p1;
wire   [63:0] zext_ln129_18_fu_1063_p1;
wire   [63:0] p_cast_fu_1077_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln129_22_fu_1081_p1;
wire   [8:0] zext_ln129_fu_576_p1;
wire   [8:0] tmp_91_cast_fu_569_p3;
wire   [4:0] sub_ln121_fu_586_p2;
wire   [4:0] trunc_ln129_1_fu_628_p1;
wire   [8:0] tmp_92_cast_fu_631_p3;
wire   [8:0] add_ln129_2_fu_580_p2;
wire   [0:0] icmp_ln121_fu_592_p2;
wire   [0:0] icmp_ln121_1_fu_598_p2;
wire   [0:0] icmp_ln121_2_fu_604_p2;
wire   [8:0] zext_ln129_2_fu_678_p1;
wire   [8:0] tmp_94_cast_fu_639_p3;
wire   [8:0] tmp_fu_690_p3;
wire   [59:0] zext_ln129_4_fu_697_p1;
wire   [59:0] zext_ln129_3_fu_687_p1;
wire   [8:0] add_ln129_3_fu_681_p2;
wire   [8:0] select_ln107_2_fu_652_p3;
wire   [0:0] and_ln107_fu_659_p2;
wire   [0:0] and_ln107_1_fu_664_p2;
wire   [0:0] and_ln107_2_fu_669_p2;
wire   [3:0] empty_fu_616_p2;
wire   [0:0] xor_ln109_fu_739_p2;
wire   [0:0] and_ln107_4_fu_674_p2;
wire   [0:0] or_ln109_1_fu_744_p2;
wire   [0:0] or_ln111_fu_760_p2;
wire   [0:0] or_ln111_1_fu_765_p2;
wire   [3:0] p_mid1_fu_778_p2;
wire   [3:0] select_ln109_8_fu_732_p3;
wire   [3:0] select_ln111_2_fu_783_p3;
wire   [59:0] zext_ln129_8_fu_791_p1;
wire   [59:0] add_ln129_5_fu_795_p2;
wire   [59:0] zext_ln129_7_fu_845_p1;
wire   [59:0] add_ln129_4_fu_849_p2;
wire   [11:0] p_shl6_cast_fu_862_p3;
wire   [3:0] p_mid13_fu_874_p2;
wire   [3:0] select_ln109_9_fu_830_p3;
wire   [3:0] select_ln111_3_fu_879_p3;
wire   [59:0] zext_ln129_9_fu_886_p1;
wire   [59:0] add_ln129_6_fu_890_p2;
wire   [11:0] p_shl7_cast_fu_903_p3;
wire   [11:0] p_shl_cast_fu_915_p3;
wire   [3:0] add_ln129_1_fu_988_p2;
wire   [11:0] zext_ln129_19_fu_993_p1;
wire   [0:0] or_ln107_fu_1150_p2;
wire   [0:0] select_ln109_2_fu_1154_p3;
wire   [15:0] select_ln121_fu_1160_p3;
wire  signed [23:0] sext_ln1192_134_fu_1175_p1;
wire   [23:0] add_ln700_fu_1178_p2;
wire   [15:0] zext_ln415_fu_1216_p1;
wire  signed [24:0] sext_ln703_fu_1246_p1;
wire  signed [24:0] sext_ln1192_fu_1249_p1;
wire   [24:0] add_ln1192_fu_1252_p2;
wire   [0:0] xor_ln416_fu_1266_p2;
wire   [0:0] xor_ln778_fu_1284_p2;
wire   [0:0] tmp_481_fu_1294_p3;
wire   [0:0] xor_ln780_fu_1302_p2;
wire   [0:0] or_ln780_fu_1308_p2;
wire   [0:0] and_ln416_fu_1271_p2;
wire   [0:0] and_ln780_fu_1314_p2;
wire   [0:0] xor_ln778_148_fu_1338_p2;
wire   [0:0] xor_ln785_fu_1342_p2;
wire   [0:0] or_ln785_fu_1348_p2;
wire   [0:0] xor_ln785_148_fu_1353_p2;
wire   [0:0] or_ln786_fu_1364_p2;
wire   [0:0] xor_ln786_fu_1368_p2;
wire   [0:0] and_ln786_148_fu_1374_p2;
wire   [0:0] and_ln785_fu_1358_p2;
wire   [0:0] or_ln340_223_fu_1385_p2;
wire   [0:0] or_ln340_fu_1379_p2;
wire   [0:0] or_ln340_222_fu_1390_p2;
wire   [15:0] select_ln340_fu_1395_p3;
wire   [15:0] select_ln388_fu_1402_p3;
wire   [15:0] select_ln121_1_fu_1417_p3;
wire  signed [23:0] sext_ln1192_136_fu_1430_p1;
wire   [23:0] add_ln700_70_fu_1433_p2;
wire   [15:0] zext_ln415_74_fu_1457_p1;
wire  signed [24:0] sext_ln703_73_fu_1473_p1;
wire  signed [24:0] sext_ln1192_135_fu_1476_p1;
wire   [24:0] add_ln1192_74_fu_1479_p2;
wire   [0:0] xor_ln416_74_fu_1493_p2;
wire   [0:0] xor_ln778_149_fu_1511_p2;
wire   [0:0] tmp_487_fu_1521_p3;
wire   [0:0] xor_ln780_74_fu_1529_p2;
wire   [0:0] or_ln780_74_fu_1535_p2;
wire   [0:0] and_ln416_74_fu_1498_p2;
wire   [0:0] and_ln780_74_fu_1541_p2;
wire   [0:0] xor_ln778_150_fu_1558_p2;
wire   [0:0] xor_ln785_149_fu_1562_p2;
wire   [0:0] or_ln785_74_fu_1568_p2;
wire   [0:0] xor_ln785_150_fu_1573_p2;
wire   [0:0] or_ln786_74_fu_1584_p2;
wire   [0:0] xor_ln786_74_fu_1588_p2;
wire   [0:0] and_ln786_150_fu_1594_p2;
wire   [0:0] and_ln785_74_fu_1578_p2;
wire   [0:0] or_ln340_226_fu_1605_p2;
wire   [0:0] or_ln340_224_fu_1599_p2;
wire   [0:0] or_ln340_225_fu_1610_p2;
wire   [15:0] select_ln340_149_fu_1615_p3;
wire   [15:0] select_ln388_74_fu_1622_p3;
wire   [15:0] select_ln121_2_fu_1637_p3;
wire  signed [23:0] sext_ln1192_138_fu_1650_p1;
wire   [23:0] add_ln700_71_fu_1653_p2;
wire   [15:0] zext_ln415_75_fu_1677_p1;
wire  signed [24:0] sext_ln703_74_fu_1693_p1;
wire  signed [24:0] sext_ln1192_137_fu_1696_p1;
wire   [24:0] add_ln1192_75_fu_1699_p2;
wire   [0:0] xor_ln416_75_fu_1713_p2;
wire   [0:0] xor_ln778_151_fu_1731_p2;
wire   [0:0] tmp_493_fu_1741_p3;
wire   [0:0] xor_ln780_75_fu_1749_p2;
wire   [0:0] or_ln780_75_fu_1755_p2;
wire   [0:0] and_ln416_75_fu_1718_p2;
wire   [0:0] and_ln780_75_fu_1761_p2;
wire   [0:0] xor_ln778_152_fu_1778_p2;
wire   [0:0] xor_ln785_151_fu_1782_p2;
wire   [0:0] or_ln785_75_fu_1788_p2;
wire   [0:0] xor_ln785_152_fu_1793_p2;
wire   [0:0] or_ln786_75_fu_1804_p2;
wire   [0:0] xor_ln786_75_fu_1808_p2;
wire   [0:0] and_ln786_152_fu_1814_p2;
wire   [0:0] and_ln785_75_fu_1798_p2;
wire   [0:0] or_ln340_229_fu_1825_p2;
wire   [0:0] or_ln340_227_fu_1819_p2;
wire   [0:0] or_ln340_228_fu_1830_p2;
wire   [15:0] select_ln340_151_fu_1835_p3;
wire   [15:0] select_ln388_75_fu_1842_p3;
wire   [15:0] select_ln121_3_fu_1857_p3;
wire  signed [23:0] sext_ln1192_140_fu_1870_p1;
wire   [23:0] add_ln700_72_fu_1873_p2;
wire   [15:0] zext_ln415_76_fu_1897_p1;
wire  signed [24:0] sext_ln703_75_fu_1913_p1;
wire  signed [24:0] sext_ln1192_139_fu_1916_p1;
wire   [24:0] add_ln1192_76_fu_1919_p2;
wire   [0:0] xor_ln416_76_fu_1933_p2;
wire   [0:0] xor_ln778_153_fu_1951_p2;
wire   [0:0] tmp_499_fu_1961_p3;
wire   [0:0] xor_ln780_76_fu_1969_p2;
wire   [0:0] or_ln780_76_fu_1975_p2;
wire   [0:0] and_ln416_76_fu_1938_p2;
wire   [0:0] and_ln780_76_fu_1981_p2;
wire   [0:0] xor_ln778_154_fu_1998_p2;
wire   [0:0] xor_ln785_153_fu_2002_p2;
wire   [0:0] or_ln785_76_fu_2008_p2;
wire   [0:0] xor_ln785_154_fu_2013_p2;
wire   [0:0] or_ln786_76_fu_2024_p2;
wire   [0:0] xor_ln786_76_fu_2028_p2;
wire   [0:0] and_ln786_154_fu_2034_p2;
wire   [0:0] and_ln785_76_fu_2018_p2;
wire   [0:0] or_ln340_232_fu_2045_p2;
wire   [0:0] or_ln340_230_fu_2039_p2;
wire   [0:0] or_ln340_231_fu_2050_p2;
wire   [15:0] select_ln340_153_fu_2055_p3;
wire   [15:0] select_ln388_76_fu_2062_p3;
wire   [15:0] select_ln121_4_fu_2077_p3;
wire  signed [23:0] sext_ln1192_142_fu_2090_p1;
wire   [23:0] add_ln700_73_fu_2093_p2;
wire   [15:0] zext_ln415_77_fu_2117_p1;
wire  signed [24:0] sext_ln703_76_fu_2133_p1;
wire  signed [24:0] sext_ln1192_141_fu_2136_p1;
wire   [24:0] add_ln1192_77_fu_2139_p2;
wire   [0:0] xor_ln416_77_fu_2153_p2;
wire   [0:0] xor_ln778_155_fu_2171_p2;
wire   [0:0] tmp_505_fu_2181_p3;
wire   [0:0] xor_ln780_77_fu_2189_p2;
wire   [0:0] or_ln780_77_fu_2195_p2;
wire   [0:0] and_ln416_77_fu_2158_p2;
wire   [0:0] and_ln780_77_fu_2201_p2;
wire   [0:0] xor_ln778_156_fu_2218_p2;
wire   [0:0] xor_ln785_155_fu_2222_p2;
wire   [0:0] or_ln785_77_fu_2228_p2;
wire   [0:0] xor_ln785_156_fu_2233_p2;
wire   [0:0] or_ln786_77_fu_2244_p2;
wire   [0:0] xor_ln786_77_fu_2248_p2;
wire   [0:0] and_ln786_156_fu_2254_p2;
wire   [0:0] and_ln785_77_fu_2238_p2;
wire   [0:0] or_ln340_235_fu_2265_p2;
wire   [0:0] or_ln340_233_fu_2259_p2;
wire   [0:0] or_ln340_234_fu_2270_p2;
wire   [15:0] select_ln340_155_fu_2275_p3;
wire   [15:0] select_ln388_77_fu_2282_p3;
wire   [15:0] select_ln121_5_fu_2297_p3;
wire  signed [23:0] sext_ln1192_144_fu_2310_p1;
wire   [23:0] add_ln700_74_fu_2313_p2;
wire   [15:0] zext_ln415_78_fu_2337_p1;
wire  signed [24:0] sext_ln703_77_fu_2353_p1;
wire  signed [24:0] sext_ln1192_143_fu_2356_p1;
wire   [24:0] add_ln1192_78_fu_2359_p2;
wire   [0:0] xor_ln416_78_fu_2373_p2;
wire   [0:0] xor_ln778_157_fu_2391_p2;
wire   [0:0] tmp_511_fu_2401_p3;
wire   [0:0] xor_ln780_78_fu_2409_p2;
wire   [0:0] or_ln780_78_fu_2415_p2;
wire   [0:0] and_ln416_78_fu_2378_p2;
wire   [0:0] and_ln780_78_fu_2421_p2;
wire   [0:0] xor_ln778_158_fu_2438_p2;
wire   [0:0] xor_ln785_157_fu_2442_p2;
wire   [0:0] or_ln785_78_fu_2448_p2;
wire   [0:0] xor_ln785_158_fu_2453_p2;
wire   [0:0] or_ln786_78_fu_2464_p2;
wire   [0:0] xor_ln786_78_fu_2468_p2;
wire   [0:0] and_ln786_158_fu_2474_p2;
wire   [0:0] and_ln785_78_fu_2458_p2;
wire   [0:0] or_ln340_238_fu_2485_p2;
wire   [0:0] or_ln340_236_fu_2479_p2;
wire   [0:0] or_ln340_237_fu_2490_p2;
wire   [15:0] select_ln340_157_fu_2495_p3;
wire   [15:0] select_ln388_78_fu_2502_p3;
wire   [15:0] select_ln121_6_fu_2517_p3;
wire  signed [23:0] sext_ln1192_146_fu_2530_p1;
wire   [23:0] add_ln700_75_fu_2533_p2;
wire   [15:0] zext_ln415_79_fu_2557_p1;
wire  signed [24:0] sext_ln703_78_fu_2573_p1;
wire  signed [24:0] sext_ln1192_145_fu_2576_p1;
wire   [24:0] add_ln1192_79_fu_2579_p2;
wire   [0:0] xor_ln416_79_fu_2593_p2;
wire   [0:0] xor_ln778_159_fu_2611_p2;
wire   [0:0] tmp_517_fu_2621_p3;
wire   [0:0] xor_ln780_79_fu_2629_p2;
wire   [0:0] or_ln780_79_fu_2635_p2;
wire   [0:0] and_ln416_79_fu_2598_p2;
wire   [0:0] and_ln780_79_fu_2641_p2;
wire   [0:0] xor_ln778_160_fu_2658_p2;
wire   [0:0] xor_ln785_159_fu_2662_p2;
wire   [0:0] or_ln785_79_fu_2668_p2;
wire   [0:0] xor_ln785_160_fu_2673_p2;
wire   [0:0] or_ln786_79_fu_2684_p2;
wire   [0:0] xor_ln786_79_fu_2688_p2;
wire   [0:0] and_ln786_160_fu_2694_p2;
wire   [0:0] and_ln785_79_fu_2678_p2;
wire   [0:0] or_ln340_241_fu_2705_p2;
wire   [0:0] or_ln340_239_fu_2699_p2;
wire   [0:0] or_ln340_240_fu_2710_p2;
wire   [15:0] select_ln340_159_fu_2715_p3;
wire   [15:0] select_ln388_79_fu_2722_p3;
wire   [15:0] select_ln121_7_fu_2737_p3;
wire  signed [23:0] sext_ln1192_148_fu_2750_p1;
wire   [23:0] add_ln700_76_fu_2753_p2;
wire   [15:0] zext_ln415_80_fu_2777_p1;
wire  signed [24:0] sext_ln703_79_fu_2793_p1;
wire  signed [24:0] sext_ln1192_147_fu_2796_p1;
wire   [24:0] add_ln1192_80_fu_2799_p2;
wire   [0:0] xor_ln416_80_fu_2813_p2;
wire   [0:0] xor_ln778_161_fu_2831_p2;
wire   [0:0] tmp_523_fu_2841_p3;
wire   [0:0] xor_ln780_80_fu_2849_p2;
wire   [0:0] or_ln780_80_fu_2855_p2;
wire   [0:0] and_ln416_80_fu_2818_p2;
wire   [0:0] and_ln780_80_fu_2861_p2;
wire   [0:0] xor_ln778_162_fu_2878_p2;
wire   [0:0] xor_ln785_161_fu_2882_p2;
wire   [0:0] or_ln785_80_fu_2888_p2;
wire   [0:0] xor_ln785_162_fu_2893_p2;
wire   [0:0] or_ln786_80_fu_2904_p2;
wire   [0:0] xor_ln786_80_fu_2908_p2;
wire   [0:0] and_ln786_162_fu_2914_p2;
wire   [0:0] and_ln785_80_fu_2898_p2;
wire   [0:0] or_ln340_244_fu_2925_p2;
wire   [0:0] or_ln340_242_fu_2919_p2;
wire   [0:0] or_ln340_243_fu_2930_p2;
wire   [15:0] select_ln340_161_fu_2935_p3;
wire   [15:0] select_ln388_80_fu_2942_p3;
wire   [0:0] and_ln107_3_fu_2957_p2;
wire   [0:0] select_ln109_7_fu_2961_p3;
wire   [15:0] select_ln121_8_fu_2967_p3;
wire  signed [23:0] sext_ln1192_150_fu_2981_p1;
wire   [23:0] add_ln700_77_fu_2984_p2;
wire   [15:0] zext_ln415_81_fu_3008_p1;
wire  signed [24:0] sext_ln703_80_fu_3024_p1;
wire  signed [24:0] sext_ln1192_149_fu_3027_p1;
wire   [24:0] add_ln1192_81_fu_3030_p2;
wire   [0:0] xor_ln416_81_fu_3044_p2;
wire   [0:0] xor_ln778_163_fu_3062_p2;
wire   [0:0] tmp_529_fu_3072_p3;
wire   [0:0] xor_ln780_81_fu_3080_p2;
wire   [0:0] or_ln780_81_fu_3086_p2;
wire   [0:0] and_ln416_81_fu_3049_p2;
wire   [0:0] and_ln780_81_fu_3092_p2;
wire   [0:0] xor_ln778_164_fu_3109_p2;
wire   [0:0] xor_ln785_163_fu_3113_p2;
wire   [0:0] or_ln785_81_fu_3119_p2;
wire   [0:0] xor_ln785_164_fu_3124_p2;
wire   [0:0] or_ln786_81_fu_3135_p2;
wire   [0:0] xor_ln786_81_fu_3139_p2;
wire   [0:0] and_ln786_164_fu_3145_p2;
wire   [0:0] and_ln785_81_fu_3129_p2;
wire   [0:0] or_ln340_247_fu_3156_p2;
wire   [0:0] or_ln340_245_fu_3150_p2;
wire   [0:0] or_ln340_246_fu_3161_p2;
wire   [15:0] select_ln340_163_fu_3166_p3;
wire   [15:0] select_ln388_81_fu_3173_p3;
wire   [4:0] grp_fu_3188_p0;
wire   [5:0] grp_fu_3188_p1;
wire   [3:0] grp_fu_3188_p2;
wire   [4:0] grp_fu_3196_p0;
wire   [9:0] grp_fu_3196_p1;
wire   [3:0] grp_fu_3196_p2;
wire   [14:0] grp_fu_3204_p0;
wire   [14:0] grp_fu_3211_p0;
wire   [14:0] grp_fu_3218_p0;
wire   [14:0] grp_fu_3225_p0;
wire   [14:0] grp_fu_3232_p0;
wire   [14:0] grp_fu_3239_p0;
wire   [14:0] grp_fu_3246_p0;
wire   [14:0] grp_fu_3253_p0;
wire   [14:0] grp_fu_3260_p0;
wire    ap_CS_fsm_state51;
reg   [6:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [9:0] grp_fu_3188_p10;
wire   [9:0] grp_fu_3188_p20;
wire   [12:0] grp_fu_3196_p10;
wire   [12:0] grp_fu_3196_p20;
wire   [21:0] grp_fu_3204_p00;
wire   [21:0] grp_fu_3211_p00;
wire   [21:0] grp_fu_3218_p00;
wire   [21:0] grp_fu_3225_p00;
wire   [21:0] grp_fu_3232_p00;
wire   [21:0] grp_fu_3239_p00;
wire   [21:0] grp_fu_3246_p00;
wire   [21:0] grp_fu_3253_p00;
wire   [21:0] grp_fu_3260_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
end

process_element_L3_conv2d_L3_bias_V #(
    .DataWidth( 6 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
L3_bias_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L3_bias_V_address0),
    .ce0(L3_bias_V_ce0),
    .q0(L3_bias_V_q0)
);

process_element_L3_conv2d_L3_Kernel_V_0_0 #(
    .DataWidth( 7 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
L3_Kernel_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L3_Kernel_V_0_0_address0),
    .ce0(L3_Kernel_V_0_0_ce0),
    .q0(L3_Kernel_V_0_0_q0)
);

process_element_L3_conv2d_L3_Kernel_V_0_1 #(
    .DataWidth( 7 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
L3_Kernel_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L3_Kernel_V_0_1_address0),
    .ce0(L3_Kernel_V_0_1_ce0),
    .q0(L3_Kernel_V_0_1_q0)
);

process_element_L3_conv2d_L3_Kernel_V_0_2 #(
    .DataWidth( 7 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
L3_Kernel_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L3_Kernel_V_0_2_address0),
    .ce0(L3_Kernel_V_0_2_ce0),
    .q0(L3_Kernel_V_0_2_q0)
);

process_element_L3_conv2d_L3_Kernel_V_1_0 #(
    .DataWidth( 7 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
L3_Kernel_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L3_Kernel_V_1_0_address0),
    .ce0(L3_Kernel_V_1_0_ce0),
    .q0(L3_Kernel_V_1_0_q0)
);

process_element_L3_conv2d_L3_Kernel_V_1_1 #(
    .DataWidth( 7 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
L3_Kernel_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L3_Kernel_V_1_1_address0),
    .ce0(L3_Kernel_V_1_1_ce0),
    .q0(L3_Kernel_V_1_1_q0)
);

process_element_L3_conv2d_L3_Kernel_V_1_2 #(
    .DataWidth( 7 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
L3_Kernel_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L3_Kernel_V_1_2_address0),
    .ce0(L3_Kernel_V_1_2_ce0),
    .q0(L3_Kernel_V_1_2_q0)
);

process_element_L3_conv2d_L3_Kernel_V_2_0 #(
    .DataWidth( 7 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
L3_Kernel_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L3_Kernel_V_2_0_address0),
    .ce0(L3_Kernel_V_2_0_ce0),
    .q0(L3_Kernel_V_2_0_q0)
);

process_element_L3_conv2d_L3_Kernel_V_2_1 #(
    .DataWidth( 7 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
L3_Kernel_V_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L3_Kernel_V_2_1_address0),
    .ce0(L3_Kernel_V_2_1_ce0),
    .q0(L3_Kernel_V_2_1_q0)
);

process_element_L3_conv2d_L3_Kernel_V_2_2 #(
    .DataWidth( 7 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
L3_Kernel_V_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(L3_Kernel_V_2_2_address0),
    .ce0(L3_Kernel_V_2_2_ce0),
    .q0(L3_Kernel_V_2_2_q0)
);

process_element_mac_muladd_5ns_6ns_4ns_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
mac_muladd_5ns_6ns_4ns_10_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3188_p0),
    .din1(grp_fu_3188_p1),
    .din2(grp_fu_3188_p2),
    .ce(1'b1),
    .dout(grp_fu_3188_p3)
);

process_element_mac_muladd_5ns_10ns_4ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 13 ))
mac_muladd_5ns_10ns_4ns_13_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3196_p0),
    .din1(grp_fu_3196_p1),
    .din2(grp_fu_3196_p2),
    .ce(1'b1),
    .dout(grp_fu_3196_p3)
);

process_element_mul_mul_15ns_7s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 22 ))
mul_mul_15ns_7s_22_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3204_p0),
    .din1(L3_Kernel_V_1_0_load_reg_3577),
    .ce(1'b1),
    .dout(grp_fu_3204_p2)
);

process_element_mul_mul_15ns_7s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 22 ))
mul_mul_15ns_7s_22_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3211_p0),
    .din1(L3_Kernel_V_1_1_load_reg_3582),
    .ce(1'b1),
    .dout(grp_fu_3211_p2)
);

process_element_mul_mul_15ns_7s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 22 ))
mul_mul_15ns_7s_22_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3218_p0),
    .din1(L3_Kernel_V_0_0_load_reg_3562),
    .ce(1'b1),
    .dout(grp_fu_3218_p2)
);

process_element_mul_mul_15ns_7s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 22 ))
mul_mul_15ns_7s_22_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3225_p0),
    .din1(L3_Kernel_V_0_1_load_reg_3567),
    .ce(1'b1),
    .dout(grp_fu_3225_p2)
);

process_element_mul_mul_15ns_7s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 22 ))
mul_mul_15ns_7s_22_4_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3232_p0),
    .din1(L3_Kernel_V_0_2_load_reg_3572),
    .ce(1'b1),
    .dout(grp_fu_3232_p2)
);

process_element_mul_mul_15ns_7s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 22 ))
mul_mul_15ns_7s_22_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3239_p0),
    .din1(L3_Kernel_V_1_2_load_reg_3587),
    .ce(1'b1),
    .dout(grp_fu_3239_p2)
);

process_element_mul_mul_15ns_7s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 22 ))
mul_mul_15ns_7s_22_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3246_p0),
    .din1(L3_Kernel_V_2_0_load_reg_3813),
    .ce(1'b1),
    .dout(grp_fu_3246_p2)
);

process_element_mul_mul_15ns_7s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 22 ))
mul_mul_15ns_7s_22_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3253_p0),
    .din1(L3_Kernel_V_2_1_load_reg_3818),
    .ce(1'b1),
    .dout(grp_fu_3253_p2)
);

process_element_mul_mul_15ns_7s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 22 ))
mul_mul_15ns_7s_22_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3260_p0),
    .din1(L3_Kernel_V_2_2_load_reg_3823),
    .ce(1'b1),
    .dout(grp_fu_3260_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter8 == 1'b0)))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten130_reg_360 <= add_ln107_1_reg_3276;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten130_reg_360 <= 17'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten33_reg_383 <= select_ln109_10_reg_3643;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten33_reg_383 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        indvar_flatten_reg_407 <= select_ln111_4_reg_3638;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_407 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_channel_reg_395 <= select_ln109_1_reg_3377;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        kernel_channel_reg_395 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        kernel_number_reg_371 <= select_ln107_1_reg_3324;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        kernel_number_reg_371 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        reg_443 <= input_fmap_q0;
    end else if ((((select_ln109_6_reg_3443_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((select_ln109_6_reg_3443_pp0_iter1_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter1_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (select_ln109_4_reg_3430 == 1'd0) & (select_ln109_6_reg_3443 == 1'd0) & (select_ln109_5_reg_3436 == 1'd0) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln109_6_reg_3443 == 1'd0) & (select_ln109_5_reg_3436 == 1'd0) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_443 <= input_fmap_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        shift_col_num_reg_419 <= select_ln111_1_reg_3525;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        shift_col_num_reg_419 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        shift_row_num_reg_431 <= add_ln129_reg_3622;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        shift_row_num_reg_431 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln109_4_reg_3430 == 1'd0) & (select_ln109_6_reg_3443 == 1'd0) & (select_ln109_5_reg_3436 == 1'd0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        L3_Kernel_V_0_0_load_reg_3562 <= L3_Kernel_V_0_0_q0;
        L3_Kernel_V_0_1_load_reg_3567 <= L3_Kernel_V_0_1_q0;
        L3_Kernel_V_0_2_load_reg_3572 <= L3_Kernel_V_0_2_q0;
        sub_ln129_1_reg_3592 <= sub_ln129_1_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln109_6_reg_3443 == 1'd0) & (select_ln109_5_reg_3436 == 1'd0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        L3_Kernel_V_1_0_load_reg_3577 <= L3_Kernel_V_1_0_q0;
        L3_Kernel_V_1_1_load_reg_3582 <= L3_Kernel_V_1_1_q0;
        L3_Kernel_V_1_2_load_reg_3587 <= L3_Kernel_V_1_2_q0;
        add_ln129_11_reg_3633 <= add_ln129_11_fu_944_p2;
        add_ln129_8_reg_3617 <= add_ln129_8_fu_930_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        L3_Kernel_V_2_0_load_reg_3813 <= L3_Kernel_V_2_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        L3_Kernel_V_2_1_load_reg_3818 <= L3_Kernel_V_2_1_q0;
        L3_Kernel_V_2_2_load_reg_3823 <= L3_Kernel_V_2_2_q0;
        output_fmap_addr_reg_3828 <= p_cast_fu_1077_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        L3_bias_V_load_reg_3713 <= L3_bias_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln107_1_reg_3276 <= add_ln107_1_fu_462_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_456_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln107_reg_3281 <= add_ln107_fu_468_p2;
        icmp_ln109_reg_3287 <= icmp_ln109_fu_474_p2;
        icmp_ln111_reg_3318 <= icmp_ln111_fu_494_p2;
        select_ln107_reg_3298 <= select_ln107_fu_480_p3;
        xor_ln107_reg_3308 <= xor_ln107_fu_488_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_reg_3287 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln109_1_reg_3483 <= add_ln109_1_fu_815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln109_reg_3356 <= add_ln109_fu_524_p2;
        and_ln107_5_reg_3345 <= and_ln107_5_fu_520_p2;
        icmp_ln113_reg_3340 <= icmp_ln113_fu_514_p2;
        icmp_ln121_5_reg_3384 <= icmp_ln121_5_fu_549_p2;
        icmp_ln121_6_reg_3389 <= icmp_ln121_6_fu_554_p2;
        icmp_ln121_7_reg_3394 <= icmp_ln121_7_fu_559_p2;
        icmp_ln121_8_reg_3399 <= icmp_ln121_8_fu_564_p2;
        or_ln109_reg_3362 <= or_ln109_fu_529_p2;
        select_ln109_reg_3369 <= select_ln109_fu_534_p3;
        trunc_ln129_2_reg_3335 <= trunc_ln129_2_fu_510_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln109_reg_3356_pp0_iter1_reg <= add_ln109_reg_3356;
        and_ln107_5_reg_3345_pp0_iter1_reg <= and_ln107_5_reg_3345;
        and_ln107_5_reg_3345_pp0_iter2_reg <= and_ln107_5_reg_3345_pp0_iter1_reg;
        and_ln107_5_reg_3345_pp0_iter3_reg <= and_ln107_5_reg_3345_pp0_iter2_reg;
        and_ln107_5_reg_3345_pp0_iter4_reg <= and_ln107_5_reg_3345_pp0_iter3_reg;
        and_ln107_5_reg_3345_pp0_iter5_reg <= and_ln107_5_reg_3345_pp0_iter4_reg;
        and_ln107_5_reg_3345_pp0_iter6_reg <= and_ln107_5_reg_3345_pp0_iter5_reg;
        and_ln107_5_reg_3345_pp0_iter7_reg <= and_ln107_5_reg_3345_pp0_iter6_reg;
        and_ln107_5_reg_3345_pp0_iter8_reg <= and_ln107_5_reg_3345_pp0_iter7_reg;
        icmp_ln121_8_reg_3399_pp0_iter1_reg <= icmp_ln121_8_reg_3399;
        icmp_ln121_8_reg_3399_pp0_iter2_reg <= icmp_ln121_8_reg_3399_pp0_iter1_reg;
        icmp_ln121_8_reg_3399_pp0_iter3_reg <= icmp_ln121_8_reg_3399_pp0_iter2_reg;
        icmp_ln121_8_reg_3399_pp0_iter4_reg <= icmp_ln121_8_reg_3399_pp0_iter3_reg;
        icmp_ln121_8_reg_3399_pp0_iter5_reg <= icmp_ln121_8_reg_3399_pp0_iter4_reg;
        icmp_ln121_8_reg_3399_pp0_iter6_reg <= icmp_ln121_8_reg_3399_pp0_iter5_reg;
        icmp_ln121_8_reg_3399_pp0_iter7_reg <= icmp_ln121_8_reg_3399_pp0_iter6_reg;
        icmp_ln121_8_reg_3399_pp0_iter8_reg <= icmp_ln121_8_reg_3399_pp0_iter7_reg;
        mul_ln1118_74_reg_3916_pp0_iter3_reg <= mul_ln1118_74_reg_3916;
        tmp_484_reg_3922_pp0_iter3_reg <= tmp_484_reg_3922;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln109_reg_3362 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln111_reg_3478 <= add_ln111_fu_809_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln109_4_reg_3430 == 1'd0) & (select_ln109_6_reg_3443 == 1'd0) & (select_ln109_5_reg_3436 == 1'd0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln129_10_reg_3668 <= add_ln129_10_fu_976_p2;
        add_ln129_13_reg_3683 <= add_ln129_13_fu_997_p2;
        add_ln129_7_reg_3653 <= add_ln129_7_fu_964_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln129_12_reg_3678 <= add_ln129_12_fu_984_p2;
        add_ln129_15_reg_3693 <= add_ln129_15_fu_1007_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln109_6_reg_3443 == 1'd0) & (select_ln109_5_reg_3436 == 1'd0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln129_14_reg_3688 <= add_ln129_14_fu_1002_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln109_6_reg_3443 == 1'd0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln129_9_reg_3663 <= add_ln129_9_fu_972_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln129_reg_3622 <= add_ln129_fu_935_p2;
        empty_160_reg_3599 <= grp_fu_3188_p3;
        select_ln109_10_reg_3643 <= select_ln109_10_fu_955_p3;
        select_ln111_4_reg_3638 <= select_ln111_4_fu_949_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter2_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter2_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter2_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln415_74_reg_4078 <= add_ln415_74_fu_1460_p2;
        tmp_485_reg_4084 <= add_ln415_74_fu_1460_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter3_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter3_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter3_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln415_75_reg_4141 <= add_ln415_75_fu_1680_p2;
        tmp_491_reg_4147 <= add_ln415_75_fu_1680_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter4_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter4_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln415_76_reg_4204 <= add_ln415_76_fu_1900_p2;
        tmp_497_reg_4210 <= add_ln415_76_fu_1900_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter5_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter5_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln415_77_reg_4267 <= add_ln415_77_fu_2120_p2;
        tmp_503_reg_4273 <= add_ln415_77_fu_2120_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter6_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter6_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_ln415_78_reg_4330 <= add_ln415_78_fu_2340_p2;
        tmp_509_reg_4336 <= add_ln415_78_fu_2340_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter6_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln415_79_reg_4393 <= add_ln415_79_fu_2560_p2;
        tmp_515_reg_4399 <= add_ln415_79_fu_2560_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln415_80_reg_4456 <= add_ln415_80_fu_2780_p2;
        tmp_521_reg_4462 <= add_ln415_80_fu_2780_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln415_81_reg_4519 <= add_ln415_81_fu_3011_p2;
        tmp_527_reg_4525 <= add_ln415_81_fu_3011_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter2_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter2_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter2_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_ln415_reg_3982 <= add_ln415_fu_1219_p2;
        tmp_479_reg_3988 <= add_ln415_fu_1219_p2[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        and_ln109_reg_3449 <= and_ln109_fu_749_p2;
        p_dup_reg_3455 <= p_dup_fu_755_p2;
        select_ln109_3_reg_3425 <= select_ln109_3_fu_707_p3;
        select_ln109_4_reg_3430 <= select_ln109_4_fu_714_p3;
        select_ln109_5_reg_3436 <= select_ln109_5_fu_720_p3;
        select_ln109_6_reg_3443 <= select_ln109_6_fu_726_p3;
        select_ln111_reg_3460 <= select_ln111_fu_770_p3;
        sub_ln129_reg_3419 <= sub_ln129_fu_701_p2;
        trunc_ln129_5_reg_3468 <= trunc_ln129_5_fu_801_p1;
        trunc_ln129_6_reg_3473 <= trunc_ln129_6_fu_805_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter3_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter3_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter3_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        and_ln781_74_reg_4108 <= and_ln781_74_fu_1547_p2;
        and_ln786_149_reg_4114 <= and_ln786_149_fu_1553_p2;
        or_ln778_74_reg_4103 <= or_ln778_74_fu_1516_p2;
        tmp_482_reg_4092 <= add_ln1192_74_fu_1479_p2[32'd24];
        tmp_486_reg_4098 <= add_ln1192_74_fu_1479_p2[32'd24];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter3_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter3_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter3_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        and_ln781_75_reg_4171 <= and_ln781_75_fu_1767_p2;
        and_ln786_151_reg_4177 <= and_ln786_151_fu_1773_p2;
        or_ln778_75_reg_4166 <= or_ln778_75_fu_1736_p2;
        tmp_488_reg_4155 <= add_ln1192_75_fu_1699_p2[32'd24];
        tmp_492_reg_4161 <= add_ln1192_75_fu_1699_p2[32'd24];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter4_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter4_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln781_76_reg_4234 <= and_ln781_76_fu_1987_p2;
        and_ln786_153_reg_4240 <= and_ln786_153_fu_1993_p2;
        or_ln778_76_reg_4229 <= or_ln778_76_fu_1956_p2;
        tmp_494_reg_4218 <= add_ln1192_76_fu_1919_p2[32'd24];
        tmp_498_reg_4224 <= add_ln1192_76_fu_1919_p2[32'd24];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter5_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter5_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln781_77_reg_4297 <= and_ln781_77_fu_2207_p2;
        and_ln786_155_reg_4303 <= and_ln786_155_fu_2213_p2;
        or_ln778_77_reg_4292 <= or_ln778_77_fu_2176_p2;
        tmp_500_reg_4281 <= add_ln1192_77_fu_2139_p2[32'd24];
        tmp_504_reg_4287 <= add_ln1192_77_fu_2139_p2[32'd24];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter6_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter6_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        and_ln781_78_reg_4360 <= and_ln781_78_fu_2427_p2;
        and_ln786_157_reg_4366 <= and_ln786_157_fu_2433_p2;
        or_ln778_78_reg_4355 <= or_ln778_78_fu_2396_p2;
        tmp_506_reg_4344 <= add_ln1192_78_fu_2359_p2[32'd24];
        tmp_510_reg_4350 <= add_ln1192_78_fu_2359_p2[32'd24];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter7_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        and_ln781_79_reg_4423 <= and_ln781_79_fu_2647_p2;
        and_ln786_159_reg_4429 <= and_ln786_159_fu_2653_p2;
        or_ln778_79_reg_4418 <= or_ln778_79_fu_2616_p2;
        tmp_512_reg_4407 <= add_ln1192_79_fu_2579_p2[32'd24];
        tmp_516_reg_4413 <= add_ln1192_79_fu_2579_p2[32'd24];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        and_ln781_80_reg_4486 <= and_ln781_80_fu_2867_p2;
        and_ln786_161_reg_4492 <= and_ln786_161_fu_2873_p2;
        or_ln778_80_reg_4481 <= or_ln778_80_fu_2836_p2;
        tmp_518_reg_4470 <= add_ln1192_80_fu_2799_p2[32'd24];
        tmp_522_reg_4476 <= add_ln1192_80_fu_2799_p2[32'd24];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln781_81_reg_4549 <= and_ln781_81_fu_3098_p2;
        and_ln786_163_reg_4555 <= and_ln786_163_fu_3104_p2;
        or_ln778_81_reg_4544 <= or_ln778_81_fu_3067_p2;
        tmp_524_reg_4533 <= add_ln1192_81_fu_3030_p2[32'd24];
        tmp_528_reg_4539 <= add_ln1192_81_fu_3030_p2[32'd24];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter2_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter2_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter2_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        and_ln781_reg_4034 <= and_ln781_fu_1320_p2;
        and_ln786_reg_4040 <= and_ln786_fu_1326_p2;
        or_ln778_reg_4029 <= or_ln778_fu_1289_p2;
        tmp_476_reg_4018 <= add_ln1192_fu_1252_p2[32'd24];
        tmp_480_reg_4024 <= add_ln1192_fu_1252_p2[32'd24];
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln109_reg_3362 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        empty_157_reg_3409 <= empty_157_fu_622_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        empty_162_reg_3783 <= grp_fu_3196_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln107_reg_3272 <= icmp_ln107_fu_456_p2;
        icmp_ln107_reg_3272_pp0_iter1_reg <= icmp_ln107_reg_3272;
        icmp_ln107_reg_3272_pp0_iter2_reg <= icmp_ln107_reg_3272_pp0_iter1_reg;
        icmp_ln107_reg_3272_pp0_iter3_reg <= icmp_ln107_reg_3272_pp0_iter2_reg;
        icmp_ln107_reg_3272_pp0_iter4_reg <= icmp_ln107_reg_3272_pp0_iter3_reg;
        icmp_ln107_reg_3272_pp0_iter5_reg <= icmp_ln107_reg_3272_pp0_iter4_reg;
        icmp_ln107_reg_3272_pp0_iter6_reg <= icmp_ln107_reg_3272_pp0_iter5_reg;
        icmp_ln107_reg_3272_pp0_iter7_reg <= icmp_ln107_reg_3272_pp0_iter6_reg;
        icmp_ln107_reg_3272_pp0_iter8_reg <= icmp_ln107_reg_3272_pp0_iter7_reg;
        icmp_ln107_reg_3272_pp0_iter9_reg <= icmp_ln107_reg_3272_pp0_iter8_reg;
        icmp_ln109_reg_3287_pp0_iter1_reg <= icmp_ln109_reg_3287;
        icmp_ln109_reg_3287_pp0_iter2_reg <= icmp_ln109_reg_3287_pp0_iter1_reg;
        mul_ln1118_76_reg_3863_pp0_iter3_reg <= mul_ln1118_76_reg_3863;
        mul_ln1118_76_reg_3863_pp0_iter4_reg <= mul_ln1118_76_reg_3863_pp0_iter3_reg;
        mul_ln1118_76_reg_3863_pp0_iter5_reg <= mul_ln1118_76_reg_3863_pp0_iter4_reg;
        mul_ln1118_77_reg_3874_pp0_iter3_reg <= mul_ln1118_77_reg_3874;
        mul_ln1118_77_reg_3874_pp0_iter4_reg <= mul_ln1118_77_reg_3874_pp0_iter3_reg;
        mul_ln1118_77_reg_3874_pp0_iter5_reg <= mul_ln1118_77_reg_3874_pp0_iter4_reg;
        tmp_496_reg_3869_pp0_iter3_reg <= tmp_496_reg_3869;
        tmp_496_reg_3869_pp0_iter4_reg <= tmp_496_reg_3869_pp0_iter3_reg;
        tmp_502_reg_3880_pp0_iter3_reg <= tmp_502_reg_3880;
        tmp_502_reg_3880_pp0_iter4_reg <= tmp_502_reg_3880_pp0_iter3_reg;
        tmp_502_reg_3880_pp0_iter5_reg <= tmp_502_reg_3880_pp0_iter4_reg;
        trunc_ln129_reg_3267 <= trunc_ln129_fu_452_p1;
        xor_ln107_reg_3308_pp0_iter1_reg <= xor_ln107_reg_3308;
        xor_ln107_reg_3308_pp0_iter2_reg <= xor_ln107_reg_3308_pp0_iter1_reg;
        xor_ln107_reg_3308_pp0_iter3_reg <= xor_ln107_reg_3308_pp0_iter2_reg;
        xor_ln107_reg_3308_pp0_iter4_reg <= xor_ln107_reg_3308_pp0_iter3_reg;
        xor_ln107_reg_3308_pp0_iter5_reg <= xor_ln107_reg_3308_pp0_iter4_reg;
        xor_ln107_reg_3308_pp0_iter6_reg <= xor_ln107_reg_3308_pp0_iter5_reg;
        xor_ln107_reg_3308_pp0_iter7_reg <= xor_ln107_reg_3308_pp0_iter6_reg;
        xor_ln107_reg_3308_pp0_iter8_reg <= xor_ln107_reg_3308_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == and_ln107_5_reg_3345) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        icmp_ln12151_reg_3414 <= icmp_ln12151_fu_646_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        icmp_ln12151_reg_3414_pp0_iter1_reg <= icmp_ln12151_reg_3414;
        icmp_ln121_3_reg_3404_pp0_iter1_reg <= icmp_ln121_3_reg_3404;
        icmp_ln121_3_reg_3404_pp0_iter2_reg <= icmp_ln121_3_reg_3404_pp0_iter1_reg;
        icmp_ln121_3_reg_3404_pp0_iter3_reg <= icmp_ln121_3_reg_3404_pp0_iter2_reg;
        icmp_ln121_3_reg_3404_pp0_iter4_reg <= icmp_ln121_3_reg_3404_pp0_iter3_reg;
        icmp_ln121_3_reg_3404_pp0_iter5_reg <= icmp_ln121_3_reg_3404_pp0_iter4_reg;
        icmp_ln121_3_reg_3404_pp0_iter6_reg <= icmp_ln121_3_reg_3404_pp0_iter5_reg;
        icmp_ln121_3_reg_3404_pp0_iter7_reg <= icmp_ln121_3_reg_3404_pp0_iter6_reg;
        icmp_ln121_3_reg_3404_pp0_iter8_reg <= icmp_ln121_3_reg_3404_pp0_iter7_reg;
        mul_ln1118_75_reg_3960_pp0_iter3_reg <= mul_ln1118_75_reg_3960;
        mul_ln1118_78_reg_3971_pp0_iter3_reg <= mul_ln1118_78_reg_3971;
        mul_ln1118_78_reg_3971_pp0_iter4_reg <= mul_ln1118_78_reg_3971_pp0_iter3_reg;
        mul_ln1118_78_reg_3971_pp0_iter5_reg <= mul_ln1118_78_reg_3971_pp0_iter4_reg;
        mul_ln1118_78_reg_3971_pp0_iter6_reg <= mul_ln1118_78_reg_3971_pp0_iter5_reg;
        select_ln109_4_reg_3430_pp0_iter1_reg <= select_ln109_4_reg_3430;
        select_ln109_4_reg_3430_pp0_iter2_reg <= select_ln109_4_reg_3430_pp0_iter1_reg;
        select_ln109_4_reg_3430_pp0_iter3_reg <= select_ln109_4_reg_3430_pp0_iter2_reg;
        select_ln109_4_reg_3430_pp0_iter4_reg <= select_ln109_4_reg_3430_pp0_iter3_reg;
        select_ln109_5_reg_3436_pp0_iter1_reg <= select_ln109_5_reg_3436;
        select_ln109_5_reg_3436_pp0_iter2_reg <= select_ln109_5_reg_3436_pp0_iter1_reg;
        select_ln109_5_reg_3436_pp0_iter3_reg <= select_ln109_5_reg_3436_pp0_iter2_reg;
        select_ln109_5_reg_3436_pp0_iter4_reg <= select_ln109_5_reg_3436_pp0_iter3_reg;
        select_ln109_5_reg_3436_pp0_iter5_reg <= select_ln109_5_reg_3436_pp0_iter4_reg;
        select_ln109_5_reg_3436_pp0_iter6_reg <= select_ln109_5_reg_3436_pp0_iter5_reg;
        select_ln109_6_reg_3443_pp0_iter1_reg <= select_ln109_6_reg_3443;
        select_ln109_6_reg_3443_pp0_iter2_reg <= select_ln109_6_reg_3443_pp0_iter1_reg;
        select_ln109_6_reg_3443_pp0_iter3_reg <= select_ln109_6_reg_3443_pp0_iter2_reg;
        select_ln109_6_reg_3443_pp0_iter4_reg <= select_ln109_6_reg_3443_pp0_iter3_reg;
        select_ln109_6_reg_3443_pp0_iter5_reg <= select_ln109_6_reg_3443_pp0_iter4_reg;
        select_ln109_6_reg_3443_pp0_iter6_reg <= select_ln109_6_reg_3443_pp0_iter5_reg;
        select_ln109_6_reg_3443_pp0_iter7_reg <= select_ln109_6_reg_3443_pp0_iter6_reg;
        sext_ln107_reg_3932_pp0_iter3_reg <= sext_ln107_reg_3932;
        sext_ln107_reg_3932_pp0_iter4_reg <= sext_ln107_reg_3932_pp0_iter3_reg;
        sext_ln107_reg_3932_pp0_iter5_reg <= sext_ln107_reg_3932_pp0_iter4_reg;
        sext_ln107_reg_3932_pp0_iter6_reg <= sext_ln107_reg_3932_pp0_iter5_reg;
        sext_ln107_reg_3932_pp0_iter7_reg <= sext_ln107_reg_3932_pp0_iter6_reg;
        sext_ln107_reg_3932_pp0_iter8_reg <= sext_ln107_reg_3932_pp0_iter7_reg;
        tmp_490_reg_3966_pp0_iter3_reg <= tmp_490_reg_3966;
        tmp_508_reg_3977_pp0_iter3_reg <= tmp_508_reg_3977;
        tmp_508_reg_3977_pp0_iter4_reg <= tmp_508_reg_3977_pp0_iter3_reg;
        tmp_508_reg_3977_pp0_iter5_reg <= tmp_508_reg_3977_pp0_iter4_reg;
        tmp_508_reg_3977_pp0_iter6_reg <= tmp_508_reg_3977_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'd0 == and_ln107_5_reg_3345) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        icmp_ln121_3_reg_3404 <= icmp_ln121_3_fu_610_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln107_5_reg_3345_pp0_iter1_reg) & (icmp_ln107_reg_3272_pp0_iter2_reg == 1'd0) & (select_ln109_6_reg_3443_pp0_iter1_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter1_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        icmp_ln121_4_reg_3895 <= icmp_ln121_4_fu_1121_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter2_reg == 1'd0) & (select_ln109_6_reg_3443_pp0_iter1_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter1_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        mul_ln1118_74_reg_3916 <= grp_fu_3225_p2;
        mul_ln1118_reg_3905 <= grp_fu_3218_p2;
        tmp_478_reg_3911 <= grp_fu_3218_p2[32'd7];
        tmp_484_reg_3922 <= grp_fu_3225_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter2_reg == 1'd0) & (select_ln109_6_reg_3443_pp0_iter1_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter1_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul_ln1118_75_reg_3960 <= grp_fu_3232_p2;
        shl_ln_reg_3944[23 : 8] <= shl_ln_fu_1167_p3[23 : 8];
        tmp_477_reg_3954 <= add_ln700_fu_1178_p2[32'd23];
        tmp_490_reg_3966 <= grp_fu_3232_p2[32'd7];
        trunc_ln_reg_3949 <= {{add_ln700_fu_1178_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter1_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        mul_ln1118_76_reg_3863 <= grp_fu_3204_p2;
        mul_ln1118_77_reg_3874 <= grp_fu_3211_p2;
        tmp_496_reg_3869 <= grp_fu_3204_p2[32'd7];
        tmp_502_reg_3880 <= grp_fu_3211_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter2_reg == 1'd0) & (select_ln109_6_reg_3443_pp0_iter1_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        mul_ln1118_78_reg_3971 <= grp_fu_3239_p2;
        tmp_508_reg_3977 <= grp_fu_3239_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter2_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_ln1118_79_reg_3996 <= grp_fu_3246_p2;
        tmp_514_reg_4002 <= grp_fu_3246_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_ln1118_79_reg_3996_pp0_iter3_reg <= mul_ln1118_79_reg_3996;
        mul_ln1118_79_reg_3996_pp0_iter4_reg <= mul_ln1118_79_reg_3996_pp0_iter3_reg;
        mul_ln1118_79_reg_3996_pp0_iter5_reg <= mul_ln1118_79_reg_3996_pp0_iter4_reg;
        mul_ln1118_79_reg_3996_pp0_iter6_reg <= mul_ln1118_79_reg_3996_pp0_iter5_reg;
        mul_ln1118_80_reg_4007_pp0_iter3_reg <= mul_ln1118_80_reg_4007;
        mul_ln1118_80_reg_4007_pp0_iter4_reg <= mul_ln1118_80_reg_4007_pp0_iter3_reg;
        mul_ln1118_80_reg_4007_pp0_iter5_reg <= mul_ln1118_80_reg_4007_pp0_iter4_reg;
        mul_ln1118_80_reg_4007_pp0_iter6_reg <= mul_ln1118_80_reg_4007_pp0_iter5_reg;
        mul_ln1118_80_reg_4007_pp0_iter7_reg <= mul_ln1118_80_reg_4007_pp0_iter6_reg;
        tmp_514_reg_4002_pp0_iter3_reg <= tmp_514_reg_4002;
        tmp_514_reg_4002_pp0_iter4_reg <= tmp_514_reg_4002_pp0_iter3_reg;
        tmp_514_reg_4002_pp0_iter5_reg <= tmp_514_reg_4002_pp0_iter4_reg;
        tmp_514_reg_4002_pp0_iter6_reg <= tmp_514_reg_4002_pp0_iter5_reg;
        tmp_520_reg_4013_pp0_iter3_reg <= tmp_520_reg_4013;
        tmp_520_reg_4013_pp0_iter4_reg <= tmp_520_reg_4013_pp0_iter3_reg;
        tmp_520_reg_4013_pp0_iter5_reg <= tmp_520_reg_4013_pp0_iter4_reg;
        tmp_520_reg_4013_pp0_iter6_reg <= tmp_520_reg_4013_pp0_iter5_reg;
        tmp_520_reg_4013_pp0_iter7_reg <= tmp_520_reg_4013_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_ln1118_80_reg_4007 <= grp_fu_3253_p2;
        tmp_520_reg_4013 <= grp_fu_3253_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul_ln1118_81_reg_4046 <= grp_fu_3260_p2;
        tmp_526_reg_4052 <= grp_fu_3260_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        mul_ln1118_81_reg_4046_pp0_iter3_reg <= mul_ln1118_81_reg_4046;
        mul_ln1118_81_reg_4046_pp0_iter4_reg <= mul_ln1118_81_reg_4046_pp0_iter3_reg;
        mul_ln1118_81_reg_4046_pp0_iter5_reg <= mul_ln1118_81_reg_4046_pp0_iter4_reg;
        mul_ln1118_81_reg_4046_pp0_iter6_reg <= mul_ln1118_81_reg_4046_pp0_iter5_reg;
        mul_ln1118_81_reg_4046_pp0_iter7_reg <= mul_ln1118_81_reg_4046_pp0_iter6_reg;
        mul_ln1118_81_reg_4046_pp0_iter8_reg <= mul_ln1118_81_reg_4046_pp0_iter7_reg;
        output_fmap_addr_reg_3828_pp0_iter2_reg <= output_fmap_addr_reg_3828;
        output_fmap_addr_reg_3828_pp0_iter3_reg <= output_fmap_addr_reg_3828_pp0_iter2_reg;
        output_fmap_addr_reg_3828_pp0_iter4_reg <= output_fmap_addr_reg_3828_pp0_iter3_reg;
        output_fmap_addr_reg_3828_pp0_iter5_reg <= output_fmap_addr_reg_3828_pp0_iter4_reg;
        output_fmap_addr_reg_3828_pp0_iter6_reg <= output_fmap_addr_reg_3828_pp0_iter5_reg;
        output_fmap_addr_reg_3828_pp0_iter7_reg <= output_fmap_addr_reg_3828_pp0_iter6_reg;
        output_fmap_addr_reg_3828_pp0_iter8_reg <= output_fmap_addr_reg_3828_pp0_iter7_reg;
        tmp_526_reg_4052_pp0_iter3_reg <= tmp_526_reg_4052;
        tmp_526_reg_4052_pp0_iter4_reg <= tmp_526_reg_4052_pp0_iter3_reg;
        tmp_526_reg_4052_pp0_iter5_reg <= tmp_526_reg_4052_pp0_iter4_reg;
        tmp_526_reg_4052_pp0_iter6_reg <= tmp_526_reg_4052_pp0_iter5_reg;
        tmp_526_reg_4052_pp0_iter7_reg <= tmp_526_reg_4052_pp0_iter6_reg;
        tmp_526_reg_4052_pp0_iter8_reg <= tmp_526_reg_4052_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (select_ln109_6_reg_3443_pp0_iter1_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter1_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_fmap_load_reg_3858 <= output_fmap_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((select_ln109_6_reg_3443_pp0_iter1_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (select_ln109_4_reg_3430 == 1'd0) & (select_ln109_6_reg_3443 == 1'd0) & (select_ln109_5_reg_3436 == 1'd0) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (select_ln109_6_reg_3443 == 1'd0) & (select_ln109_5_reg_3436 == 1'd0) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        reg_448 <= input_fmap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        select_ln107_1_reg_3324 <= select_ln107_1_fu_500_p3;
        select_ln109_1_reg_3377 <= select_ln109_1_fu_542_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        select_ln111_1_reg_3525 <= select_ln111_1_fu_836_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter2_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter2_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter2_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln340_148_reg_4057 <= select_ln340_148_fu_1409_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter3_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter3_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter3_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        select_ln340_150_reg_4120 <= select_ln340_150_fu_1629_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter4_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter4_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter4_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        select_ln340_152_reg_4183 <= select_ln340_152_fu_1849_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter4_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter4_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        select_ln340_154_reg_4246 <= select_ln340_154_fu_2069_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter5_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter5_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        select_ln340_156_reg_4309 <= select_ln340_156_fu_2289_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter6_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter6_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln340_158_reg_4372 <= select_ln340_158_fu_2509_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter7_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        select_ln340_160_reg_4435 <= select_ln340_160_fu_2729_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        select_ln340_162_reg_4498 <= select_ln340_162_fu_2949_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        select_ln340_164_reg_4561 <= select_ln340_164_fu_3180_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        sext_ln107_reg_3932 <= sext_ln107_fu_1147_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter3_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter3_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter3_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shl_ln728_73_reg_4125[23 : 8] <= shl_ln728_73_fu_1642_p3[23 : 8];
        tmp_489_reg_4135 <= add_ln700_71_fu_1653_p2[32'd23];
        trunc_ln708_72_reg_4130 <= {{add_ln700_71_fu_1653_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter4_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter4_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        shl_ln728_74_reg_4188[23 : 8] <= shl_ln728_74_fu_1862_p3[23 : 8];
        tmp_495_reg_4198 <= add_ln700_72_fu_1873_p2[32'd23];
        trunc_ln708_73_reg_4193 <= {{add_ln700_72_fu_1873_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter5_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter5_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter5_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        shl_ln728_75_reg_4251[23 : 8] <= shl_ln728_75_fu_2082_p3[23 : 8];
        tmp_501_reg_4261 <= add_ln700_73_fu_2093_p2[32'd23];
        trunc_ln708_74_reg_4256 <= {{add_ln700_73_fu_2093_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter5_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter5_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter6_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        shl_ln728_76_reg_4314[23 : 8] <= shl_ln728_76_fu_2302_p3[23 : 8];
        tmp_507_reg_4324 <= add_ln700_74_fu_2313_p2[32'd23];
        trunc_ln708_75_reg_4319 <= {{add_ln700_74_fu_2313_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter6_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shl_ln728_77_reg_4377[23 : 8] <= shl_ln728_77_fu_2522_p3[23 : 8];
        tmp_513_reg_4387 <= add_ln700_75_fu_2533_p2[32'd23];
        trunc_ln708_76_reg_4382 <= {{add_ln700_75_fu_2533_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shl_ln728_78_reg_4440[23 : 8] <= shl_ln728_78_fu_2742_p3[23 : 8];
        tmp_519_reg_4450 <= add_ln700_76_fu_2753_p2[32'd23];
        trunc_ln708_77_reg_4445 <= {{add_ln700_76_fu_2753_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_3272_pp0_iter8_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        shl_ln728_79_reg_4503[23 : 8] <= shl_ln728_79_fu_2973_p3[23 : 8];
        tmp_525_reg_4513 <= add_ln700_77_fu_2984_p2[32'd23];
        trunc_ln708_78_reg_4508 <= {{add_ln700_77_fu_2984_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((select_ln109_6_reg_3443_pp0_iter2_reg == 1'd0) & (select_ln109_5_reg_3436_pp0_iter2_reg == 1'd0) & (select_ln109_4_reg_3430_pp0_iter2_reg == 1'd0) & (icmp_ln107_reg_3272_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        shl_ln728_s_reg_4062[23 : 8] <= shl_ln728_s_fu_1422_p3[23 : 8];
        tmp_483_reg_4072 <= add_ln700_70_fu_1433_p2[32'd23];
        trunc_ln708_s_reg_4067 <= {{add_ln700_70_fu_1433_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (select_ln109_6_reg_3443 == 1'd0) & (select_ln109_5_reg_3436 == 1'd0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        sub_ln129_2_reg_3545 <= sub_ln129_2_fu_869_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        sub_ln129_3_reg_3604 <= sub_ln129_3_fu_922_p2;
        zext_ln129_15_reg_3627[3 : 0] <= zext_ln129_15_fu_940_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (select_ln109_4_reg_3430 == 1'd0) & (select_ln109_6_reg_3443 == 1'd0) & (select_ln109_5_reg_3436 == 1'd0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        trunc_ln129_3_reg_3535 <= trunc_ln129_3_fu_854_p1;
        trunc_ln129_4_reg_3540 <= trunc_ln129_4_fu_858_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        trunc_ln129_7_reg_3552 <= trunc_ln129_7_fu_895_p1;
        trunc_ln129_8_reg_3557 <= trunc_ln129_8_fu_899_p1;
        zext_ln129_5_reg_3488[8 : 0] <= zext_ln129_5_fu_821_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (select_ln109_6_reg_3443 == 1'd0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        zext_ln129_11_reg_3611[3 : 0] <= zext_ln129_11_fu_927_p1[3 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        L3_Kernel_V_0_0_ce0 = 1'b1;
    end else begin
        L3_Kernel_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        L3_Kernel_V_0_1_ce0 = 1'b1;
    end else begin
        L3_Kernel_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        L3_Kernel_V_0_2_ce0 = 1'b1;
    end else begin
        L3_Kernel_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        L3_Kernel_V_1_0_ce0 = 1'b1;
    end else begin
        L3_Kernel_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        L3_Kernel_V_1_1_ce0 = 1'b1;
    end else begin
        L3_Kernel_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        L3_Kernel_V_1_2_ce0 = 1'b1;
    end else begin
        L3_Kernel_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        L3_Kernel_V_2_0_ce0 = 1'b1;
    end else begin
        L3_Kernel_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        L3_Kernel_V_2_1_ce0 = 1'b1;
    end else begin
        L3_Kernel_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        L3_Kernel_V_2_2_ce0 = 1'b1;
    end else begin
        L3_Kernel_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        L3_bias_V_ce0 = 1'b1;
    end else begin
        L3_bias_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln107_reg_3272 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten130_phi_fu_364_p4 = add_ln107_1_reg_3276;
    end else begin
        ap_phi_mux_indvar_flatten130_phi_fu_364_p4 = indvar_flatten130_reg_360;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten33_phi_fu_387_p4 = select_ln109_10_reg_3643;
    end else begin
        ap_phi_mux_indvar_flatten33_phi_fu_387_p4 = indvar_flatten33_reg_383;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_indvar_flatten_phi_fu_411_p4 = select_ln111_4_reg_3638;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_411_p4 = indvar_flatten_reg_407;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_kernel_channel_phi_fu_399_p4 = select_ln109_1_reg_3377;
    end else begin
        ap_phi_mux_kernel_channel_phi_fu_399_p4 = kernel_channel_reg_395;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln107_reg_3272 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_kernel_number_phi_fu_375_p4 = select_ln107_1_reg_3324;
    end else begin
        ap_phi_mux_kernel_number_phi_fu_375_p4 = kernel_number_reg_371;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_shift_col_num_phi_fu_423_p4 = select_ln111_1_reg_3525;
    end else begin
        ap_phi_mux_shift_col_num_phi_fu_423_p4 = shift_col_num_reg_419;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln107_reg_3272_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_shift_row_num_phi_fu_435_p4 = add_ln129_reg_3622;
    end else begin
        ap_phi_mux_shift_row_num_phi_fu_435_p4 = shift_row_num_reg_431;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4))) begin
            input_fmap_address0 = zext_ln129_22_fu_1081_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            input_fmap_address0 = zext_ln129_18_fu_1063_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            input_fmap_address0 = zext_ln129_21_fu_1037_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            input_fmap_address0 = zext_ln129_16_fu_1020_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            input_fmap_address0 = zext_ln129_17_fu_980_p1;
        end else begin
            input_fmap_address0 = 'bx;
        end
    end else begin
        input_fmap_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
            input_fmap_address1 = zext_ln129_14_fu_1055_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
            input_fmap_address1 = zext_ln129_20_fu_1033_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
            input_fmap_address1 = zext_ln129_12_fu_1016_p1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            input_fmap_address1 = zext_ln129_13_fu_968_p1;
        end else begin
            input_fmap_address1 = 'bx;
        end
    end else begin
        input_fmap_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        input_fmap_ce0 = 1'b1;
    end else begin
        input_fmap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        input_fmap_ce1 = 1'b1;
    end else begin
        input_fmap_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        output_fmap_address0 = output_fmap_addr_reg_3828_pp0_iter8_reg;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        output_fmap_address0 = p_cast_fu_1077_p1;
    end else begin
        output_fmap_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter9 == 1'b1)))) begin
        output_fmap_ce0 = 1'b1;
    end else begin
        output_fmap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_3272_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        output_fmap_we0 = 1'b1;
    end else begin
        output_fmap_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln107_reg_3272 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln107_reg_3272 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((~((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (ap_enable_reg_pp0_iter8 == 1'b0)) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (ap_enable_reg_pp0_iter8 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign L3_Kernel_V_0_0_address0 = zext_ln129_5_fu_821_p1;

assign L3_Kernel_V_0_1_address0 = zext_ln129_5_fu_821_p1;

assign L3_Kernel_V_0_2_address0 = zext_ln129_5_fu_821_p1;

assign L3_Kernel_V_1_0_address0 = zext_ln129_5_fu_821_p1;

assign L3_Kernel_V_1_1_address0 = zext_ln129_5_fu_821_p1;

assign L3_Kernel_V_1_2_address0 = zext_ln129_5_fu_821_p1;

assign L3_Kernel_V_2_0_address0 = zext_ln129_5_reg_3488;

assign L3_Kernel_V_2_1_address0 = zext_ln129_5_reg_3488;

assign L3_Kernel_V_2_2_address0 = zext_ln129_5_reg_3488;

assign L3_bias_V_address0 = zext_ln107_fu_1012_p1;

assign add_ln107_1_fu_462_p2 = (17'd1 + ap_phi_mux_indvar_flatten130_phi_fu_364_p4);

assign add_ln107_fu_468_p2 = (6'd1 + ap_phi_mux_kernel_number_phi_fu_375_p4);

assign add_ln109_1_fu_815_p2 = (13'd1 + indvar_flatten33_reg_383);

assign add_ln109_fu_524_p2 = (5'd1 + select_ln107_reg_3298);

assign add_ln111_fu_809_p2 = (8'd1 + indvar_flatten_reg_407);

assign add_ln1192_74_fu_1479_p2 = ($signed(sext_ln703_73_fu_1473_p1) + $signed(sext_ln1192_135_fu_1476_p1));

assign add_ln1192_75_fu_1699_p2 = ($signed(sext_ln703_74_fu_1693_p1) + $signed(sext_ln1192_137_fu_1696_p1));

assign add_ln1192_76_fu_1919_p2 = ($signed(sext_ln703_75_fu_1913_p1) + $signed(sext_ln1192_139_fu_1916_p1));

assign add_ln1192_77_fu_2139_p2 = ($signed(sext_ln703_76_fu_2133_p1) + $signed(sext_ln1192_141_fu_2136_p1));

assign add_ln1192_78_fu_2359_p2 = ($signed(sext_ln703_77_fu_2353_p1) + $signed(sext_ln1192_143_fu_2356_p1));

assign add_ln1192_79_fu_2579_p2 = ($signed(sext_ln703_78_fu_2573_p1) + $signed(sext_ln1192_145_fu_2576_p1));

assign add_ln1192_80_fu_2799_p2 = ($signed(sext_ln703_79_fu_2793_p1) + $signed(sext_ln1192_147_fu_2796_p1));

assign add_ln1192_81_fu_3030_p2 = ($signed(sext_ln703_80_fu_3024_p1) + $signed(sext_ln1192_149_fu_3027_p1));

assign add_ln1192_fu_1252_p2 = ($signed(sext_ln703_fu_1246_p1) + $signed(sext_ln1192_fu_1249_p1));

assign add_ln129_10_fu_976_p2 = (zext_ln129_15_reg_3627 + sub_ln129_1_reg_3592);

assign add_ln129_11_fu_944_p2 = (zext_ln129_15_fu_940_p1 + sub_ln129_2_reg_3545);

assign add_ln129_12_fu_984_p2 = (zext_ln129_15_reg_3627 + sub_ln129_3_reg_3604);

assign add_ln129_13_fu_997_p2 = (zext_ln129_19_fu_993_p1 + sub_ln129_1_reg_3592);

assign add_ln129_14_fu_1002_p2 = (zext_ln129_19_fu_993_p1 + sub_ln129_2_reg_3545);

assign add_ln129_15_fu_1007_p2 = (zext_ln129_19_fu_993_p1 + sub_ln129_3_reg_3604);

assign add_ln129_1_fu_988_p2 = (4'd2 + select_ln111_reg_3460);

assign add_ln129_2_fu_580_p2 = (zext_ln129_fu_576_p1 + tmp_91_cast_fu_569_p3);

assign add_ln129_3_fu_681_p2 = (zext_ln129_2_fu_678_p1 + tmp_94_cast_fu_639_p3);

assign add_ln129_4_fu_849_p2 = (zext_ln129_7_fu_845_p1 + sub_ln129_reg_3419);

assign add_ln129_5_fu_795_p2 = (zext_ln129_8_fu_791_p1 + sub_ln129_fu_701_p2);

assign add_ln129_6_fu_890_p2 = (zext_ln129_9_fu_886_p1 + sub_ln129_reg_3419);

assign add_ln129_7_fu_964_p2 = (zext_ln129_11_reg_3611 + sub_ln129_1_reg_3592);

assign add_ln129_8_fu_930_p2 = (zext_ln129_11_fu_927_p1 + sub_ln129_2_reg_3545);

assign add_ln129_9_fu_972_p2 = (zext_ln129_11_reg_3611 + sub_ln129_3_reg_3604);

assign add_ln129_fu_935_p2 = (4'd1 + select_ln111_reg_3460);

assign add_ln415_74_fu_1460_p2 = (zext_ln415_74_fu_1457_p1 + trunc_ln708_s_reg_4067);

assign add_ln415_75_fu_1680_p2 = (zext_ln415_75_fu_1677_p1 + trunc_ln708_72_reg_4130);

assign add_ln415_76_fu_1900_p2 = (zext_ln415_76_fu_1897_p1 + trunc_ln708_73_reg_4193);

assign add_ln415_77_fu_2120_p2 = (zext_ln415_77_fu_2117_p1 + trunc_ln708_74_reg_4256);

assign add_ln415_78_fu_2340_p2 = (zext_ln415_78_fu_2337_p1 + trunc_ln708_75_reg_4319);

assign add_ln415_79_fu_2560_p2 = (zext_ln415_79_fu_2557_p1 + trunc_ln708_76_reg_4382);

assign add_ln415_80_fu_2780_p2 = (zext_ln415_80_fu_2777_p1 + trunc_ln708_77_reg_4445);

assign add_ln415_81_fu_3011_p2 = (zext_ln415_81_fu_3008_p1 + trunc_ln708_78_reg_4508);

assign add_ln415_fu_1219_p2 = (zext_ln415_fu_1216_p1 + trunc_ln_reg_3949);

assign add_ln700_70_fu_1433_p2 = ($signed(sext_ln1192_136_fu_1430_p1) + $signed(shl_ln728_s_fu_1422_p3));

assign add_ln700_71_fu_1653_p2 = ($signed(sext_ln1192_138_fu_1650_p1) + $signed(shl_ln728_73_fu_1642_p3));

assign add_ln700_72_fu_1873_p2 = ($signed(sext_ln1192_140_fu_1870_p1) + $signed(shl_ln728_74_fu_1862_p3));

assign add_ln700_73_fu_2093_p2 = ($signed(sext_ln1192_142_fu_2090_p1) + $signed(shl_ln728_75_fu_2082_p3));

assign add_ln700_74_fu_2313_p2 = ($signed(sext_ln1192_144_fu_2310_p1) + $signed(shl_ln728_76_fu_2302_p3));

assign add_ln700_75_fu_2533_p2 = ($signed(sext_ln1192_146_fu_2530_p1) + $signed(shl_ln728_77_fu_2522_p3));

assign add_ln700_76_fu_2753_p2 = ($signed(sext_ln1192_148_fu_2750_p1) + $signed(shl_ln728_78_fu_2742_p3));

assign add_ln700_77_fu_2984_p2 = ($signed(sext_ln1192_150_fu_2981_p1) + $signed(shl_ln728_79_fu_2973_p3));

assign add_ln700_fu_1178_p2 = ($signed(sext_ln1192_134_fu_1175_p1) + $signed(shl_ln_fu_1167_p3));

assign and_ln107_1_fu_664_p2 = (xor_ln107_reg_3308 & icmp_ln121_1_fu_598_p2);

assign and_ln107_2_fu_669_p2 = (xor_ln107_reg_3308 & icmp_ln121_2_fu_604_p2);

assign and_ln107_3_fu_2957_p2 = (xor_ln107_reg_3308_pp0_iter8_reg & icmp_ln121_3_reg_3404_pp0_iter8_reg);

assign and_ln107_4_fu_674_p2 = (xor_ln107_reg_3308 & icmp_ln113_reg_3340);

assign and_ln107_5_fu_520_p2 = (xor_ln107_reg_3308 & icmp_ln111_reg_3318);

assign and_ln107_fu_659_p2 = (xor_ln107_reg_3308 & icmp_ln121_fu_592_p2);

assign and_ln109_fu_749_p2 = (or_ln109_1_fu_744_p2 & and_ln107_4_fu_674_p2);

assign and_ln416_74_fu_1498_p2 = (xor_ln416_74_fu_1493_p2 & tmp_483_reg_4072);

assign and_ln416_75_fu_1718_p2 = (xor_ln416_75_fu_1713_p2 & tmp_489_reg_4135);

assign and_ln416_76_fu_1938_p2 = (xor_ln416_76_fu_1933_p2 & tmp_495_reg_4198);

assign and_ln416_77_fu_2158_p2 = (xor_ln416_77_fu_2153_p2 & tmp_501_reg_4261);

assign and_ln416_78_fu_2378_p2 = (xor_ln416_78_fu_2373_p2 & tmp_507_reg_4324);

assign and_ln416_79_fu_2598_p2 = (xor_ln416_79_fu_2593_p2 & tmp_513_reg_4387);

assign and_ln416_80_fu_2818_p2 = (xor_ln416_80_fu_2813_p2 & tmp_519_reg_4450);

assign and_ln416_81_fu_3049_p2 = (xor_ln416_81_fu_3044_p2 & tmp_525_reg_4513);

assign and_ln416_fu_1271_p2 = (xor_ln416_fu_1266_p2 & tmp_477_reg_3954);

assign and_ln780_74_fu_1541_p2 = (tmp_486_fu_1503_p3 & or_ln780_74_fu_1535_p2);

assign and_ln780_75_fu_1761_p2 = (tmp_492_fu_1723_p3 & or_ln780_75_fu_1755_p2);

assign and_ln780_76_fu_1981_p2 = (tmp_498_fu_1943_p3 & or_ln780_76_fu_1975_p2);

assign and_ln780_77_fu_2201_p2 = (tmp_504_fu_2163_p3 & or_ln780_77_fu_2195_p2);

assign and_ln780_78_fu_2421_p2 = (tmp_510_fu_2383_p3 & or_ln780_78_fu_2415_p2);

assign and_ln780_79_fu_2641_p2 = (tmp_516_fu_2603_p3 & or_ln780_79_fu_2635_p2);

assign and_ln780_80_fu_2861_p2 = (tmp_522_fu_2823_p3 & or_ln780_80_fu_2855_p2);

assign and_ln780_81_fu_3092_p2 = (tmp_528_fu_3054_p3 & or_ln780_81_fu_3086_p2);

assign and_ln780_fu_1314_p2 = (tmp_480_fu_1276_p3 & or_ln780_fu_1308_p2);

assign and_ln781_74_fu_1547_p2 = (tmp_486_fu_1503_p3 & and_ln416_74_fu_1498_p2);

assign and_ln781_75_fu_1767_p2 = (tmp_492_fu_1723_p3 & and_ln416_75_fu_1718_p2);

assign and_ln781_76_fu_1987_p2 = (tmp_498_fu_1943_p3 & and_ln416_76_fu_1938_p2);

assign and_ln781_77_fu_2207_p2 = (tmp_504_fu_2163_p3 & and_ln416_77_fu_2158_p2);

assign and_ln781_78_fu_2427_p2 = (tmp_510_fu_2383_p3 & and_ln416_78_fu_2378_p2);

assign and_ln781_79_fu_2647_p2 = (tmp_516_fu_2603_p3 & and_ln416_79_fu_2598_p2);

assign and_ln781_80_fu_2867_p2 = (tmp_522_fu_2823_p3 & and_ln416_80_fu_2818_p2);

assign and_ln781_81_fu_3098_p2 = (tmp_528_fu_3054_p3 & and_ln416_81_fu_3049_p2);

assign and_ln781_fu_1320_p2 = (tmp_480_fu_1276_p3 & and_ln416_fu_1271_p2);

assign and_ln785_74_fu_1578_p2 = (xor_ln785_150_fu_1573_p2 & or_ln785_74_fu_1568_p2);

assign and_ln785_75_fu_1798_p2 = (xor_ln785_152_fu_1793_p2 & or_ln785_75_fu_1788_p2);

assign and_ln785_76_fu_2018_p2 = (xor_ln785_154_fu_2013_p2 & or_ln785_76_fu_2008_p2);

assign and_ln785_77_fu_2238_p2 = (xor_ln785_156_fu_2233_p2 & or_ln785_77_fu_2228_p2);

assign and_ln785_78_fu_2458_p2 = (xor_ln785_158_fu_2453_p2 & or_ln785_78_fu_2448_p2);

assign and_ln785_79_fu_2678_p2 = (xor_ln785_160_fu_2673_p2 & or_ln785_79_fu_2668_p2);

assign and_ln785_80_fu_2898_p2 = (xor_ln785_162_fu_2893_p2 & or_ln785_80_fu_2888_p2);

assign and_ln785_81_fu_3129_p2 = (xor_ln785_164_fu_3124_p2 & or_ln785_81_fu_3119_p2);

assign and_ln785_fu_1358_p2 = (xor_ln785_148_fu_1353_p2 & or_ln785_fu_1348_p2);

assign and_ln786_148_fu_1374_p2 = (xor_ln786_fu_1368_p2 & tmp_476_reg_4018);

assign and_ln786_149_fu_1553_p2 = (tmp_485_reg_4084 & and_ln780_74_fu_1541_p2);

assign and_ln786_150_fu_1594_p2 = (xor_ln786_74_fu_1588_p2 & tmp_482_reg_4092);

assign and_ln786_151_fu_1773_p2 = (tmp_491_reg_4147 & and_ln780_75_fu_1761_p2);

assign and_ln786_152_fu_1814_p2 = (xor_ln786_75_fu_1808_p2 & tmp_488_reg_4155);

assign and_ln786_153_fu_1993_p2 = (tmp_497_reg_4210 & and_ln780_76_fu_1981_p2);

assign and_ln786_154_fu_2034_p2 = (xor_ln786_76_fu_2028_p2 & tmp_494_reg_4218);

assign and_ln786_155_fu_2213_p2 = (tmp_503_reg_4273 & and_ln780_77_fu_2201_p2);

assign and_ln786_156_fu_2254_p2 = (xor_ln786_77_fu_2248_p2 & tmp_500_reg_4281);

assign and_ln786_157_fu_2433_p2 = (tmp_509_reg_4336 & and_ln780_78_fu_2421_p2);

assign and_ln786_158_fu_2474_p2 = (xor_ln786_78_fu_2468_p2 & tmp_506_reg_4344);

assign and_ln786_159_fu_2653_p2 = (tmp_515_reg_4399 & and_ln780_79_fu_2641_p2);

assign and_ln786_160_fu_2694_p2 = (xor_ln786_79_fu_2688_p2 & tmp_512_reg_4407);

assign and_ln786_161_fu_2873_p2 = (tmp_521_reg_4462 & and_ln780_80_fu_2861_p2);

assign and_ln786_162_fu_2914_p2 = (xor_ln786_80_fu_2908_p2 & tmp_518_reg_4470);

assign and_ln786_163_fu_3104_p2 = (tmp_527_reg_4525 & and_ln780_81_fu_3092_p2);

assign and_ln786_164_fu_3145_p2 = (xor_ln786_81_fu_3139_p2 & tmp_524_reg_4533);

assign and_ln786_fu_1326_p2 = (tmp_479_reg_3988 & and_ln780_fu_1314_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign empty_157_fu_622_p2 = (4'd2 + shift_col_num_reg_419);

assign empty_fu_616_p2 = (4'd1 + shift_col_num_reg_419);

assign grp_fu_3188_p0 = 10'd13;

assign grp_fu_3188_p1 = grp_fu_3188_p10;

assign grp_fu_3188_p10 = select_ln107_1_fu_500_p3;

assign grp_fu_3188_p2 = grp_fu_3188_p20;

assign grp_fu_3188_p20 = select_ln111_1_fu_836_p3;

assign grp_fu_3196_p0 = 13'd13;

assign grp_fu_3196_p1 = grp_fu_3196_p10;

assign grp_fu_3196_p10 = empty_160_reg_3599;

assign grp_fu_3196_p2 = grp_fu_3196_p20;

assign grp_fu_3196_p20 = select_ln111_reg_3460;

assign grp_fu_3204_p0 = grp_fu_3204_p00;

assign grp_fu_3204_p00 = reg_443;

assign grp_fu_3211_p0 = grp_fu_3211_p00;

assign grp_fu_3211_p00 = reg_448;

assign grp_fu_3218_p0 = grp_fu_3218_p00;

assign grp_fu_3218_p00 = reg_443;

assign grp_fu_3225_p0 = grp_fu_3225_p00;

assign grp_fu_3225_p00 = reg_448;

assign grp_fu_3232_p0 = grp_fu_3232_p00;

assign grp_fu_3232_p00 = reg_443;

assign grp_fu_3239_p0 = grp_fu_3239_p00;

assign grp_fu_3239_p00 = reg_448;

assign grp_fu_3246_p0 = grp_fu_3246_p00;

assign grp_fu_3246_p00 = reg_443;

assign grp_fu_3253_p0 = grp_fu_3253_p00;

assign grp_fu_3253_p00 = reg_448;

assign grp_fu_3260_p0 = grp_fu_3260_p00;

assign grp_fu_3260_p00 = reg_443;

assign icmp_ln107_fu_456_p2 = ((ap_phi_mux_indvar_flatten130_phi_fu_364_p4 == 17'd86528) ? 1'b1 : 1'b0);

assign icmp_ln109_fu_474_p2 = ((ap_phi_mux_indvar_flatten33_phi_fu_387_p4 == 13'd2704) ? 1'b1 : 1'b0);

assign icmp_ln111_fu_494_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_411_p4 == 8'd169) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_514_p2 = ((ap_phi_mux_shift_row_num_phi_fu_435_p4 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln12151_fu_646_p2 = ((kernel_channel_reg_395 == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln121_1_fu_598_p2 = ((sub_ln121_fu_586_p2 == 5'd2) ? 1'b1 : 1'b0);

assign icmp_ln121_2_fu_604_p2 = ((sub_ln121_fu_586_p2 == 5'd3) ? 1'b1 : 1'b0);

assign icmp_ln121_3_fu_610_p2 = ((sub_ln121_fu_586_p2 == 5'd4) ? 1'b1 : 1'b0);

assign icmp_ln121_4_fu_1121_p2 = ((add_ln109_reg_3356_pp0_iter1_reg == 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln121_5_fu_549_p2 = ((select_ln107_reg_3298 == 5'd30) ? 1'b1 : 1'b0);

assign icmp_ln121_6_fu_554_p2 = ((select_ln107_reg_3298 == 5'd29) ? 1'b1 : 1'b0);

assign icmp_ln121_7_fu_559_p2 = ((select_ln107_reg_3298 == 5'd28) ? 1'b1 : 1'b0);

assign icmp_ln121_8_fu_564_p2 = ((select_ln107_reg_3298 == 5'd27) ? 1'b1 : 1'b0);

assign icmp_ln121_fu_592_p2 = ((sub_ln121_fu_586_p2 == 5'd1) ? 1'b1 : 1'b0);

assign or_ln107_fu_1150_p2 = (icmp_ln12151_reg_3414_pp0_iter1_reg | icmp_ln109_reg_3287_pp0_iter2_reg);

assign or_ln109_1_fu_744_p2 = (xor_ln109_fu_739_p2 | icmp_ln109_reg_3287);

assign or_ln109_fu_529_p2 = (icmp_ln109_reg_3287 | and_ln107_5_fu_520_p2);

assign or_ln111_1_fu_765_p2 = (or_ln111_fu_760_p2 | icmp_ln109_reg_3287);

assign or_ln111_fu_760_p2 = (and_ln109_fu_749_p2 | and_ln107_5_reg_3345);

assign or_ln340_222_fu_1390_p2 = (or_ln340_223_fu_1385_p2 | and_ln781_reg_4034);

assign or_ln340_223_fu_1385_p2 = (xor_ln785_148_fu_1353_p2 | and_ln786_reg_4040);

assign or_ln340_224_fu_1599_p2 = (and_ln786_150_fu_1594_p2 | and_ln785_74_fu_1578_p2);

assign or_ln340_225_fu_1610_p2 = (or_ln340_226_fu_1605_p2 | and_ln781_74_reg_4108);

assign or_ln340_226_fu_1605_p2 = (xor_ln785_150_fu_1573_p2 | and_ln786_149_reg_4114);

assign or_ln340_227_fu_1819_p2 = (and_ln786_152_fu_1814_p2 | and_ln785_75_fu_1798_p2);

assign or_ln340_228_fu_1830_p2 = (or_ln340_229_fu_1825_p2 | and_ln781_75_reg_4171);

assign or_ln340_229_fu_1825_p2 = (xor_ln785_152_fu_1793_p2 | and_ln786_151_reg_4177);

assign or_ln340_230_fu_2039_p2 = (and_ln786_154_fu_2034_p2 | and_ln785_76_fu_2018_p2);

assign or_ln340_231_fu_2050_p2 = (or_ln340_232_fu_2045_p2 | and_ln781_76_reg_4234);

assign or_ln340_232_fu_2045_p2 = (xor_ln785_154_fu_2013_p2 | and_ln786_153_reg_4240);

assign or_ln340_233_fu_2259_p2 = (and_ln786_156_fu_2254_p2 | and_ln785_77_fu_2238_p2);

assign or_ln340_234_fu_2270_p2 = (or_ln340_235_fu_2265_p2 | and_ln781_77_reg_4297);

assign or_ln340_235_fu_2265_p2 = (xor_ln785_156_fu_2233_p2 | and_ln786_155_reg_4303);

assign or_ln340_236_fu_2479_p2 = (and_ln786_158_fu_2474_p2 | and_ln785_78_fu_2458_p2);

assign or_ln340_237_fu_2490_p2 = (or_ln340_238_fu_2485_p2 | and_ln781_78_reg_4360);

assign or_ln340_238_fu_2485_p2 = (xor_ln785_158_fu_2453_p2 | and_ln786_157_reg_4366);

assign or_ln340_239_fu_2699_p2 = (and_ln786_160_fu_2694_p2 | and_ln785_79_fu_2678_p2);

assign or_ln340_240_fu_2710_p2 = (or_ln340_241_fu_2705_p2 | and_ln781_79_reg_4423);

assign or_ln340_241_fu_2705_p2 = (xor_ln785_160_fu_2673_p2 | and_ln786_159_reg_4429);

assign or_ln340_242_fu_2919_p2 = (and_ln786_162_fu_2914_p2 | and_ln785_80_fu_2898_p2);

assign or_ln340_243_fu_2930_p2 = (or_ln340_244_fu_2925_p2 | and_ln781_80_reg_4486);

assign or_ln340_244_fu_2925_p2 = (xor_ln785_162_fu_2893_p2 | and_ln786_161_reg_4492);

assign or_ln340_245_fu_3150_p2 = (and_ln786_164_fu_3145_p2 | and_ln785_81_fu_3129_p2);

assign or_ln340_246_fu_3161_p2 = (or_ln340_247_fu_3156_p2 | and_ln781_81_reg_4549);

assign or_ln340_247_fu_3156_p2 = (xor_ln785_164_fu_3124_p2 | and_ln786_163_reg_4555);

assign or_ln340_fu_1379_p2 = (and_ln786_148_fu_1374_p2 | and_ln785_fu_1358_p2);

assign or_ln778_74_fu_1516_p2 = (xor_ln778_149_fu_1511_p2 | tmp_485_reg_4084);

assign or_ln778_75_fu_1736_p2 = (xor_ln778_151_fu_1731_p2 | tmp_491_reg_4147);

assign or_ln778_76_fu_1956_p2 = (xor_ln778_153_fu_1951_p2 | tmp_497_reg_4210);

assign or_ln778_77_fu_2176_p2 = (xor_ln778_155_fu_2171_p2 | tmp_503_reg_4273);

assign or_ln778_78_fu_2396_p2 = (xor_ln778_157_fu_2391_p2 | tmp_509_reg_4336);

assign or_ln778_79_fu_2616_p2 = (xor_ln778_159_fu_2611_p2 | tmp_515_reg_4399);

assign or_ln778_80_fu_2836_p2 = (xor_ln778_161_fu_2831_p2 | tmp_521_reg_4462);

assign or_ln778_81_fu_3067_p2 = (xor_ln778_163_fu_3062_p2 | tmp_527_reg_4525);

assign or_ln778_fu_1289_p2 = (xor_ln778_fu_1284_p2 | tmp_479_reg_3988);

assign or_ln780_74_fu_1535_p2 = (xor_ln780_74_fu_1529_p2 | or_ln778_74_fu_1516_p2);

assign or_ln780_75_fu_1755_p2 = (xor_ln780_75_fu_1749_p2 | or_ln778_75_fu_1736_p2);

assign or_ln780_76_fu_1975_p2 = (xor_ln780_76_fu_1969_p2 | or_ln778_76_fu_1956_p2);

assign or_ln780_77_fu_2195_p2 = (xor_ln780_77_fu_2189_p2 | or_ln778_77_fu_2176_p2);

assign or_ln780_78_fu_2415_p2 = (xor_ln780_78_fu_2409_p2 | or_ln778_78_fu_2396_p2);

assign or_ln780_79_fu_2635_p2 = (xor_ln780_79_fu_2629_p2 | or_ln778_79_fu_2616_p2);

assign or_ln780_80_fu_2855_p2 = (xor_ln780_80_fu_2849_p2 | or_ln778_80_fu_2836_p2);

assign or_ln780_81_fu_3086_p2 = (xor_ln780_81_fu_3080_p2 | or_ln778_81_fu_3067_p2);

assign or_ln780_fu_1308_p2 = (xor_ln780_fu_1302_p2 | or_ln778_fu_1289_p2);

assign or_ln785_74_fu_1568_p2 = (xor_ln785_149_fu_1562_p2 | tmp_485_reg_4084);

assign or_ln785_75_fu_1788_p2 = (xor_ln785_151_fu_1782_p2 | tmp_491_reg_4147);

assign or_ln785_76_fu_2008_p2 = (xor_ln785_153_fu_2002_p2 | tmp_497_reg_4210);

assign or_ln785_77_fu_2228_p2 = (xor_ln785_155_fu_2222_p2 | tmp_503_reg_4273);

assign or_ln785_78_fu_2448_p2 = (xor_ln785_157_fu_2442_p2 | tmp_509_reg_4336);

assign or_ln785_79_fu_2668_p2 = (xor_ln785_159_fu_2662_p2 | tmp_515_reg_4399);

assign or_ln785_80_fu_2888_p2 = (xor_ln785_161_fu_2882_p2 | tmp_521_reg_4462);

assign or_ln785_81_fu_3119_p2 = (xor_ln785_163_fu_3113_p2 | tmp_527_reg_4525);

assign or_ln785_fu_1348_p2 = (xor_ln785_fu_1342_p2 | tmp_479_reg_3988);

assign or_ln786_74_fu_1584_p2 = (and_ln786_149_reg_4114 | and_ln781_74_reg_4108);

assign or_ln786_75_fu_1804_p2 = (and_ln786_151_reg_4177 | and_ln781_75_reg_4171);

assign or_ln786_76_fu_2024_p2 = (and_ln786_153_reg_4240 | and_ln781_76_reg_4234);

assign or_ln786_77_fu_2244_p2 = (and_ln786_155_reg_4303 | and_ln781_77_reg_4297);

assign or_ln786_78_fu_2464_p2 = (and_ln786_157_reg_4366 | and_ln781_78_reg_4360);

assign or_ln786_79_fu_2684_p2 = (and_ln786_159_reg_4429 | and_ln781_79_reg_4423);

assign or_ln786_80_fu_2904_p2 = (and_ln786_161_reg_4492 | and_ln781_80_reg_4486);

assign or_ln786_81_fu_3135_p2 = (and_ln786_163_reg_4555 | and_ln781_81_reg_4549);

assign or_ln786_fu_1364_p2 = (and_ln786_reg_4040 | and_ln781_reg_4034);

assign output_fmap_d0 = select_ln340_164_reg_4561;

assign p_cast_fu_1077_p1 = empty_162_reg_3783;

assign p_dup_fu_755_p2 = (4'd1 + select_ln109_reg_3369);

assign p_mid13_fu_874_p2 = (4'd3 + select_ln109_reg_3369);

assign p_mid1_fu_778_p2 = (4'd2 + select_ln109_reg_3369);

assign p_shl6_cast_fu_862_p3 = {{trunc_ln129_6_reg_3473}, {4'd0}};

assign p_shl7_cast_fu_903_p3 = {{trunc_ln129_4_reg_3540}, {4'd0}};

assign p_shl_cast_fu_915_p3 = {{trunc_ln129_8_reg_3557}, {4'd0}};

assign select_ln107_1_fu_500_p3 = ((icmp_ln109_reg_3287[0:0] === 1'b1) ? add_ln107_reg_3281 : kernel_number_reg_371);

assign select_ln107_2_fu_652_p3 = ((icmp_ln109_reg_3287[0:0] === 1'b1) ? tmp_92_cast_fu_631_p3 : add_ln129_2_fu_580_p2);

assign select_ln107_fu_480_p3 = ((icmp_ln109_fu_474_p2[0:0] === 1'b1) ? 5'd0 : ap_phi_mux_kernel_channel_phi_fu_399_p4);

assign select_ln109_10_fu_955_p3 = ((icmp_ln109_reg_3287[0:0] === 1'b1) ? 13'd1 : add_ln109_1_reg_3483);

assign select_ln109_1_fu_542_p3 = ((and_ln107_5_fu_520_p2[0:0] === 1'b1) ? add_ln109_fu_524_p2 : select_ln107_reg_3298);

assign select_ln109_2_fu_1154_p3 = ((and_ln107_5_reg_3345_pp0_iter2_reg[0:0] === 1'b1) ? icmp_ln121_4_reg_3895 : or_ln107_fu_1150_p2);

assign select_ln109_3_fu_707_p3 = ((and_ln107_5_reg_3345[0:0] === 1'b1) ? add_ln129_3_fu_681_p2 : select_ln107_2_fu_652_p3);

assign select_ln109_4_fu_714_p3 = ((and_ln107_5_reg_3345[0:0] === 1'b1) ? icmp_ln121_5_reg_3384 : and_ln107_fu_659_p2);

assign select_ln109_5_fu_720_p3 = ((and_ln107_5_reg_3345[0:0] === 1'b1) ? icmp_ln121_6_reg_3389 : and_ln107_1_fu_664_p2);

assign select_ln109_6_fu_726_p3 = ((and_ln107_5_reg_3345[0:0] === 1'b1) ? icmp_ln121_7_reg_3394 : and_ln107_2_fu_669_p2);

assign select_ln109_7_fu_2961_p3 = ((and_ln107_5_reg_3345_pp0_iter8_reg[0:0] === 1'b1) ? icmp_ln121_8_reg_3399_pp0_iter8_reg : and_ln107_3_fu_2957_p2);

assign select_ln109_8_fu_732_p3 = ((or_ln109_reg_3362[0:0] === 1'b1) ? 4'd1 : empty_fu_616_p2);

assign select_ln109_9_fu_830_p3 = ((or_ln109_reg_3362[0:0] === 1'b1) ? 4'd2 : empty_157_reg_3409);

assign select_ln109_fu_534_p3 = ((or_ln109_fu_529_p2[0:0] === 1'b1) ? 4'd0 : ap_phi_mux_shift_col_num_phi_fu_423_p4);

assign select_ln111_1_fu_836_p3 = ((and_ln109_reg_3449[0:0] === 1'b1) ? p_dup_reg_3455 : select_ln109_reg_3369);

assign select_ln111_2_fu_783_p3 = ((and_ln109_fu_749_p2[0:0] === 1'b1) ? p_mid1_fu_778_p2 : select_ln109_8_fu_732_p3);

assign select_ln111_3_fu_879_p3 = ((and_ln109_reg_3449[0:0] === 1'b1) ? p_mid13_fu_874_p2 : select_ln109_9_fu_830_p3);

assign select_ln111_4_fu_949_p3 = ((or_ln109_reg_3362[0:0] === 1'b1) ? 8'd1 : add_ln111_reg_3478);

assign select_ln111_fu_770_p3 = ((or_ln111_1_fu_765_p2[0:0] === 1'b1) ? 4'd0 : shift_row_num_reg_431);

assign select_ln121_1_fu_1417_p3 = ((select_ln109_4_reg_3430_pp0_iter2_reg[0:0] === 1'b1) ? sext_ln107_reg_3932 : select_ln340_148_reg_4057);

assign select_ln121_2_fu_1637_p3 = ((select_ln109_5_reg_3436_pp0_iter3_reg[0:0] === 1'b1) ? sext_ln107_reg_3932_pp0_iter3_reg : select_ln340_150_reg_4120);

assign select_ln121_3_fu_1857_p3 = ((select_ln109_4_reg_3430_pp0_iter4_reg[0:0] === 1'b1) ? sext_ln107_reg_3932_pp0_iter4_reg : select_ln340_152_reg_4183);

assign select_ln121_4_fu_2077_p3 = ((select_ln109_5_reg_3436_pp0_iter5_reg[0:0] === 1'b1) ? sext_ln107_reg_3932_pp0_iter5_reg : select_ln340_154_reg_4246);

assign select_ln121_5_fu_2297_p3 = ((select_ln109_6_reg_3443_pp0_iter5_reg[0:0] === 1'b1) ? sext_ln107_reg_3932_pp0_iter5_reg : select_ln340_156_reg_4309);

assign select_ln121_6_fu_2517_p3 = ((select_ln109_5_reg_3436_pp0_iter6_reg[0:0] === 1'b1) ? sext_ln107_reg_3932_pp0_iter6_reg : select_ln340_158_reg_4372);

assign select_ln121_7_fu_2737_p3 = ((select_ln109_6_reg_3443_pp0_iter7_reg[0:0] === 1'b1) ? sext_ln107_reg_3932_pp0_iter7_reg : select_ln340_160_reg_4435);

assign select_ln121_8_fu_2967_p3 = ((select_ln109_7_fu_2961_p3[0:0] === 1'b1) ? sext_ln107_reg_3932_pp0_iter8_reg : select_ln340_162_reg_4498);

assign select_ln121_fu_1160_p3 = ((select_ln109_2_fu_1154_p3[0:0] === 1'b1) ? sext_ln107_fu_1147_p1 : output_fmap_load_reg_3858);

assign select_ln340_148_fu_1409_p3 = ((or_ln340_222_fu_1390_p2[0:0] === 1'b1) ? select_ln340_fu_1395_p3 : select_ln388_fu_1402_p3);

assign select_ln340_149_fu_1615_p3 = ((or_ln340_224_fu_1599_p2[0:0] === 1'b1) ? 16'd32767 : add_ln415_74_reg_4078);

assign select_ln340_150_fu_1629_p3 = ((or_ln340_225_fu_1610_p2[0:0] === 1'b1) ? select_ln340_149_fu_1615_p3 : select_ln388_74_fu_1622_p3);

assign select_ln340_151_fu_1835_p3 = ((or_ln340_227_fu_1819_p2[0:0] === 1'b1) ? 16'd32767 : add_ln415_75_reg_4141);

assign select_ln340_152_fu_1849_p3 = ((or_ln340_228_fu_1830_p2[0:0] === 1'b1) ? select_ln340_151_fu_1835_p3 : select_ln388_75_fu_1842_p3);

assign select_ln340_153_fu_2055_p3 = ((or_ln340_230_fu_2039_p2[0:0] === 1'b1) ? 16'd32767 : add_ln415_76_reg_4204);

assign select_ln340_154_fu_2069_p3 = ((or_ln340_231_fu_2050_p2[0:0] === 1'b1) ? select_ln340_153_fu_2055_p3 : select_ln388_76_fu_2062_p3);

assign select_ln340_155_fu_2275_p3 = ((or_ln340_233_fu_2259_p2[0:0] === 1'b1) ? 16'd32767 : add_ln415_77_reg_4267);

assign select_ln340_156_fu_2289_p3 = ((or_ln340_234_fu_2270_p2[0:0] === 1'b1) ? select_ln340_155_fu_2275_p3 : select_ln388_77_fu_2282_p3);

assign select_ln340_157_fu_2495_p3 = ((or_ln340_236_fu_2479_p2[0:0] === 1'b1) ? 16'd32767 : add_ln415_78_reg_4330);

assign select_ln340_158_fu_2509_p3 = ((or_ln340_237_fu_2490_p2[0:0] === 1'b1) ? select_ln340_157_fu_2495_p3 : select_ln388_78_fu_2502_p3);

assign select_ln340_159_fu_2715_p3 = ((or_ln340_239_fu_2699_p2[0:0] === 1'b1) ? 16'd32767 : add_ln415_79_reg_4393);

assign select_ln340_160_fu_2729_p3 = ((or_ln340_240_fu_2710_p2[0:0] === 1'b1) ? select_ln340_159_fu_2715_p3 : select_ln388_79_fu_2722_p3);

assign select_ln340_161_fu_2935_p3 = ((or_ln340_242_fu_2919_p2[0:0] === 1'b1) ? 16'd32767 : add_ln415_80_reg_4456);

assign select_ln340_162_fu_2949_p3 = ((or_ln340_243_fu_2930_p2[0:0] === 1'b1) ? select_ln340_161_fu_2935_p3 : select_ln388_80_fu_2942_p3);

assign select_ln340_163_fu_3166_p3 = ((or_ln340_245_fu_3150_p2[0:0] === 1'b1) ? 16'd32767 : add_ln415_81_reg_4519);

assign select_ln340_164_fu_3180_p3 = ((or_ln340_246_fu_3161_p2[0:0] === 1'b1) ? select_ln340_163_fu_3166_p3 : select_ln388_81_fu_3173_p3);

assign select_ln340_fu_1395_p3 = ((or_ln340_fu_1379_p2[0:0] === 1'b1) ? 16'd32767 : add_ln415_reg_3982);

assign select_ln388_74_fu_1622_p3 = ((and_ln786_150_fu_1594_p2[0:0] === 1'b1) ? 16'd32768 : add_ln415_74_reg_4078);

assign select_ln388_75_fu_1842_p3 = ((and_ln786_152_fu_1814_p2[0:0] === 1'b1) ? 16'd32768 : add_ln415_75_reg_4141);

assign select_ln388_76_fu_2062_p3 = ((and_ln786_154_fu_2034_p2[0:0] === 1'b1) ? 16'd32768 : add_ln415_76_reg_4204);

assign select_ln388_77_fu_2282_p3 = ((and_ln786_156_fu_2254_p2[0:0] === 1'b1) ? 16'd32768 : add_ln415_77_reg_4267);

assign select_ln388_78_fu_2502_p3 = ((and_ln786_158_fu_2474_p2[0:0] === 1'b1) ? 16'd32768 : add_ln415_78_reg_4330);

assign select_ln388_79_fu_2722_p3 = ((and_ln786_160_fu_2694_p2[0:0] === 1'b1) ? 16'd32768 : add_ln415_79_reg_4393);

assign select_ln388_80_fu_2942_p3 = ((and_ln786_162_fu_2914_p2[0:0] === 1'b1) ? 16'd32768 : add_ln415_80_reg_4456);

assign select_ln388_81_fu_3173_p3 = ((and_ln786_164_fu_3145_p2[0:0] === 1'b1) ? 16'd32768 : add_ln415_81_reg_4519);

assign select_ln388_fu_1402_p3 = ((and_ln786_148_fu_1374_p2[0:0] === 1'b1) ? 16'd32768 : add_ln415_reg_3982);

assign sext_ln107_fu_1147_p1 = $signed(L3_bias_V_load_reg_3713);

assign sext_ln1192_134_fu_1175_p1 = mul_ln1118_reg_3905;

assign sext_ln1192_135_fu_1476_p1 = mul_ln1118_74_reg_3916_pp0_iter3_reg;

assign sext_ln1192_136_fu_1430_p1 = mul_ln1118_74_reg_3916;

assign sext_ln1192_137_fu_1696_p1 = mul_ln1118_75_reg_3960_pp0_iter3_reg;

assign sext_ln1192_138_fu_1650_p1 = mul_ln1118_75_reg_3960_pp0_iter3_reg;

assign sext_ln1192_139_fu_1916_p1 = mul_ln1118_76_reg_3863_pp0_iter5_reg;

assign sext_ln1192_140_fu_1870_p1 = mul_ln1118_76_reg_3863_pp0_iter4_reg;

assign sext_ln1192_141_fu_2136_p1 = mul_ln1118_77_reg_3874_pp0_iter5_reg;

assign sext_ln1192_142_fu_2090_p1 = mul_ln1118_77_reg_3874_pp0_iter5_reg;

assign sext_ln1192_143_fu_2356_p1 = mul_ln1118_78_reg_3971_pp0_iter6_reg;

assign sext_ln1192_144_fu_2310_p1 = mul_ln1118_78_reg_3971_pp0_iter5_reg;

assign sext_ln1192_145_fu_2576_p1 = mul_ln1118_79_reg_3996_pp0_iter6_reg;

assign sext_ln1192_146_fu_2530_p1 = mul_ln1118_79_reg_3996_pp0_iter6_reg;

assign sext_ln1192_147_fu_2796_p1 = mul_ln1118_80_reg_4007_pp0_iter7_reg;

assign sext_ln1192_148_fu_2750_p1 = mul_ln1118_80_reg_4007_pp0_iter7_reg;

assign sext_ln1192_149_fu_3027_p1 = mul_ln1118_81_reg_4046_pp0_iter8_reg;

assign sext_ln1192_150_fu_2981_p1 = mul_ln1118_81_reg_4046_pp0_iter7_reg;

assign sext_ln1192_fu_1249_p1 = mul_ln1118_reg_3905;

assign sext_ln703_73_fu_1473_p1 = shl_ln728_s_reg_4062;

assign sext_ln703_74_fu_1693_p1 = shl_ln728_73_reg_4125;

assign sext_ln703_75_fu_1913_p1 = shl_ln728_74_reg_4188;

assign sext_ln703_76_fu_2133_p1 = shl_ln728_75_reg_4251;

assign sext_ln703_77_fu_2353_p1 = shl_ln728_76_reg_4314;

assign sext_ln703_78_fu_2573_p1 = shl_ln728_77_reg_4377;

assign sext_ln703_79_fu_2793_p1 = shl_ln728_78_reg_4440;

assign sext_ln703_80_fu_3024_p1 = shl_ln728_79_reg_4503;

assign sext_ln703_fu_1246_p1 = shl_ln_reg_3944;

assign shl_ln728_73_fu_1642_p3 = {{select_ln121_2_fu_1637_p3}, {8'd0}};

assign shl_ln728_74_fu_1862_p3 = {{select_ln121_3_fu_1857_p3}, {8'd0}};

assign shl_ln728_75_fu_2082_p3 = {{select_ln121_4_fu_2077_p3}, {8'd0}};

assign shl_ln728_76_fu_2302_p3 = {{select_ln121_5_fu_2297_p3}, {8'd0}};

assign shl_ln728_77_fu_2522_p3 = {{select_ln121_6_fu_2517_p3}, {8'd0}};

assign shl_ln728_78_fu_2742_p3 = {{select_ln121_7_fu_2737_p3}, {8'd0}};

assign shl_ln728_79_fu_2973_p3 = {{select_ln121_8_fu_2967_p3}, {8'd0}};

assign shl_ln728_s_fu_1422_p3 = {{select_ln121_1_fu_1417_p3}, {8'd0}};

assign shl_ln_fu_1167_p3 = {{select_ln121_fu_1160_p3}, {8'd0}};

assign sub_ln121_fu_586_p2 = (5'd0 - kernel_channel_reg_395);

assign sub_ln129_1_fu_910_p2 = (p_shl7_cast_fu_903_p3 - trunc_ln129_3_reg_3535);

assign sub_ln129_2_fu_869_p2 = (p_shl6_cast_fu_862_p3 - trunc_ln129_5_reg_3468);

assign sub_ln129_3_fu_922_p2 = (p_shl_cast_fu_915_p3 - trunc_ln129_7_reg_3552);

assign sub_ln129_fu_701_p2 = (zext_ln129_4_fu_697_p1 - zext_ln129_3_fu_687_p1);

assign tmp_480_fu_1276_p3 = add_ln1192_fu_1252_p2[32'd24];

assign tmp_481_fu_1294_p3 = add_ln1192_fu_1252_p2[32'd24];

assign tmp_486_fu_1503_p3 = add_ln1192_74_fu_1479_p2[32'd24];

assign tmp_487_fu_1521_p3 = add_ln1192_74_fu_1479_p2[32'd24];

assign tmp_492_fu_1723_p3 = add_ln1192_75_fu_1699_p2[32'd24];

assign tmp_493_fu_1741_p3 = add_ln1192_75_fu_1699_p2[32'd24];

assign tmp_498_fu_1943_p3 = add_ln1192_76_fu_1919_p2[32'd24];

assign tmp_499_fu_1961_p3 = add_ln1192_76_fu_1919_p2[32'd24];

assign tmp_504_fu_2163_p3 = add_ln1192_77_fu_2139_p2[32'd24];

assign tmp_505_fu_2181_p3 = add_ln1192_77_fu_2139_p2[32'd24];

assign tmp_510_fu_2383_p3 = add_ln1192_78_fu_2359_p2[32'd24];

assign tmp_511_fu_2401_p3 = add_ln1192_78_fu_2359_p2[32'd24];

assign tmp_516_fu_2603_p3 = add_ln1192_79_fu_2579_p2[32'd24];

assign tmp_517_fu_2621_p3 = add_ln1192_79_fu_2579_p2[32'd24];

assign tmp_522_fu_2823_p3 = add_ln1192_80_fu_2799_p2[32'd24];

assign tmp_523_fu_2841_p3 = add_ln1192_80_fu_2799_p2[32'd24];

assign tmp_528_fu_3054_p3 = add_ln1192_81_fu_3030_p2[32'd24];

assign tmp_529_fu_3072_p3 = add_ln1192_81_fu_3030_p2[32'd24];

assign tmp_91_cast_fu_569_p3 = {{trunc_ln129_reg_3267}, {4'd0}};

assign tmp_92_cast_fu_631_p3 = {{trunc_ln129_1_fu_628_p1}, {4'd0}};

assign tmp_94_cast_fu_639_p3 = {{trunc_ln129_2_reg_3335}, {4'd0}};

assign tmp_fu_690_p3 = {{select_ln109_1_reg_3377}, {4'd0}};

assign trunc_ln129_1_fu_628_p1 = add_ln107_reg_3281[4:0];

assign trunc_ln129_2_fu_510_p1 = select_ln107_1_fu_500_p3[4:0];

assign trunc_ln129_3_fu_854_p1 = add_ln129_4_fu_849_p2[11:0];

assign trunc_ln129_4_fu_858_p1 = add_ln129_4_fu_849_p2[7:0];

assign trunc_ln129_5_fu_801_p1 = add_ln129_5_fu_795_p2[11:0];

assign trunc_ln129_6_fu_805_p1 = add_ln129_5_fu_795_p2[7:0];

assign trunc_ln129_7_fu_895_p1 = add_ln129_6_fu_890_p2[11:0];

assign trunc_ln129_8_fu_899_p1 = add_ln129_6_fu_890_p2[7:0];

assign trunc_ln129_fu_452_p1 = ap_phi_mux_kernel_number_phi_fu_375_p4[4:0];

assign xor_ln107_fu_488_p2 = (icmp_ln109_fu_474_p2 ^ 1'd1);

assign xor_ln109_fu_739_p2 = (icmp_ln111_reg_3318 ^ 1'd1);

assign xor_ln416_74_fu_1493_p2 = (tmp_485_reg_4084 ^ 1'd1);

assign xor_ln416_75_fu_1713_p2 = (tmp_491_reg_4147 ^ 1'd1);

assign xor_ln416_76_fu_1933_p2 = (tmp_497_reg_4210 ^ 1'd1);

assign xor_ln416_77_fu_2153_p2 = (tmp_503_reg_4273 ^ 1'd1);

assign xor_ln416_78_fu_2373_p2 = (tmp_509_reg_4336 ^ 1'd1);

assign xor_ln416_79_fu_2593_p2 = (tmp_515_reg_4399 ^ 1'd1);

assign xor_ln416_80_fu_2813_p2 = (tmp_521_reg_4462 ^ 1'd1);

assign xor_ln416_81_fu_3044_p2 = (tmp_527_reg_4525 ^ 1'd1);

assign xor_ln416_fu_1266_p2 = (tmp_479_reg_3988 ^ 1'd1);

assign xor_ln778_148_fu_1338_p2 = (tmp_480_reg_4024 ^ or_ln778_reg_4029);

assign xor_ln778_149_fu_1511_p2 = (tmp_483_reg_4072 ^ 1'd1);

assign xor_ln778_150_fu_1558_p2 = (tmp_486_reg_4098 ^ or_ln778_74_reg_4103);

assign xor_ln778_151_fu_1731_p2 = (tmp_489_reg_4135 ^ 1'd1);

assign xor_ln778_152_fu_1778_p2 = (tmp_492_reg_4161 ^ or_ln778_75_reg_4166);

assign xor_ln778_153_fu_1951_p2 = (tmp_495_reg_4198 ^ 1'd1);

assign xor_ln778_154_fu_1998_p2 = (tmp_498_reg_4224 ^ or_ln778_76_reg_4229);

assign xor_ln778_155_fu_2171_p2 = (tmp_501_reg_4261 ^ 1'd1);

assign xor_ln778_156_fu_2218_p2 = (tmp_504_reg_4287 ^ or_ln778_77_reg_4292);

assign xor_ln778_157_fu_2391_p2 = (tmp_507_reg_4324 ^ 1'd1);

assign xor_ln778_158_fu_2438_p2 = (tmp_510_reg_4350 ^ or_ln778_78_reg_4355);

assign xor_ln778_159_fu_2611_p2 = (tmp_513_reg_4387 ^ 1'd1);

assign xor_ln778_160_fu_2658_p2 = (tmp_516_reg_4413 ^ or_ln778_79_reg_4418);

assign xor_ln778_161_fu_2831_p2 = (tmp_519_reg_4450 ^ 1'd1);

assign xor_ln778_162_fu_2878_p2 = (tmp_522_reg_4476 ^ or_ln778_80_reg_4481);

assign xor_ln778_163_fu_3062_p2 = (tmp_525_reg_4513 ^ 1'd1);

assign xor_ln778_164_fu_3109_p2 = (tmp_528_reg_4539 ^ or_ln778_81_reg_4544);

assign xor_ln778_fu_1284_p2 = (tmp_477_reg_3954 ^ 1'd1);

assign xor_ln780_74_fu_1529_p2 = (tmp_487_fu_1521_p3 ^ 1'd1);

assign xor_ln780_75_fu_1749_p2 = (tmp_493_fu_1741_p3 ^ 1'd1);

assign xor_ln780_76_fu_1969_p2 = (tmp_499_fu_1961_p3 ^ 1'd1);

assign xor_ln780_77_fu_2189_p2 = (tmp_505_fu_2181_p3 ^ 1'd1);

assign xor_ln780_78_fu_2409_p2 = (tmp_511_fu_2401_p3 ^ 1'd1);

assign xor_ln780_79_fu_2629_p2 = (tmp_517_fu_2621_p3 ^ 1'd1);

assign xor_ln780_80_fu_2849_p2 = (tmp_523_fu_2841_p3 ^ 1'd1);

assign xor_ln780_81_fu_3080_p2 = (tmp_529_fu_3072_p3 ^ 1'd1);

assign xor_ln780_fu_1302_p2 = (tmp_481_fu_1294_p3 ^ 1'd1);

assign xor_ln785_148_fu_1353_p2 = (tmp_476_reg_4018 ^ 1'd1);

assign xor_ln785_149_fu_1562_p2 = (xor_ln778_150_fu_1558_p2 ^ 1'd1);

assign xor_ln785_150_fu_1573_p2 = (tmp_482_reg_4092 ^ 1'd1);

assign xor_ln785_151_fu_1782_p2 = (xor_ln778_152_fu_1778_p2 ^ 1'd1);

assign xor_ln785_152_fu_1793_p2 = (tmp_488_reg_4155 ^ 1'd1);

assign xor_ln785_153_fu_2002_p2 = (xor_ln778_154_fu_1998_p2 ^ 1'd1);

assign xor_ln785_154_fu_2013_p2 = (tmp_494_reg_4218 ^ 1'd1);

assign xor_ln785_155_fu_2222_p2 = (xor_ln778_156_fu_2218_p2 ^ 1'd1);

assign xor_ln785_156_fu_2233_p2 = (tmp_500_reg_4281 ^ 1'd1);

assign xor_ln785_157_fu_2442_p2 = (xor_ln778_158_fu_2438_p2 ^ 1'd1);

assign xor_ln785_158_fu_2453_p2 = (tmp_506_reg_4344 ^ 1'd1);

assign xor_ln785_159_fu_2662_p2 = (xor_ln778_160_fu_2658_p2 ^ 1'd1);

assign xor_ln785_160_fu_2673_p2 = (tmp_512_reg_4407 ^ 1'd1);

assign xor_ln785_161_fu_2882_p2 = (xor_ln778_162_fu_2878_p2 ^ 1'd1);

assign xor_ln785_162_fu_2893_p2 = (tmp_518_reg_4470 ^ 1'd1);

assign xor_ln785_163_fu_3113_p2 = (xor_ln778_164_fu_3109_p2 ^ 1'd1);

assign xor_ln785_164_fu_3124_p2 = (tmp_524_reg_4533 ^ 1'd1);

assign xor_ln785_fu_1342_p2 = (xor_ln778_148_fu_1338_p2 ^ 1'd1);

assign xor_ln786_74_fu_1588_p2 = (or_ln786_74_fu_1584_p2 ^ 1'd1);

assign xor_ln786_75_fu_1808_p2 = (or_ln786_75_fu_1804_p2 ^ 1'd1);

assign xor_ln786_76_fu_2028_p2 = (or_ln786_76_fu_2024_p2 ^ 1'd1);

assign xor_ln786_77_fu_2248_p2 = (or_ln786_77_fu_2244_p2 ^ 1'd1);

assign xor_ln786_78_fu_2468_p2 = (or_ln786_78_fu_2464_p2 ^ 1'd1);

assign xor_ln786_79_fu_2688_p2 = (or_ln786_79_fu_2684_p2 ^ 1'd1);

assign xor_ln786_80_fu_2908_p2 = (or_ln786_80_fu_2904_p2 ^ 1'd1);

assign xor_ln786_81_fu_3139_p2 = (or_ln786_81_fu_3135_p2 ^ 1'd1);

assign xor_ln786_fu_1368_p2 = (or_ln786_fu_1364_p2 ^ 1'd1);

assign zext_ln107_fu_1012_p1 = select_ln107_1_reg_3324;

assign zext_ln129_11_fu_927_p1 = select_ln111_reg_3460;

assign zext_ln129_12_fu_1016_p1 = add_ln129_7_reg_3653;

assign zext_ln129_13_fu_968_p1 = add_ln129_8_reg_3617;

assign zext_ln129_14_fu_1055_p1 = add_ln129_9_reg_3663;

assign zext_ln129_15_fu_940_p1 = add_ln129_fu_935_p2;

assign zext_ln129_16_fu_1020_p1 = add_ln129_10_reg_3668;

assign zext_ln129_17_fu_980_p1 = add_ln129_11_reg_3633;

assign zext_ln129_18_fu_1063_p1 = add_ln129_12_reg_3678;

assign zext_ln129_19_fu_993_p1 = add_ln129_1_fu_988_p2;

assign zext_ln129_20_fu_1033_p1 = add_ln129_13_reg_3683;

assign zext_ln129_21_fu_1037_p1 = add_ln129_14_reg_3688;

assign zext_ln129_22_fu_1081_p1 = add_ln129_15_reg_3693;

assign zext_ln129_2_fu_678_p1 = add_ln109_reg_3356;

assign zext_ln129_3_fu_687_p1 = select_ln109_1_reg_3377;

assign zext_ln129_4_fu_697_p1 = tmp_fu_690_p3;

assign zext_ln129_5_fu_821_p1 = select_ln109_3_reg_3425;

assign zext_ln129_7_fu_845_p1 = select_ln111_1_fu_836_p3;

assign zext_ln129_8_fu_791_p1 = select_ln111_2_fu_783_p3;

assign zext_ln129_9_fu_886_p1 = select_ln111_3_fu_879_p3;

assign zext_ln129_fu_576_p1 = kernel_channel_reg_395;

assign zext_ln415_74_fu_1457_p1 = tmp_484_reg_3922_pp0_iter3_reg;

assign zext_ln415_75_fu_1677_p1 = tmp_490_reg_3966_pp0_iter3_reg;

assign zext_ln415_76_fu_1897_p1 = tmp_496_reg_3869_pp0_iter4_reg;

assign zext_ln415_77_fu_2117_p1 = tmp_502_reg_3880_pp0_iter5_reg;

assign zext_ln415_78_fu_2337_p1 = tmp_508_reg_3977_pp0_iter6_reg;

assign zext_ln415_79_fu_2557_p1 = tmp_514_reg_4002_pp0_iter6_reg;

assign zext_ln415_80_fu_2777_p1 = tmp_520_reg_4013_pp0_iter7_reg;

assign zext_ln415_81_fu_3008_p1 = tmp_526_reg_4052_pp0_iter8_reg;

assign zext_ln415_fu_1216_p1 = tmp_478_reg_3911;

always @ (posedge ap_clk) begin
    zext_ln129_5_reg_3488[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln129_11_reg_3611[11:4] <= 8'b00000000;
    zext_ln129_15_reg_3627[11:4] <= 8'b00000000;
    shl_ln_reg_3944[7:0] <= 8'b00000000;
    shl_ln728_s_reg_4062[7:0] <= 8'b00000000;
    shl_ln728_73_reg_4125[7:0] <= 8'b00000000;
    shl_ln728_74_reg_4188[7:0] <= 8'b00000000;
    shl_ln728_75_reg_4251[7:0] <= 8'b00000000;
    shl_ln728_76_reg_4314[7:0] <= 8'b00000000;
    shl_ln728_77_reg_4377[7:0] <= 8'b00000000;
    shl_ln728_78_reg_4440[7:0] <= 8'b00000000;
    shl_ln728_79_reg_4503[7:0] <= 8'b00000000;
end

endmodule //process_element_L3_conv2d
