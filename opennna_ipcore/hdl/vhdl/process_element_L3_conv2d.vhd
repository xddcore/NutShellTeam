-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity process_element_L3_conv2d is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_fmap_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_fmap_ce0 : OUT STD_LOGIC;
    input_fmap_q0 : IN STD_LOGIC_VECTOR (14 downto 0);
    input_fmap_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    input_fmap_ce1 : OUT STD_LOGIC;
    input_fmap_q1 : IN STD_LOGIC_VECTOR (14 downto 0);
    output_fmap_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    output_fmap_ce0 : OUT STD_LOGIC;
    output_fmap_we0 : OUT STD_LOGIC;
    output_fmap_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_fmap_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of process_element_L3_conv2d is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv17_15200 : STD_LOGIC_VECTOR (16 downto 0) := "10101001000000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv13_A90 : STD_LOGIC_VECTOR (12 downto 0) := "0101010010000";
    constant ap_const_lv8_A9 : STD_LOGIC_VECTOR (7 downto 0) := "10101001";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8000 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv10_D : STD_LOGIC_VECTOR (9 downto 0) := "0000001101";
    constant ap_const_lv13_D : STD_LOGIC_VECTOR (12 downto 0) := "0000000001101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal L3_bias_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal L3_bias_V_ce0 : STD_LOGIC;
    signal L3_bias_V_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal L3_Kernel_V_0_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L3_Kernel_V_0_0_ce0 : STD_LOGIC;
    signal L3_Kernel_V_0_0_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_0_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L3_Kernel_V_0_1_ce0 : STD_LOGIC;
    signal L3_Kernel_V_0_1_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_0_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L3_Kernel_V_0_2_ce0 : STD_LOGIC;
    signal L3_Kernel_V_0_2_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_1_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L3_Kernel_V_1_0_ce0 : STD_LOGIC;
    signal L3_Kernel_V_1_0_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_1_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L3_Kernel_V_1_1_ce0 : STD_LOGIC;
    signal L3_Kernel_V_1_1_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_1_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L3_Kernel_V_1_2_ce0 : STD_LOGIC;
    signal L3_Kernel_V_1_2_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_2_0_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L3_Kernel_V_2_0_ce0 : STD_LOGIC;
    signal L3_Kernel_V_2_0_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_2_1_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L3_Kernel_V_2_1_ce0 : STD_LOGIC;
    signal L3_Kernel_V_2_1_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_2_2_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal L3_Kernel_V_2_2_ce0 : STD_LOGIC;
    signal L3_Kernel_V_2_2_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten130_reg_360 : STD_LOGIC_VECTOR (16 downto 0);
    signal kernel_number_reg_371 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten33_reg_383 : STD_LOGIC_VECTOR (12 downto 0);
    signal kernel_channel_reg_395 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten_reg_407 : STD_LOGIC_VECTOR (7 downto 0);
    signal shift_col_num_reg_419 : STD_LOGIC_VECTOR (3 downto 0);
    signal shift_row_num_reg_431 : STD_LOGIC_VECTOR (3 downto 0);
    signal reg_443 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state28_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state33_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state38_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state48_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal icmp_ln107_reg_3272 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_3272_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_5_reg_3436 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_6_reg_3443 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state14_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state29_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state34_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state39_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state44_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state49_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal select_ln109_4_reg_3430 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state15_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state25_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state30_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state35_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state40_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state45_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state50_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal select_ln109_4_reg_3430_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_5_reg_3436_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_6_reg_3443_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state16_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state26_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state31_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state36_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state41_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state46_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state37_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state47_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal reg_448 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln129_fu_452_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln129_reg_3267 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln107_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_3272_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_3272_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_3272_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_3272_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_3272_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_3272_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_3272_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_reg_3272_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln107_1_fu_462_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln107_1_reg_3276 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal add_ln107_fu_468_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln107_reg_3281 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln109_fu_474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_3287 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_3287_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_reg_3287_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln107_fu_480_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln107_reg_3298 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln107_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_reg_3308 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_reg_3308_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_reg_3308_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_reg_3308_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_reg_3308_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_reg_3308_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_reg_3308_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_reg_3308_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln107_reg_3308_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_3318 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln107_1_fu_500_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln107_1_reg_3324 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln129_2_fu_510_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln129_2_reg_3335 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln113_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln113_reg_3340 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_fu_520_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_3345 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_3345_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_3345_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_3345_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_3345_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_3345_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_3345_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_3345_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_5_reg_3345_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln109_fu_524_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln109_reg_3356 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln109_reg_3356_pp0_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal or_ln109_fu_529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln109_reg_3362 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_fu_534_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_reg_3369 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_1_fu_542_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln109_1_reg_3377 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln121_5_fu_549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_5_reg_3384 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_6_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_6_reg_3389 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_7_fu_559_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_7_reg_3394 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_8_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_8_reg_3399 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_8_reg_3399_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_8_reg_3399_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_8_reg_3399_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_8_reg_3399_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_8_reg_3399_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_8_reg_3399_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_8_reg_3399_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_8_reg_3399_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_reg_3404 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_reg_3404_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_reg_3404_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_reg_3404_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_reg_3404_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_reg_3404_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_reg_3404_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_reg_3404_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_3_reg_3404_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_157_fu_622_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_157_reg_3409 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln12151_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12151_reg_3414 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln12151_reg_3414_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln129_fu_701_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal sub_ln129_reg_3419 : STD_LOGIC_VECTOR (59 downto 0);
    signal select_ln109_3_fu_707_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln109_3_reg_3425 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln109_4_fu_714_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_4_reg_3430_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_4_reg_3430_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_4_reg_3430_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_5_fu_720_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_5_reg_3436_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_5_reg_3436_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_5_reg_3436_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_5_reg_3436_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_5_reg_3436_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_6_fu_726_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_6_reg_3443_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_6_reg_3443_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_6_reg_3443_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_6_reg_3443_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_6_reg_3443_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_6_reg_3443_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln109_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln109_reg_3449 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_dup_fu_755_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_dup_reg_3455 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln111_fu_770_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln111_reg_3460 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln129_5_fu_801_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln129_5_reg_3468 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln129_6_fu_805_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln129_6_reg_3473 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln111_fu_809_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln111_reg_3478 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln109_1_fu_815_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln109_1_reg_3483 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln129_5_fu_821_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln129_5_reg_3488 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln111_1_fu_836_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln111_1_reg_3525 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln129_3_fu_854_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln129_3_reg_3535 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln129_4_fu_858_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln129_4_reg_3540 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln129_2_fu_869_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln129_2_reg_3545 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln129_7_fu_895_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln129_7_reg_3552 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln129_8_fu_899_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln129_8_reg_3557 : STD_LOGIC_VECTOR (7 downto 0);
    signal L3_Kernel_V_0_0_load_reg_3562 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_0_1_load_reg_3567 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_0_2_load_reg_3572 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_1_0_load_reg_3577 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_1_1_load_reg_3582 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_1_2_load_reg_3587 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln129_1_fu_910_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln129_1_reg_3592 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_3188_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_160_reg_3599 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln129_3_fu_922_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln129_3_reg_3604 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln129_11_fu_927_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln129_11_reg_3611 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_8_fu_930_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_8_reg_3617 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_fu_935_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln129_reg_3622 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln129_15_fu_940_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln129_15_reg_3627 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_11_fu_944_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_11_reg_3633 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln111_4_fu_949_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln111_4_reg_3638 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln109_10_fu_955_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln109_10_reg_3643 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln129_7_fu_964_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_7_reg_3653 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_9_fu_972_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_9_reg_3663 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_10_fu_976_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_10_reg_3668 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_12_fu_984_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_12_reg_3678 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_13_fu_997_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_13_reg_3683 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_14_fu_1002_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_14_reg_3688 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_15_fu_1007_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_15_reg_3693 : STD_LOGIC_VECTOR (11 downto 0);
    signal L3_bias_V_load_reg_3713 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_3196_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_162_reg_3783 : STD_LOGIC_VECTOR (12 downto 0);
    signal L3_Kernel_V_2_0_load_reg_3813 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_2_1_load_reg_3818 : STD_LOGIC_VECTOR (6 downto 0);
    signal L3_Kernel_V_2_2_load_reg_3823 : STD_LOGIC_VECTOR (6 downto 0);
    signal output_fmap_addr_reg_3828 : STD_LOGIC_VECTOR (12 downto 0);
    signal output_fmap_addr_reg_3828_pp0_iter2_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal output_fmap_addr_reg_3828_pp0_iter3_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal output_fmap_addr_reg_3828_pp0_iter4_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal output_fmap_addr_reg_3828_pp0_iter5_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal output_fmap_addr_reg_3828_pp0_iter6_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal output_fmap_addr_reg_3828_pp0_iter7_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal output_fmap_addr_reg_3828_pp0_iter8_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal output_fmap_load_reg_3858 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3204_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_76_reg_3863 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_76_reg_3863_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_76_reg_3863_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_76_reg_3863_pp0_iter5_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_496_reg_3869 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_496_reg_3869_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_496_reg_3869_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3211_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_77_reg_3874 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_77_reg_3874_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_77_reg_3874_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_77_reg_3874_pp0_iter5_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_502_reg_3880 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_502_reg_3880_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_502_reg_3880_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_502_reg_3880_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_4_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_4_reg_3895 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3218_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_reg_3905 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_478_reg_3911 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3225_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_74_reg_3916 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_74_reg_3916_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_484_reg_3922 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_484_reg_3922_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln107_fu_1147_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln107_reg_3932 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln107_reg_3932_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln107_reg_3932_pp0_iter4_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln107_reg_3932_pp0_iter5_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln107_reg_3932_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln107_reg_3932_pp0_iter7_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln107_reg_3932_pp0_iter8_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_1167_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln_reg_3944 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln_reg_3949 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_477_reg_3954 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3232_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_75_reg_3960 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_75_reg_3960_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_490_reg_3966 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_490_reg_3966_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3239_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_78_reg_3971 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_78_reg_3971_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_78_reg_3971_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_78_reg_3971_pp0_iter5_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_78_reg_3971_pp0_iter6_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_508_reg_3977 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_508_reg_3977_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_508_reg_3977_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_508_reg_3977_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_508_reg_3977_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_fu_1219_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_reg_3982 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_479_reg_3988 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3246_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_79_reg_3996 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_79_reg_3996_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_79_reg_3996_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_79_reg_3996_pp0_iter5_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_79_reg_3996_pp0_iter6_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_514_reg_4002 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_514_reg_4002_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_514_reg_4002_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_514_reg_4002_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_514_reg_4002_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3253_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_80_reg_4007 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_80_reg_4007_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_80_reg_4007_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_80_reg_4007_pp0_iter5_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_80_reg_4007_pp0_iter6_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_80_reg_4007_pp0_iter7_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_520_reg_4013 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_520_reg_4013_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_520_reg_4013_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_520_reg_4013_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_520_reg_4013_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_520_reg_4013_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_476_reg_4018 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_480_fu_1276_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_480_reg_4024 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_fu_1289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_reg_4029 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_fu_1320_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_reg_4034 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_fu_1326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_reg_4040 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3260_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_81_reg_4046 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_81_reg_4046_pp0_iter3_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_81_reg_4046_pp0_iter4_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_81_reg_4046_pp0_iter5_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_81_reg_4046_pp0_iter6_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_81_reg_4046_pp0_iter7_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln1118_81_reg_4046_pp0_iter8_reg : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_526_reg_4052 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_526_reg_4052_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_526_reg_4052_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_526_reg_4052_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_526_reg_4052_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_526_reg_4052_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_526_reg_4052_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_148_fu_1409_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_148_reg_4057 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln728_s_fu_1422_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln728_s_reg_4062 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_s_reg_4067 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_483_reg_4072 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_74_fu_1460_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_74_reg_4078 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_485_reg_4084 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_482_reg_4092 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_486_fu_1503_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_486_reg_4098 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_74_fu_1516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_74_reg_4103 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_74_fu_1547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_74_reg_4108 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_149_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_149_reg_4114 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_150_fu_1629_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_150_reg_4120 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln728_73_fu_1642_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln728_73_reg_4125 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_72_reg_4130 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_489_reg_4135 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_75_fu_1680_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_75_reg_4141 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_491_reg_4147 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_488_reg_4155 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_492_fu_1723_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_492_reg_4161 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_75_fu_1736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_75_reg_4166 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_75_fu_1767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_75_reg_4171 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_151_fu_1773_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_151_reg_4177 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_152_fu_1849_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_152_reg_4183 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln728_74_fu_1862_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln728_74_reg_4188 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_73_reg_4193 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_495_reg_4198 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_76_fu_1900_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_76_reg_4204 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_497_reg_4210 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_494_reg_4218 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_498_fu_1943_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_498_reg_4224 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_76_fu_1956_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_76_reg_4229 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_76_fu_1987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_76_reg_4234 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_153_fu_1993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_153_reg_4240 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_154_fu_2069_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_154_reg_4246 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln728_75_fu_2082_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln728_75_reg_4251 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_74_reg_4256 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_501_reg_4261 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_77_fu_2120_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_77_reg_4267 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_503_reg_4273 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_500_reg_4281 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_504_fu_2163_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_504_reg_4287 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_77_fu_2176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_77_reg_4292 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_77_fu_2207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_77_reg_4297 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_155_fu_2213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_155_reg_4303 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_156_fu_2289_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_156_reg_4309 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln728_76_fu_2302_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln728_76_reg_4314 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_75_reg_4319 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_507_reg_4324 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_78_fu_2340_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_78_reg_4330 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_509_reg_4336 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_506_reg_4344 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_510_fu_2383_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_510_reg_4350 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_78_fu_2396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_78_reg_4355 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_78_fu_2427_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_78_reg_4360 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_157_fu_2433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_157_reg_4366 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_158_fu_2509_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_158_reg_4372 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln728_77_fu_2522_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln728_77_reg_4377 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_76_reg_4382 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_513_reg_4387 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_79_fu_2560_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_79_reg_4393 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_515_reg_4399 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_512_reg_4407 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_516_fu_2603_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_516_reg_4413 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_79_fu_2616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_79_reg_4418 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_79_fu_2647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_79_reg_4423 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_159_fu_2653_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_159_reg_4429 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_160_fu_2729_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_160_reg_4435 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln728_78_fu_2742_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln728_78_reg_4440 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_77_reg_4445 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_519_reg_4450 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_80_fu_2780_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_80_reg_4456 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_521_reg_4462 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_518_reg_4470 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_522_fu_2823_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_522_reg_4476 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_80_fu_2836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_80_reg_4481 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_80_fu_2867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_80_reg_4486 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_161_fu_2873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_161_reg_4492 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_162_fu_2949_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_162_reg_4498 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln728_79_fu_2973_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln728_79_reg_4503 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln708_78_reg_4508 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_525_reg_4513 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_81_fu_3011_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_81_reg_4519 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_527_reg_4525 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_524_reg_4533 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_528_fu_3054_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_528_reg_4539 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_81_fu_3067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln778_81_reg_4544 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_81_fu_3098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln781_81_reg_4549 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_163_fu_3104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_163_reg_4555 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_164_fu_3180_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_164_reg_4561 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_phi_mux_indvar_flatten130_phi_fu_364_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_kernel_number_phi_fu_375_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_phi_mux_indvar_flatten33_phi_fu_387_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_kernel_channel_phi_fu_399_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten_phi_fu_411_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_shift_col_num_phi_fu_423_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_phi_mux_shift_row_num_phi_fu_435_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal zext_ln129_13_fu_968_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln129_17_fu_980_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln107_fu_1012_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln129_12_fu_1016_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln129_16_fu_1020_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln129_20_fu_1033_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal zext_ln129_21_fu_1037_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln129_14_fu_1055_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln129_18_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_1077_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal zext_ln129_22_fu_1081_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln129_fu_576_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_91_cast_fu_569_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln121_fu_586_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln129_1_fu_628_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_92_cast_fu_631_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln129_2_fu_580_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln121_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_1_fu_598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln121_2_fu_604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln129_2_fu_678_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_94_cast_fu_639_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_690_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln129_4_fu_697_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln129_3_fu_687_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln129_3_fu_681_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln107_2_fu_652_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal and_ln107_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_1_fu_664_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_2_fu_669_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_616_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln109_fu_739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_4_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln109_1_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln111_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln111_1_fu_765_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mid1_fu_778_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_8_fu_732_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln111_2_fu_783_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln129_8_fu_791_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln129_5_fu_795_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal zext_ln129_7_fu_845_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln129_4_fu_849_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_shl6_cast_fu_862_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_mid13_fu_874_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln109_9_fu_830_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln111_3_fu_879_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln129_9_fu_886_p1 : STD_LOGIC_VECTOR (59 downto 0);
    signal add_ln129_6_fu_890_p2 : STD_LOGIC_VECTOR (59 downto 0);
    signal p_shl7_cast_fu_903_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_shl_cast_fu_915_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln129_1_fu_988_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln129_19_fu_993_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal or_ln107_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_2_fu_1154_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln121_fu_1160_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_134_fu_1175_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln700_fu_1178_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln415_fu_1216_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_fu_1246_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_fu_1249_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_fu_1252_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln416_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_481_fu_1294_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln780_fu_1302_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln780_fu_1308_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_fu_1271_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln780_fu_1314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_148_fu_1338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_fu_1342_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_fu_1348_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_148_fu_1353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_fu_1364_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_fu_1368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_148_fu_1374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_223_fu_1385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_1379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_222_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_1395_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_fu_1402_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln121_1_fu_1417_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_136_fu_1430_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln700_70_fu_1433_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln415_74_fu_1457_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_73_fu_1473_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_135_fu_1476_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_74_fu_1479_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln416_74_fu_1493_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_149_fu_1511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_487_fu_1521_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln780_74_fu_1529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln780_74_fu_1535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_74_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln780_74_fu_1541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_150_fu_1558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_149_fu_1562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_74_fu_1568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_150_fu_1573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_74_fu_1584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_74_fu_1588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_150_fu_1594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_74_fu_1578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_226_fu_1605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_224_fu_1599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_225_fu_1610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_149_fu_1615_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_74_fu_1622_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln121_2_fu_1637_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_138_fu_1650_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln700_71_fu_1653_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln415_75_fu_1677_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_74_fu_1693_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_137_fu_1696_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_75_fu_1699_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln416_75_fu_1713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_151_fu_1731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_493_fu_1741_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln780_75_fu_1749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln780_75_fu_1755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_75_fu_1718_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln780_75_fu_1761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_152_fu_1778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_151_fu_1782_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_75_fu_1788_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_152_fu_1793_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_75_fu_1804_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_75_fu_1808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_152_fu_1814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_75_fu_1798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_229_fu_1825_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_227_fu_1819_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_228_fu_1830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_151_fu_1835_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_75_fu_1842_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln121_3_fu_1857_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_140_fu_1870_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln700_72_fu_1873_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln415_76_fu_1897_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_75_fu_1913_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_139_fu_1916_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_76_fu_1919_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln416_76_fu_1933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_153_fu_1951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_499_fu_1961_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln780_76_fu_1969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln780_76_fu_1975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_76_fu_1938_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln780_76_fu_1981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_154_fu_1998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_153_fu_2002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_76_fu_2008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_154_fu_2013_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_76_fu_2024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_76_fu_2028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_154_fu_2034_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_76_fu_2018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_232_fu_2045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_230_fu_2039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_231_fu_2050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_153_fu_2055_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_76_fu_2062_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln121_4_fu_2077_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_142_fu_2090_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln700_73_fu_2093_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln415_77_fu_2117_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_76_fu_2133_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_141_fu_2136_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_77_fu_2139_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln416_77_fu_2153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_155_fu_2171_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_505_fu_2181_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln780_77_fu_2189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln780_77_fu_2195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_77_fu_2158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln780_77_fu_2201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_156_fu_2218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_155_fu_2222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_77_fu_2228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_156_fu_2233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_77_fu_2244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_77_fu_2248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_156_fu_2254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_77_fu_2238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_235_fu_2265_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_233_fu_2259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_234_fu_2270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_155_fu_2275_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_77_fu_2282_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln121_5_fu_2297_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_144_fu_2310_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln700_74_fu_2313_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln415_78_fu_2337_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_77_fu_2353_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_143_fu_2356_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_78_fu_2359_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln416_78_fu_2373_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_157_fu_2391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_511_fu_2401_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln780_78_fu_2409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln780_78_fu_2415_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_78_fu_2378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln780_78_fu_2421_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_158_fu_2438_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_157_fu_2442_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_78_fu_2448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_158_fu_2453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_78_fu_2464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_78_fu_2468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_158_fu_2474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_78_fu_2458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_238_fu_2485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_236_fu_2479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_237_fu_2490_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_157_fu_2495_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_78_fu_2502_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln121_6_fu_2517_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_146_fu_2530_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln700_75_fu_2533_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln415_79_fu_2557_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_78_fu_2573_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_145_fu_2576_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_79_fu_2579_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln416_79_fu_2593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_159_fu_2611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_517_fu_2621_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln780_79_fu_2629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln780_79_fu_2635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_79_fu_2598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln780_79_fu_2641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_160_fu_2658_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_159_fu_2662_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_79_fu_2668_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_160_fu_2673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_79_fu_2684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_79_fu_2688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_160_fu_2694_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_79_fu_2678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_241_fu_2705_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_239_fu_2699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_240_fu_2710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_159_fu_2715_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_79_fu_2722_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln121_7_fu_2737_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_148_fu_2750_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln700_76_fu_2753_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln415_80_fu_2777_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_79_fu_2793_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_147_fu_2796_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_80_fu_2799_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln416_80_fu_2813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_161_fu_2831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_523_fu_2841_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln780_80_fu_2849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln780_80_fu_2855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_80_fu_2818_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln780_80_fu_2861_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_162_fu_2878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_161_fu_2882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_80_fu_2888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_162_fu_2893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_80_fu_2904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_80_fu_2908_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_162_fu_2914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_80_fu_2898_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_244_fu_2925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_242_fu_2919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_243_fu_2930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_161_fu_2935_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_80_fu_2942_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln107_3_fu_2957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln109_7_fu_2961_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln121_8_fu_2967_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1192_150_fu_2981_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln700_77_fu_2984_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln415_81_fu_3008_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_80_fu_3024_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln1192_149_fu_3027_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal add_ln1192_81_fu_3030_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal xor_ln416_81_fu_3044_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_163_fu_3062_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_529_fu_3072_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln780_81_fu_3080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln780_81_fu_3086_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_81_fu_3049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln780_81_fu_3092_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln778_164_fu_3109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_163_fu_3113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln785_81_fu_3119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_164_fu_3124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln786_81_fu_3135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln786_81_fu_3139_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln786_164_fu_3145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln785_81_fu_3129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_247_fu_3156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_245_fu_3150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_246_fu_3161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_163_fu_3166_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_81_fu_3173_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_3188_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_3188_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_3188_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_3196_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_3196_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3196_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fu_3204_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3211_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3218_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3225_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3232_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3239_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3246_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3253_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_3260_p0 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_3188_p10 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3188_p20 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_3196_p10 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_3196_p20 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_fu_3204_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_3211_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_3218_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_3225_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_3232_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_3239_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_3246_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_3253_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_3260_p00 : STD_LOGIC_VECTOR (21 downto 0);

    component process_element_mac_muladd_5ns_6ns_4ns_10_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component process_element_mac_muladd_5ns_10ns_4ns_13_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (12 downto 0) );
    end component;


    component process_element_mul_mul_15ns_7s_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (14 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component process_element_L3_conv2d_L3_bias_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component process_element_L3_conv2d_L3_Kernel_V_0_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component process_element_L3_conv2d_L3_Kernel_V_0_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component process_element_L3_conv2d_L3_Kernel_V_0_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component process_element_L3_conv2d_L3_Kernel_V_1_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component process_element_L3_conv2d_L3_Kernel_V_1_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component process_element_L3_conv2d_L3_Kernel_V_1_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component process_element_L3_conv2d_L3_Kernel_V_2_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component process_element_L3_conv2d_L3_Kernel_V_2_1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component process_element_L3_conv2d_L3_Kernel_V_2_2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;



begin
    L3_bias_V_U : component process_element_L3_conv2d_L3_bias_V
    generic map (
        DataWidth => 6,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L3_bias_V_address0,
        ce0 => L3_bias_V_ce0,
        q0 => L3_bias_V_q0);

    L3_Kernel_V_0_0_U : component process_element_L3_conv2d_L3_Kernel_V_0_0
    generic map (
        DataWidth => 7,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L3_Kernel_V_0_0_address0,
        ce0 => L3_Kernel_V_0_0_ce0,
        q0 => L3_Kernel_V_0_0_q0);

    L3_Kernel_V_0_1_U : component process_element_L3_conv2d_L3_Kernel_V_0_1
    generic map (
        DataWidth => 7,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L3_Kernel_V_0_1_address0,
        ce0 => L3_Kernel_V_0_1_ce0,
        q0 => L3_Kernel_V_0_1_q0);

    L3_Kernel_V_0_2_U : component process_element_L3_conv2d_L3_Kernel_V_0_2
    generic map (
        DataWidth => 7,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L3_Kernel_V_0_2_address0,
        ce0 => L3_Kernel_V_0_2_ce0,
        q0 => L3_Kernel_V_0_2_q0);

    L3_Kernel_V_1_0_U : component process_element_L3_conv2d_L3_Kernel_V_1_0
    generic map (
        DataWidth => 7,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L3_Kernel_V_1_0_address0,
        ce0 => L3_Kernel_V_1_0_ce0,
        q0 => L3_Kernel_V_1_0_q0);

    L3_Kernel_V_1_1_U : component process_element_L3_conv2d_L3_Kernel_V_1_1
    generic map (
        DataWidth => 7,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L3_Kernel_V_1_1_address0,
        ce0 => L3_Kernel_V_1_1_ce0,
        q0 => L3_Kernel_V_1_1_q0);

    L3_Kernel_V_1_2_U : component process_element_L3_conv2d_L3_Kernel_V_1_2
    generic map (
        DataWidth => 7,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L3_Kernel_V_1_2_address0,
        ce0 => L3_Kernel_V_1_2_ce0,
        q0 => L3_Kernel_V_1_2_q0);

    L3_Kernel_V_2_0_U : component process_element_L3_conv2d_L3_Kernel_V_2_0
    generic map (
        DataWidth => 7,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L3_Kernel_V_2_0_address0,
        ce0 => L3_Kernel_V_2_0_ce0,
        q0 => L3_Kernel_V_2_0_q0);

    L3_Kernel_V_2_1_U : component process_element_L3_conv2d_L3_Kernel_V_2_1
    generic map (
        DataWidth => 7,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L3_Kernel_V_2_1_address0,
        ce0 => L3_Kernel_V_2_1_ce0,
        q0 => L3_Kernel_V_2_1_q0);

    L3_Kernel_V_2_2_U : component process_element_L3_conv2d_L3_Kernel_V_2_2
    generic map (
        DataWidth => 7,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => L3_Kernel_V_2_2_address0,
        ce0 => L3_Kernel_V_2_2_ce0,
        q0 => L3_Kernel_V_2_2_q0);

    mac_muladd_5ns_6ns_4ns_10_4_1_U1 : component process_element_mac_muladd_5ns_6ns_4ns_10_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 5,
        din1_WIDTH => 6,
        din2_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3188_p0,
        din1 => grp_fu_3188_p1,
        din2 => grp_fu_3188_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3188_p3);

    mac_muladd_5ns_10ns_4ns_13_4_1_U2 : component process_element_mac_muladd_5ns_10ns_4ns_13_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 5,
        din1_WIDTH => 10,
        din2_WIDTH => 4,
        dout_WIDTH => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3196_p0,
        din1 => grp_fu_3196_p1,
        din2 => grp_fu_3196_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_3196_p3);

    mul_mul_15ns_7s_22_4_1_U3 : component process_element_mul_mul_15ns_7s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 15,
        din1_WIDTH => 7,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3204_p0,
        din1 => L3_Kernel_V_1_0_load_reg_3577,
        ce => ap_const_logic_1,
        dout => grp_fu_3204_p2);

    mul_mul_15ns_7s_22_4_1_U4 : component process_element_mul_mul_15ns_7s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 15,
        din1_WIDTH => 7,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3211_p0,
        din1 => L3_Kernel_V_1_1_load_reg_3582,
        ce => ap_const_logic_1,
        dout => grp_fu_3211_p2);

    mul_mul_15ns_7s_22_4_1_U5 : component process_element_mul_mul_15ns_7s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 15,
        din1_WIDTH => 7,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3218_p0,
        din1 => L3_Kernel_V_0_0_load_reg_3562,
        ce => ap_const_logic_1,
        dout => grp_fu_3218_p2);

    mul_mul_15ns_7s_22_4_1_U6 : component process_element_mul_mul_15ns_7s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 15,
        din1_WIDTH => 7,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3225_p0,
        din1 => L3_Kernel_V_0_1_load_reg_3567,
        ce => ap_const_logic_1,
        dout => grp_fu_3225_p2);

    mul_mul_15ns_7s_22_4_1_U7 : component process_element_mul_mul_15ns_7s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 15,
        din1_WIDTH => 7,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3232_p0,
        din1 => L3_Kernel_V_0_2_load_reg_3572,
        ce => ap_const_logic_1,
        dout => grp_fu_3232_p2);

    mul_mul_15ns_7s_22_4_1_U8 : component process_element_mul_mul_15ns_7s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 15,
        din1_WIDTH => 7,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3239_p0,
        din1 => L3_Kernel_V_1_2_load_reg_3587,
        ce => ap_const_logic_1,
        dout => grp_fu_3239_p2);

    mul_mul_15ns_7s_22_4_1_U9 : component process_element_mul_mul_15ns_7s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 15,
        din1_WIDTH => 7,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3246_p0,
        din1 => L3_Kernel_V_2_0_load_reg_3813,
        ce => ap_const_logic_1,
        dout => grp_fu_3246_p2);

    mul_mul_15ns_7s_22_4_1_U10 : component process_element_mul_mul_15ns_7s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 15,
        din1_WIDTH => 7,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3253_p0,
        din1 => L3_Kernel_V_2_1_load_reg_3818,
        ce => ap_const_logic_1,
        dout => grp_fu_3253_p2);

    mul_mul_15ns_7s_22_4_1_U11 : component process_element_mul_mul_15ns_7s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 15,
        din1_WIDTH => 7,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3260_p0,
        din1 => L3_Kernel_V_2_2_load_reg_3823,
        ce => ap_const_logic_1,
        dout => grp_fu_3260_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten130_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten130_reg_360 <= add_ln107_1_reg_3276;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten130_reg_360 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    indvar_flatten33_reg_383_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten33_reg_383 <= select_ln109_10_reg_3643;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten33_reg_383 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                indvar_flatten_reg_407 <= select_ln111_4_reg_3638;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_407 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    kernel_channel_reg_395_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                kernel_channel_reg_395 <= select_ln109_1_reg_3377;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                kernel_channel_reg_395 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    kernel_number_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                kernel_number_reg_371 <= select_ln107_1_reg_3324;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                kernel_number_reg_371 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    reg_443_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                reg_443 <= input_fmap_q0;
            elsif ((((select_ln109_6_reg_3443_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((select_ln109_6_reg_3443_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (select_ln109_4_reg_3430 = ap_const_lv1_0) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (select_ln109_5_reg_3436 = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (select_ln109_5_reg_3436 = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
                reg_443 <= input_fmap_q1;
            end if; 
        end if;
    end process;

    shift_col_num_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                shift_col_num_reg_419 <= select_ln111_1_reg_3525;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                shift_col_num_reg_419 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    shift_row_num_reg_431_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                shift_row_num_reg_431 <= add_ln129_reg_3622;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                shift_row_num_reg_431 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (select_ln109_4_reg_3430 = ap_const_lv1_0) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (select_ln109_5_reg_3436 = ap_const_lv1_0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                L3_Kernel_V_0_0_load_reg_3562 <= L3_Kernel_V_0_0_q0;
                L3_Kernel_V_0_1_load_reg_3567 <= L3_Kernel_V_0_1_q0;
                L3_Kernel_V_0_2_load_reg_3572 <= L3_Kernel_V_0_2_q0;
                sub_ln129_1_reg_3592 <= sub_ln129_1_fu_910_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (select_ln109_5_reg_3436 = ap_const_lv1_0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                L3_Kernel_V_1_0_load_reg_3577 <= L3_Kernel_V_1_0_q0;
                L3_Kernel_V_1_1_load_reg_3582 <= L3_Kernel_V_1_1_q0;
                L3_Kernel_V_1_2_load_reg_3587 <= L3_Kernel_V_1_2_q0;
                add_ln129_11_reg_3633 <= add_ln129_11_fu_944_p2;
                add_ln129_8_reg_3617 <= add_ln129_8_fu_930_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                L3_Kernel_V_2_0_load_reg_3813 <= L3_Kernel_V_2_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                L3_Kernel_V_2_1_load_reg_3818 <= L3_Kernel_V_2_1_q0;
                L3_Kernel_V_2_2_load_reg_3823 <= L3_Kernel_V_2_2_q0;
                output_fmap_addr_reg_3828 <= p_cast_fu_1077_p1(13 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                L3_bias_V_load_reg_3713 <= L3_bias_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln107_1_reg_3276 <= add_ln107_1_fu_462_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_fu_456_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln107_reg_3281 <= add_ln107_fu_468_p2;
                icmp_ln109_reg_3287 <= icmp_ln109_fu_474_p2;
                icmp_ln111_reg_3318 <= icmp_ln111_fu_494_p2;
                select_ln107_reg_3298 <= select_ln107_fu_480_p3;
                xor_ln107_reg_3308 <= xor_ln107_fu_488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_reg_3287 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln109_1_reg_3483 <= add_ln109_1_fu_815_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln109_reg_3356 <= add_ln109_fu_524_p2;
                and_ln107_5_reg_3345 <= and_ln107_5_fu_520_p2;
                icmp_ln113_reg_3340 <= icmp_ln113_fu_514_p2;
                icmp_ln121_5_reg_3384 <= icmp_ln121_5_fu_549_p2;
                icmp_ln121_6_reg_3389 <= icmp_ln121_6_fu_554_p2;
                icmp_ln121_7_reg_3394 <= icmp_ln121_7_fu_559_p2;
                icmp_ln121_8_reg_3399 <= icmp_ln121_8_fu_564_p2;
                or_ln109_reg_3362 <= or_ln109_fu_529_p2;
                select_ln109_reg_3369 <= select_ln109_fu_534_p3;
                trunc_ln129_2_reg_3335 <= trunc_ln129_2_fu_510_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln109_reg_3356_pp0_iter1_reg <= add_ln109_reg_3356;
                and_ln107_5_reg_3345_pp0_iter1_reg <= and_ln107_5_reg_3345;
                and_ln107_5_reg_3345_pp0_iter2_reg <= and_ln107_5_reg_3345_pp0_iter1_reg;
                and_ln107_5_reg_3345_pp0_iter3_reg <= and_ln107_5_reg_3345_pp0_iter2_reg;
                and_ln107_5_reg_3345_pp0_iter4_reg <= and_ln107_5_reg_3345_pp0_iter3_reg;
                and_ln107_5_reg_3345_pp0_iter5_reg <= and_ln107_5_reg_3345_pp0_iter4_reg;
                and_ln107_5_reg_3345_pp0_iter6_reg <= and_ln107_5_reg_3345_pp0_iter5_reg;
                and_ln107_5_reg_3345_pp0_iter7_reg <= and_ln107_5_reg_3345_pp0_iter6_reg;
                and_ln107_5_reg_3345_pp0_iter8_reg <= and_ln107_5_reg_3345_pp0_iter7_reg;
                icmp_ln121_8_reg_3399_pp0_iter1_reg <= icmp_ln121_8_reg_3399;
                icmp_ln121_8_reg_3399_pp0_iter2_reg <= icmp_ln121_8_reg_3399_pp0_iter1_reg;
                icmp_ln121_8_reg_3399_pp0_iter3_reg <= icmp_ln121_8_reg_3399_pp0_iter2_reg;
                icmp_ln121_8_reg_3399_pp0_iter4_reg <= icmp_ln121_8_reg_3399_pp0_iter3_reg;
                icmp_ln121_8_reg_3399_pp0_iter5_reg <= icmp_ln121_8_reg_3399_pp0_iter4_reg;
                icmp_ln121_8_reg_3399_pp0_iter6_reg <= icmp_ln121_8_reg_3399_pp0_iter5_reg;
                icmp_ln121_8_reg_3399_pp0_iter7_reg <= icmp_ln121_8_reg_3399_pp0_iter6_reg;
                icmp_ln121_8_reg_3399_pp0_iter8_reg <= icmp_ln121_8_reg_3399_pp0_iter7_reg;
                mul_ln1118_74_reg_3916_pp0_iter3_reg <= mul_ln1118_74_reg_3916;
                tmp_484_reg_3922_pp0_iter3_reg <= tmp_484_reg_3922;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln109_reg_3362 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln111_reg_3478 <= add_ln111_fu_809_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln109_4_reg_3430 = ap_const_lv1_0) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (select_ln109_5_reg_3436 = ap_const_lv1_0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln129_10_reg_3668 <= add_ln129_10_fu_976_p2;
                add_ln129_13_reg_3683 <= add_ln129_13_fu_997_p2;
                add_ln129_7_reg_3653 <= add_ln129_7_fu_964_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln129_12_reg_3678 <= add_ln129_12_fu_984_p2;
                add_ln129_15_reg_3693 <= add_ln129_15_fu_1007_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (select_ln109_5_reg_3436 = ap_const_lv1_0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln129_14_reg_3688 <= add_ln129_14_fu_1002_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln129_9_reg_3663 <= add_ln129_9_fu_972_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln129_reg_3622 <= add_ln129_fu_935_p2;
                empty_160_reg_3599 <= grp_fu_3188_p3;
                select_ln109_10_reg_3643 <= select_ln109_10_fu_955_p3;
                select_ln111_4_reg_3638 <= select_ln111_4_fu_949_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln415_74_reg_4078 <= add_ln415_74_fu_1460_p2;
                tmp_485_reg_4084 <= add_ln415_74_fu_1460_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter3_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter3_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln415_75_reg_4141 <= add_ln415_75_fu_1680_p2;
                tmp_491_reg_4147 <= add_ln415_75_fu_1680_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter4_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln415_76_reg_4204 <= add_ln415_76_fu_1900_p2;
                tmp_497_reg_4210 <= add_ln415_76_fu_1900_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter5_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln415_77_reg_4267 <= add_ln415_77_fu_2120_p2;
                tmp_503_reg_4273 <= add_ln415_77_fu_2120_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter6_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter6_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                add_ln415_78_reg_4330 <= add_ln415_78_fu_2340_p2;
                tmp_509_reg_4336 <= add_ln415_78_fu_2340_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter6_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln415_79_reg_4393 <= add_ln415_79_fu_2560_p2;
                tmp_515_reg_4399 <= add_ln415_79_fu_2560_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln415_80_reg_4456 <= add_ln415_80_fu_2780_p2;
                tmp_521_reg_4462 <= add_ln415_80_fu_2780_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln415_81_reg_4519 <= add_ln415_81_fu_3011_p2;
                tmp_527_reg_4525 <= add_ln415_81_fu_3011_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                add_ln415_reg_3982 <= add_ln415_fu_1219_p2;
                tmp_479_reg_3988 <= add_ln415_fu_1219_p2(15 downto 15);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                and_ln109_reg_3449 <= and_ln109_fu_749_p2;
                p_dup_reg_3455 <= p_dup_fu_755_p2;
                select_ln109_3_reg_3425 <= select_ln109_3_fu_707_p3;
                select_ln109_4_reg_3430 <= select_ln109_4_fu_714_p3;
                select_ln109_5_reg_3436 <= select_ln109_5_fu_720_p3;
                select_ln109_6_reg_3443 <= select_ln109_6_fu_726_p3;
                select_ln111_reg_3460 <= select_ln111_fu_770_p3;
                sub_ln129_reg_3419 <= sub_ln129_fu_701_p2;
                trunc_ln129_5_reg_3468 <= trunc_ln129_5_fu_801_p1;
                trunc_ln129_6_reg_3473 <= trunc_ln129_6_fu_805_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter3_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter3_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                and_ln781_74_reg_4108 <= and_ln781_74_fu_1547_p2;
                and_ln786_149_reg_4114 <= and_ln786_149_fu_1553_p2;
                or_ln778_74_reg_4103 <= or_ln778_74_fu_1516_p2;
                tmp_482_reg_4092 <= add_ln1192_74_fu_1479_p2(24 downto 24);
                tmp_486_reg_4098 <= add_ln1192_74_fu_1479_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter3_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter3_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                and_ln781_75_reg_4171 <= and_ln781_75_fu_1767_p2;
                and_ln786_151_reg_4177 <= and_ln786_151_fu_1773_p2;
                or_ln778_75_reg_4166 <= or_ln778_75_fu_1736_p2;
                tmp_488_reg_4155 <= add_ln1192_75_fu_1699_p2(24 downto 24);
                tmp_492_reg_4161 <= add_ln1192_75_fu_1699_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter4_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                and_ln781_76_reg_4234 <= and_ln781_76_fu_1987_p2;
                and_ln786_153_reg_4240 <= and_ln786_153_fu_1993_p2;
                or_ln778_76_reg_4229 <= or_ln778_76_fu_1956_p2;
                tmp_494_reg_4218 <= add_ln1192_76_fu_1919_p2(24 downto 24);
                tmp_498_reg_4224 <= add_ln1192_76_fu_1919_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter5_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln781_77_reg_4297 <= and_ln781_77_fu_2207_p2;
                and_ln786_155_reg_4303 <= and_ln786_155_fu_2213_p2;
                or_ln778_77_reg_4292 <= or_ln778_77_fu_2176_p2;
                tmp_500_reg_4281 <= add_ln1192_77_fu_2139_p2(24 downto 24);
                tmp_504_reg_4287 <= add_ln1192_77_fu_2139_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter6_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter6_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                and_ln781_78_reg_4360 <= and_ln781_78_fu_2427_p2;
                and_ln786_157_reg_4366 <= and_ln786_157_fu_2433_p2;
                or_ln778_78_reg_4355 <= or_ln778_78_fu_2396_p2;
                tmp_506_reg_4344 <= add_ln1192_78_fu_2359_p2(24 downto 24);
                tmp_510_reg_4350 <= add_ln1192_78_fu_2359_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter7_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                and_ln781_79_reg_4423 <= and_ln781_79_fu_2647_p2;
                and_ln786_159_reg_4429 <= and_ln786_159_fu_2653_p2;
                or_ln778_79_reg_4418 <= or_ln778_79_fu_2616_p2;
                tmp_512_reg_4407 <= add_ln1192_79_fu_2579_p2(24 downto 24);
                tmp_516_reg_4413 <= add_ln1192_79_fu_2579_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                and_ln781_80_reg_4486 <= and_ln781_80_fu_2867_p2;
                and_ln786_161_reg_4492 <= and_ln786_161_fu_2873_p2;
                or_ln778_80_reg_4481 <= or_ln778_80_fu_2836_p2;
                tmp_518_reg_4470 <= add_ln1192_80_fu_2799_p2(24 downto 24);
                tmp_522_reg_4476 <= add_ln1192_80_fu_2799_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                and_ln781_81_reg_4549 <= and_ln781_81_fu_3098_p2;
                and_ln786_163_reg_4555 <= and_ln786_163_fu_3104_p2;
                or_ln778_81_reg_4544 <= or_ln778_81_fu_3067_p2;
                tmp_524_reg_4533 <= add_ln1192_81_fu_3030_p2(24 downto 24);
                tmp_528_reg_4539 <= add_ln1192_81_fu_3030_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                and_ln781_reg_4034 <= and_ln781_fu_1320_p2;
                and_ln786_reg_4040 <= and_ln786_fu_1326_p2;
                or_ln778_reg_4029 <= or_ln778_fu_1289_p2;
                tmp_476_reg_4018 <= add_ln1192_fu_1252_p2(24 downto 24);
                tmp_480_reg_4024 <= add_ln1192_fu_1252_p2(24 downto 24);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln109_reg_3362 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                empty_157_reg_3409 <= empty_157_fu_622_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                empty_162_reg_3783 <= grp_fu_3196_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln107_reg_3272 <= icmp_ln107_fu_456_p2;
                icmp_ln107_reg_3272_pp0_iter1_reg <= icmp_ln107_reg_3272;
                icmp_ln107_reg_3272_pp0_iter2_reg <= icmp_ln107_reg_3272_pp0_iter1_reg;
                icmp_ln107_reg_3272_pp0_iter3_reg <= icmp_ln107_reg_3272_pp0_iter2_reg;
                icmp_ln107_reg_3272_pp0_iter4_reg <= icmp_ln107_reg_3272_pp0_iter3_reg;
                icmp_ln107_reg_3272_pp0_iter5_reg <= icmp_ln107_reg_3272_pp0_iter4_reg;
                icmp_ln107_reg_3272_pp0_iter6_reg <= icmp_ln107_reg_3272_pp0_iter5_reg;
                icmp_ln107_reg_3272_pp0_iter7_reg <= icmp_ln107_reg_3272_pp0_iter6_reg;
                icmp_ln107_reg_3272_pp0_iter8_reg <= icmp_ln107_reg_3272_pp0_iter7_reg;
                icmp_ln107_reg_3272_pp0_iter9_reg <= icmp_ln107_reg_3272_pp0_iter8_reg;
                icmp_ln109_reg_3287_pp0_iter1_reg <= icmp_ln109_reg_3287;
                icmp_ln109_reg_3287_pp0_iter2_reg <= icmp_ln109_reg_3287_pp0_iter1_reg;
                mul_ln1118_76_reg_3863_pp0_iter3_reg <= mul_ln1118_76_reg_3863;
                mul_ln1118_76_reg_3863_pp0_iter4_reg <= mul_ln1118_76_reg_3863_pp0_iter3_reg;
                mul_ln1118_76_reg_3863_pp0_iter5_reg <= mul_ln1118_76_reg_3863_pp0_iter4_reg;
                mul_ln1118_77_reg_3874_pp0_iter3_reg <= mul_ln1118_77_reg_3874;
                mul_ln1118_77_reg_3874_pp0_iter4_reg <= mul_ln1118_77_reg_3874_pp0_iter3_reg;
                mul_ln1118_77_reg_3874_pp0_iter5_reg <= mul_ln1118_77_reg_3874_pp0_iter4_reg;
                tmp_496_reg_3869_pp0_iter3_reg <= tmp_496_reg_3869;
                tmp_496_reg_3869_pp0_iter4_reg <= tmp_496_reg_3869_pp0_iter3_reg;
                tmp_502_reg_3880_pp0_iter3_reg <= tmp_502_reg_3880;
                tmp_502_reg_3880_pp0_iter4_reg <= tmp_502_reg_3880_pp0_iter3_reg;
                tmp_502_reg_3880_pp0_iter5_reg <= tmp_502_reg_3880_pp0_iter4_reg;
                trunc_ln129_reg_3267 <= trunc_ln129_fu_452_p1;
                xor_ln107_reg_3308_pp0_iter1_reg <= xor_ln107_reg_3308;
                xor_ln107_reg_3308_pp0_iter2_reg <= xor_ln107_reg_3308_pp0_iter1_reg;
                xor_ln107_reg_3308_pp0_iter3_reg <= xor_ln107_reg_3308_pp0_iter2_reg;
                xor_ln107_reg_3308_pp0_iter4_reg <= xor_ln107_reg_3308_pp0_iter3_reg;
                xor_ln107_reg_3308_pp0_iter5_reg <= xor_ln107_reg_3308_pp0_iter4_reg;
                xor_ln107_reg_3308_pp0_iter6_reg <= xor_ln107_reg_3308_pp0_iter5_reg;
                xor_ln107_reg_3308_pp0_iter7_reg <= xor_ln107_reg_3308_pp0_iter6_reg;
                xor_ln107_reg_3308_pp0_iter8_reg <= xor_ln107_reg_3308_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = and_ln107_5_reg_3345) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                icmp_ln12151_reg_3414 <= icmp_ln12151_fu_646_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                icmp_ln12151_reg_3414_pp0_iter1_reg <= icmp_ln12151_reg_3414;
                icmp_ln121_3_reg_3404_pp0_iter1_reg <= icmp_ln121_3_reg_3404;
                icmp_ln121_3_reg_3404_pp0_iter2_reg <= icmp_ln121_3_reg_3404_pp0_iter1_reg;
                icmp_ln121_3_reg_3404_pp0_iter3_reg <= icmp_ln121_3_reg_3404_pp0_iter2_reg;
                icmp_ln121_3_reg_3404_pp0_iter4_reg <= icmp_ln121_3_reg_3404_pp0_iter3_reg;
                icmp_ln121_3_reg_3404_pp0_iter5_reg <= icmp_ln121_3_reg_3404_pp0_iter4_reg;
                icmp_ln121_3_reg_3404_pp0_iter6_reg <= icmp_ln121_3_reg_3404_pp0_iter5_reg;
                icmp_ln121_3_reg_3404_pp0_iter7_reg <= icmp_ln121_3_reg_3404_pp0_iter6_reg;
                icmp_ln121_3_reg_3404_pp0_iter8_reg <= icmp_ln121_3_reg_3404_pp0_iter7_reg;
                mul_ln1118_75_reg_3960_pp0_iter3_reg <= mul_ln1118_75_reg_3960;
                mul_ln1118_78_reg_3971_pp0_iter3_reg <= mul_ln1118_78_reg_3971;
                mul_ln1118_78_reg_3971_pp0_iter4_reg <= mul_ln1118_78_reg_3971_pp0_iter3_reg;
                mul_ln1118_78_reg_3971_pp0_iter5_reg <= mul_ln1118_78_reg_3971_pp0_iter4_reg;
                mul_ln1118_78_reg_3971_pp0_iter6_reg <= mul_ln1118_78_reg_3971_pp0_iter5_reg;
                select_ln109_4_reg_3430_pp0_iter1_reg <= select_ln109_4_reg_3430;
                select_ln109_4_reg_3430_pp0_iter2_reg <= select_ln109_4_reg_3430_pp0_iter1_reg;
                select_ln109_4_reg_3430_pp0_iter3_reg <= select_ln109_4_reg_3430_pp0_iter2_reg;
                select_ln109_4_reg_3430_pp0_iter4_reg <= select_ln109_4_reg_3430_pp0_iter3_reg;
                select_ln109_5_reg_3436_pp0_iter1_reg <= select_ln109_5_reg_3436;
                select_ln109_5_reg_3436_pp0_iter2_reg <= select_ln109_5_reg_3436_pp0_iter1_reg;
                select_ln109_5_reg_3436_pp0_iter3_reg <= select_ln109_5_reg_3436_pp0_iter2_reg;
                select_ln109_5_reg_3436_pp0_iter4_reg <= select_ln109_5_reg_3436_pp0_iter3_reg;
                select_ln109_5_reg_3436_pp0_iter5_reg <= select_ln109_5_reg_3436_pp0_iter4_reg;
                select_ln109_5_reg_3436_pp0_iter6_reg <= select_ln109_5_reg_3436_pp0_iter5_reg;
                select_ln109_6_reg_3443_pp0_iter1_reg <= select_ln109_6_reg_3443;
                select_ln109_6_reg_3443_pp0_iter2_reg <= select_ln109_6_reg_3443_pp0_iter1_reg;
                select_ln109_6_reg_3443_pp0_iter3_reg <= select_ln109_6_reg_3443_pp0_iter2_reg;
                select_ln109_6_reg_3443_pp0_iter4_reg <= select_ln109_6_reg_3443_pp0_iter3_reg;
                select_ln109_6_reg_3443_pp0_iter5_reg <= select_ln109_6_reg_3443_pp0_iter4_reg;
                select_ln109_6_reg_3443_pp0_iter6_reg <= select_ln109_6_reg_3443_pp0_iter5_reg;
                select_ln109_6_reg_3443_pp0_iter7_reg <= select_ln109_6_reg_3443_pp0_iter6_reg;
                sext_ln107_reg_3932_pp0_iter3_reg <= sext_ln107_reg_3932;
                sext_ln107_reg_3932_pp0_iter4_reg <= sext_ln107_reg_3932_pp0_iter3_reg;
                sext_ln107_reg_3932_pp0_iter5_reg <= sext_ln107_reg_3932_pp0_iter4_reg;
                sext_ln107_reg_3932_pp0_iter6_reg <= sext_ln107_reg_3932_pp0_iter5_reg;
                sext_ln107_reg_3932_pp0_iter7_reg <= sext_ln107_reg_3932_pp0_iter6_reg;
                sext_ln107_reg_3932_pp0_iter8_reg <= sext_ln107_reg_3932_pp0_iter7_reg;
                tmp_490_reg_3966_pp0_iter3_reg <= tmp_490_reg_3966;
                tmp_508_reg_3977_pp0_iter3_reg <= tmp_508_reg_3977;
                tmp_508_reg_3977_pp0_iter4_reg <= tmp_508_reg_3977_pp0_iter3_reg;
                tmp_508_reg_3977_pp0_iter5_reg <= tmp_508_reg_3977_pp0_iter4_reg;
                tmp_508_reg_3977_pp0_iter6_reg <= tmp_508_reg_3977_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_lv1_0 = and_ln107_5_reg_3345) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                icmp_ln121_3_reg_3404 <= icmp_ln121_3_fu_610_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln107_5_reg_3345_pp0_iter1_reg) and (icmp_ln107_reg_3272_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_6_reg_3443_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln121_4_reg_3895 <= icmp_ln121_4_fu_1121_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_6_reg_3443_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                mul_ln1118_74_reg_3916 <= grp_fu_3225_p2;
                mul_ln1118_reg_3905 <= grp_fu_3218_p2;
                tmp_478_reg_3911 <= grp_fu_3218_p2(7 downto 7);
                tmp_484_reg_3922 <= grp_fu_3225_p2(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_6_reg_3443_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul_ln1118_75_reg_3960 <= grp_fu_3232_p2;
                    shl_ln_reg_3944(23 downto 8) <= shl_ln_fu_1167_p3(23 downto 8);
                tmp_477_reg_3954 <= add_ln700_fu_1178_p2(23 downto 23);
                tmp_490_reg_3966 <= grp_fu_3232_p2(7 downto 7);
                trunc_ln_reg_3949 <= add_ln700_fu_1178_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                mul_ln1118_76_reg_3863 <= grp_fu_3204_p2;
                mul_ln1118_77_reg_3874 <= grp_fu_3211_p2;
                tmp_496_reg_3869 <= grp_fu_3204_p2(7 downto 7);
                tmp_502_reg_3880 <= grp_fu_3211_p2(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_6_reg_3443_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                mul_ln1118_78_reg_3971 <= grp_fu_3239_p2;
                tmp_508_reg_3977 <= grp_fu_3239_p2(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul_ln1118_79_reg_3996 <= grp_fu_3246_p2;
                tmp_514_reg_4002 <= grp_fu_3246_p2(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul_ln1118_79_reg_3996_pp0_iter3_reg <= mul_ln1118_79_reg_3996;
                mul_ln1118_79_reg_3996_pp0_iter4_reg <= mul_ln1118_79_reg_3996_pp0_iter3_reg;
                mul_ln1118_79_reg_3996_pp0_iter5_reg <= mul_ln1118_79_reg_3996_pp0_iter4_reg;
                mul_ln1118_79_reg_3996_pp0_iter6_reg <= mul_ln1118_79_reg_3996_pp0_iter5_reg;
                mul_ln1118_80_reg_4007_pp0_iter3_reg <= mul_ln1118_80_reg_4007;
                mul_ln1118_80_reg_4007_pp0_iter4_reg <= mul_ln1118_80_reg_4007_pp0_iter3_reg;
                mul_ln1118_80_reg_4007_pp0_iter5_reg <= mul_ln1118_80_reg_4007_pp0_iter4_reg;
                mul_ln1118_80_reg_4007_pp0_iter6_reg <= mul_ln1118_80_reg_4007_pp0_iter5_reg;
                mul_ln1118_80_reg_4007_pp0_iter7_reg <= mul_ln1118_80_reg_4007_pp0_iter6_reg;
                tmp_514_reg_4002_pp0_iter3_reg <= tmp_514_reg_4002;
                tmp_514_reg_4002_pp0_iter4_reg <= tmp_514_reg_4002_pp0_iter3_reg;
                tmp_514_reg_4002_pp0_iter5_reg <= tmp_514_reg_4002_pp0_iter4_reg;
                tmp_514_reg_4002_pp0_iter6_reg <= tmp_514_reg_4002_pp0_iter5_reg;
                tmp_520_reg_4013_pp0_iter3_reg <= tmp_520_reg_4013;
                tmp_520_reg_4013_pp0_iter4_reg <= tmp_520_reg_4013_pp0_iter3_reg;
                tmp_520_reg_4013_pp0_iter5_reg <= tmp_520_reg_4013_pp0_iter4_reg;
                tmp_520_reg_4013_pp0_iter6_reg <= tmp_520_reg_4013_pp0_iter5_reg;
                tmp_520_reg_4013_pp0_iter7_reg <= tmp_520_reg_4013_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul_ln1118_80_reg_4007 <= grp_fu_3253_p2;
                tmp_520_reg_4013 <= grp_fu_3253_p2(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                mul_ln1118_81_reg_4046 <= grp_fu_3260_p2;
                tmp_526_reg_4052 <= grp_fu_3260_p2(7 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                mul_ln1118_81_reg_4046_pp0_iter3_reg <= mul_ln1118_81_reg_4046;
                mul_ln1118_81_reg_4046_pp0_iter4_reg <= mul_ln1118_81_reg_4046_pp0_iter3_reg;
                mul_ln1118_81_reg_4046_pp0_iter5_reg <= mul_ln1118_81_reg_4046_pp0_iter4_reg;
                mul_ln1118_81_reg_4046_pp0_iter6_reg <= mul_ln1118_81_reg_4046_pp0_iter5_reg;
                mul_ln1118_81_reg_4046_pp0_iter7_reg <= mul_ln1118_81_reg_4046_pp0_iter6_reg;
                mul_ln1118_81_reg_4046_pp0_iter8_reg <= mul_ln1118_81_reg_4046_pp0_iter7_reg;
                output_fmap_addr_reg_3828_pp0_iter2_reg <= output_fmap_addr_reg_3828;
                output_fmap_addr_reg_3828_pp0_iter3_reg <= output_fmap_addr_reg_3828_pp0_iter2_reg;
                output_fmap_addr_reg_3828_pp0_iter4_reg <= output_fmap_addr_reg_3828_pp0_iter3_reg;
                output_fmap_addr_reg_3828_pp0_iter5_reg <= output_fmap_addr_reg_3828_pp0_iter4_reg;
                output_fmap_addr_reg_3828_pp0_iter6_reg <= output_fmap_addr_reg_3828_pp0_iter5_reg;
                output_fmap_addr_reg_3828_pp0_iter7_reg <= output_fmap_addr_reg_3828_pp0_iter6_reg;
                output_fmap_addr_reg_3828_pp0_iter8_reg <= output_fmap_addr_reg_3828_pp0_iter7_reg;
                tmp_526_reg_4052_pp0_iter3_reg <= tmp_526_reg_4052;
                tmp_526_reg_4052_pp0_iter4_reg <= tmp_526_reg_4052_pp0_iter3_reg;
                tmp_526_reg_4052_pp0_iter5_reg <= tmp_526_reg_4052_pp0_iter4_reg;
                tmp_526_reg_4052_pp0_iter6_reg <= tmp_526_reg_4052_pp0_iter5_reg;
                tmp_526_reg_4052_pp0_iter7_reg <= tmp_526_reg_4052_pp0_iter6_reg;
                tmp_526_reg_4052_pp0_iter8_reg <= tmp_526_reg_4052_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (select_ln109_6_reg_3443_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                output_fmap_load_reg_3858 <= output_fmap_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((select_ln109_6_reg_3443_pp0_iter1_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (select_ln109_4_reg_3430 = ap_const_lv1_0) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (select_ln109_5_reg_3436 = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (select_ln109_5_reg_3436 = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then
                reg_448 <= input_fmap_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                select_ln107_1_reg_3324 <= select_ln107_1_fu_500_p3;
                select_ln109_1_reg_3377 <= select_ln109_1_fu_542_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                select_ln111_1_reg_3525 <= select_ln111_1_fu_836_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln340_148_reg_4057 <= select_ln340_148_fu_1409_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter3_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter3_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                select_ln340_150_reg_4120 <= select_ln340_150_fu_1629_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter4_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter4_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                select_ln340_152_reg_4183 <= select_ln340_152_fu_1849_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter4_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                select_ln340_154_reg_4246 <= select_ln340_154_fu_2069_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter5_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                select_ln340_156_reg_4309 <= select_ln340_156_fu_2289_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter6_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter6_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln340_158_reg_4372 <= select_ln340_158_fu_2509_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter7_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                select_ln340_160_reg_4435 <= select_ln340_160_fu_2729_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                select_ln340_162_reg_4498 <= select_ln340_162_fu_2949_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                select_ln340_164_reg_4561 <= select_ln340_164_fu_3180_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                sext_ln107_reg_3932 <= sext_ln107_fu_1147_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter3_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter3_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter3_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    shl_ln728_73_reg_4125(23 downto 8) <= shl_ln728_73_fu_1642_p3(23 downto 8);
                tmp_489_reg_4135 <= add_ln700_71_fu_1653_p2(23 downto 23);
                trunc_ln708_72_reg_4130 <= add_ln700_71_fu_1653_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter4_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter4_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter4_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                    shl_ln728_74_reg_4188(23 downto 8) <= shl_ln728_74_fu_1862_p3(23 downto 8);
                tmp_495_reg_4198 <= add_ln700_72_fu_1873_p2(23 downto 23);
                trunc_ln708_73_reg_4193 <= add_ln700_72_fu_1873_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter5_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter5_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                    shl_ln728_75_reg_4251(23 downto 8) <= shl_ln728_75_fu_2082_p3(23 downto 8);
                tmp_501_reg_4261 <= add_ln700_73_fu_2093_p2(23 downto 23);
                trunc_ln708_74_reg_4256 <= add_ln700_73_fu_2093_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter5_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter5_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter6_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                    shl_ln728_76_reg_4314(23 downto 8) <= shl_ln728_76_fu_2302_p3(23 downto 8);
                tmp_507_reg_4324 <= add_ln700_74_fu_2313_p2(23 downto 23);
                trunc_ln708_75_reg_4319 <= add_ln700_74_fu_2313_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter6_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    shl_ln728_77_reg_4377(23 downto 8) <= shl_ln728_77_fu_2522_p3(23 downto 8);
                tmp_513_reg_4387 <= add_ln700_75_fu_2533_p2(23 downto 23);
                trunc_ln708_76_reg_4382 <= add_ln700_75_fu_2533_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    shl_ln728_78_reg_4440(23 downto 8) <= shl_ln728_78_fu_2742_p3(23 downto 8);
                tmp_519_reg_4450 <= add_ln700_76_fu_2753_p2(23 downto 23);
                trunc_ln708_77_reg_4445 <= add_ln700_76_fu_2753_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_reg_3272_pp0_iter8_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                    shl_ln728_79_reg_4503(23 downto 8) <= shl_ln728_79_fu_2973_p3(23 downto 8);
                tmp_525_reg_4513 <= add_ln700_77_fu_2984_p2(23 downto 23);
                trunc_ln708_78_reg_4508 <= add_ln700_77_fu_2984_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((select_ln109_6_reg_3443_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_5_reg_3436_pp0_iter2_reg = ap_const_lv1_0) and (select_ln109_4_reg_3430_pp0_iter2_reg = ap_const_lv1_0) and (icmp_ln107_reg_3272_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    shl_ln728_s_reg_4062(23 downto 8) <= shl_ln728_s_fu_1422_p3(23 downto 8);
                tmp_483_reg_4072 <= add_ln700_70_fu_1433_p2(23 downto 23);
                trunc_ln708_s_reg_4067 <= add_ln700_70_fu_1433_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (select_ln109_5_reg_3436 = ap_const_lv1_0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                sub_ln129_2_reg_3545 <= sub_ln129_2_fu_869_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                sub_ln129_3_reg_3604 <= sub_ln129_3_fu_922_p2;
                    zext_ln129_15_reg_3627(3 downto 0) <= zext_ln129_15_fu_940_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (select_ln109_4_reg_3430 = ap_const_lv1_0) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (select_ln109_5_reg_3436 = ap_const_lv1_0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                trunc_ln129_3_reg_3535 <= trunc_ln129_3_fu_854_p1;
                trunc_ln129_4_reg_3540 <= trunc_ln129_4_fu_858_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                trunc_ln129_7_reg_3552 <= trunc_ln129_7_fu_895_p1;
                trunc_ln129_8_reg_3557 <= trunc_ln129_8_fu_899_p1;
                    zext_ln129_5_reg_3488(8 downto 0) <= zext_ln129_5_fu_821_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (select_ln109_6_reg_3443 = ap_const_lv1_0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                    zext_ln129_11_reg_3611(3 downto 0) <= zext_ln129_11_fu_927_p1(3 downto 0);
            end if;
        end if;
    end process;
    zext_ln129_5_reg_3488(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    zext_ln129_11_reg_3611(11 downto 4) <= "00000000";
    zext_ln129_15_reg_3627(11 downto 4) <= "00000000";
    shl_ln_reg_3944(7 downto 0) <= "00000000";
    shl_ln728_s_reg_4062(7 downto 0) <= "00000000";
    shl_ln728_73_reg_4125(7 downto 0) <= "00000000";
    shl_ln728_74_reg_4188(7 downto 0) <= "00000000";
    shl_ln728_75_reg_4251(7 downto 0) <= "00000000";
    shl_ln728_76_reg_4314(7 downto 0) <= "00000000";
    shl_ln728_77_reg_4377(7 downto 0) <= "00000000";
    shl_ln728_78_reg_4440(7 downto 0) <= "00000000";
    shl_ln728_79_reg_4503(7 downto 0) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, icmp_ln107_reg_3272, ap_CS_fsm_pp0_stage3, ap_enable_reg_pp0_iter0, ap_block_pp0_stage2_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage3_subdone, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln107_reg_3272 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln107_reg_3272 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((not(((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    L3_Kernel_V_0_0_address0 <= zext_ln129_5_fu_821_p1(9 - 1 downto 0);

    L3_Kernel_V_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
            L3_Kernel_V_0_0_ce0 <= ap_const_logic_1;
        else 
            L3_Kernel_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L3_Kernel_V_0_1_address0 <= zext_ln129_5_fu_821_p1(9 - 1 downto 0);

    L3_Kernel_V_0_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
            L3_Kernel_V_0_1_ce0 <= ap_const_logic_1;
        else 
            L3_Kernel_V_0_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L3_Kernel_V_0_2_address0 <= zext_ln129_5_fu_821_p1(9 - 1 downto 0);

    L3_Kernel_V_0_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
            L3_Kernel_V_0_2_ce0 <= ap_const_logic_1;
        else 
            L3_Kernel_V_0_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L3_Kernel_V_1_0_address0 <= zext_ln129_5_fu_821_p1(9 - 1 downto 0);

    L3_Kernel_V_1_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
            L3_Kernel_V_1_0_ce0 <= ap_const_logic_1;
        else 
            L3_Kernel_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L3_Kernel_V_1_1_address0 <= zext_ln129_5_fu_821_p1(9 - 1 downto 0);

    L3_Kernel_V_1_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
            L3_Kernel_V_1_1_ce0 <= ap_const_logic_1;
        else 
            L3_Kernel_V_1_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L3_Kernel_V_1_2_address0 <= zext_ln129_5_fu_821_p1(9 - 1 downto 0);

    L3_Kernel_V_1_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then 
            L3_Kernel_V_1_2_ce0 <= ap_const_logic_1;
        else 
            L3_Kernel_V_1_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L3_Kernel_V_2_0_address0 <= zext_ln129_5_reg_3488(9 - 1 downto 0);

    L3_Kernel_V_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            L3_Kernel_V_2_0_ce0 <= ap_const_logic_1;
        else 
            L3_Kernel_V_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L3_Kernel_V_2_1_address0 <= zext_ln129_5_reg_3488(9 - 1 downto 0);

    L3_Kernel_V_2_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            L3_Kernel_V_2_1_ce0 <= ap_const_logic_1;
        else 
            L3_Kernel_V_2_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L3_Kernel_V_2_2_address0 <= zext_ln129_5_reg_3488(9 - 1 downto 0);

    L3_Kernel_V_2_2_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            L3_Kernel_V_2_2_ce0 <= ap_const_logic_1;
        else 
            L3_Kernel_V_2_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    L3_bias_V_address0 <= zext_ln107_fu_1012_p1(5 - 1 downto 0);

    L3_bias_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            L3_bias_V_ce0 <= ap_const_logic_1;
        else 
            L3_bias_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln107_1_fu_462_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(ap_phi_mux_indvar_flatten130_phi_fu_364_p4));
    add_ln107_fu_468_p2 <= std_logic_vector(unsigned(ap_const_lv6_1) + unsigned(ap_phi_mux_kernel_number_phi_fu_375_p4));
    add_ln109_1_fu_815_p2 <= std_logic_vector(unsigned(ap_const_lv13_1) + unsigned(indvar_flatten33_reg_383));
    add_ln109_fu_524_p2 <= std_logic_vector(unsigned(ap_const_lv5_1) + unsigned(select_ln107_reg_3298));
    add_ln111_fu_809_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(indvar_flatten_reg_407));
    add_ln1192_74_fu_1479_p2 <= std_logic_vector(signed(sext_ln703_73_fu_1473_p1) + signed(sext_ln1192_135_fu_1476_p1));
    add_ln1192_75_fu_1699_p2 <= std_logic_vector(signed(sext_ln703_74_fu_1693_p1) + signed(sext_ln1192_137_fu_1696_p1));
    add_ln1192_76_fu_1919_p2 <= std_logic_vector(signed(sext_ln703_75_fu_1913_p1) + signed(sext_ln1192_139_fu_1916_p1));
    add_ln1192_77_fu_2139_p2 <= std_logic_vector(signed(sext_ln703_76_fu_2133_p1) + signed(sext_ln1192_141_fu_2136_p1));
    add_ln1192_78_fu_2359_p2 <= std_logic_vector(signed(sext_ln703_77_fu_2353_p1) + signed(sext_ln1192_143_fu_2356_p1));
    add_ln1192_79_fu_2579_p2 <= std_logic_vector(signed(sext_ln703_78_fu_2573_p1) + signed(sext_ln1192_145_fu_2576_p1));
    add_ln1192_80_fu_2799_p2 <= std_logic_vector(signed(sext_ln703_79_fu_2793_p1) + signed(sext_ln1192_147_fu_2796_p1));
    add_ln1192_81_fu_3030_p2 <= std_logic_vector(signed(sext_ln703_80_fu_3024_p1) + signed(sext_ln1192_149_fu_3027_p1));
    add_ln1192_fu_1252_p2 <= std_logic_vector(signed(sext_ln703_fu_1246_p1) + signed(sext_ln1192_fu_1249_p1));
    add_ln129_10_fu_976_p2 <= std_logic_vector(unsigned(zext_ln129_15_reg_3627) + unsigned(sub_ln129_1_reg_3592));
    add_ln129_11_fu_944_p2 <= std_logic_vector(unsigned(zext_ln129_15_fu_940_p1) + unsigned(sub_ln129_2_reg_3545));
    add_ln129_12_fu_984_p2 <= std_logic_vector(unsigned(zext_ln129_15_reg_3627) + unsigned(sub_ln129_3_reg_3604));
    add_ln129_13_fu_997_p2 <= std_logic_vector(unsigned(zext_ln129_19_fu_993_p1) + unsigned(sub_ln129_1_reg_3592));
    add_ln129_14_fu_1002_p2 <= std_logic_vector(unsigned(zext_ln129_19_fu_993_p1) + unsigned(sub_ln129_2_reg_3545));
    add_ln129_15_fu_1007_p2 <= std_logic_vector(unsigned(zext_ln129_19_fu_993_p1) + unsigned(sub_ln129_3_reg_3604));
    add_ln129_1_fu_988_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) + unsigned(select_ln111_reg_3460));
    add_ln129_2_fu_580_p2 <= std_logic_vector(unsigned(zext_ln129_fu_576_p1) + unsigned(tmp_91_cast_fu_569_p3));
    add_ln129_3_fu_681_p2 <= std_logic_vector(unsigned(zext_ln129_2_fu_678_p1) + unsigned(tmp_94_cast_fu_639_p3));
    add_ln129_4_fu_849_p2 <= std_logic_vector(unsigned(zext_ln129_7_fu_845_p1) + unsigned(sub_ln129_reg_3419));
    add_ln129_5_fu_795_p2 <= std_logic_vector(unsigned(zext_ln129_8_fu_791_p1) + unsigned(sub_ln129_fu_701_p2));
    add_ln129_6_fu_890_p2 <= std_logic_vector(unsigned(zext_ln129_9_fu_886_p1) + unsigned(sub_ln129_reg_3419));
    add_ln129_7_fu_964_p2 <= std_logic_vector(unsigned(zext_ln129_11_reg_3611) + unsigned(sub_ln129_1_reg_3592));
    add_ln129_8_fu_930_p2 <= std_logic_vector(unsigned(zext_ln129_11_fu_927_p1) + unsigned(sub_ln129_2_reg_3545));
    add_ln129_9_fu_972_p2 <= std_logic_vector(unsigned(zext_ln129_11_reg_3611) + unsigned(sub_ln129_3_reg_3604));
    add_ln129_fu_935_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln111_reg_3460));
    add_ln415_74_fu_1460_p2 <= std_logic_vector(unsigned(zext_ln415_74_fu_1457_p1) + unsigned(trunc_ln708_s_reg_4067));
    add_ln415_75_fu_1680_p2 <= std_logic_vector(unsigned(zext_ln415_75_fu_1677_p1) + unsigned(trunc_ln708_72_reg_4130));
    add_ln415_76_fu_1900_p2 <= std_logic_vector(unsigned(zext_ln415_76_fu_1897_p1) + unsigned(trunc_ln708_73_reg_4193));
    add_ln415_77_fu_2120_p2 <= std_logic_vector(unsigned(zext_ln415_77_fu_2117_p1) + unsigned(trunc_ln708_74_reg_4256));
    add_ln415_78_fu_2340_p2 <= std_logic_vector(unsigned(zext_ln415_78_fu_2337_p1) + unsigned(trunc_ln708_75_reg_4319));
    add_ln415_79_fu_2560_p2 <= std_logic_vector(unsigned(zext_ln415_79_fu_2557_p1) + unsigned(trunc_ln708_76_reg_4382));
    add_ln415_80_fu_2780_p2 <= std_logic_vector(unsigned(zext_ln415_80_fu_2777_p1) + unsigned(trunc_ln708_77_reg_4445));
    add_ln415_81_fu_3011_p2 <= std_logic_vector(unsigned(zext_ln415_81_fu_3008_p1) + unsigned(trunc_ln708_78_reg_4508));
    add_ln415_fu_1219_p2 <= std_logic_vector(unsigned(zext_ln415_fu_1216_p1) + unsigned(trunc_ln_reg_3949));
    add_ln700_70_fu_1433_p2 <= std_logic_vector(signed(sext_ln1192_136_fu_1430_p1) + signed(shl_ln728_s_fu_1422_p3));
    add_ln700_71_fu_1653_p2 <= std_logic_vector(signed(sext_ln1192_138_fu_1650_p1) + signed(shl_ln728_73_fu_1642_p3));
    add_ln700_72_fu_1873_p2 <= std_logic_vector(signed(sext_ln1192_140_fu_1870_p1) + signed(shl_ln728_74_fu_1862_p3));
    add_ln700_73_fu_2093_p2 <= std_logic_vector(signed(sext_ln1192_142_fu_2090_p1) + signed(shl_ln728_75_fu_2082_p3));
    add_ln700_74_fu_2313_p2 <= std_logic_vector(signed(sext_ln1192_144_fu_2310_p1) + signed(shl_ln728_76_fu_2302_p3));
    add_ln700_75_fu_2533_p2 <= std_logic_vector(signed(sext_ln1192_146_fu_2530_p1) + signed(shl_ln728_77_fu_2522_p3));
    add_ln700_76_fu_2753_p2 <= std_logic_vector(signed(sext_ln1192_148_fu_2750_p1) + signed(shl_ln728_78_fu_2742_p3));
    add_ln700_77_fu_2984_p2 <= std_logic_vector(signed(sext_ln1192_150_fu_2981_p1) + signed(shl_ln728_79_fu_2973_p3));
    add_ln700_fu_1178_p2 <= std_logic_vector(signed(sext_ln1192_134_fu_1175_p1) + signed(shl_ln_fu_1167_p3));
    and_ln107_1_fu_664_p2 <= (xor_ln107_reg_3308 and icmp_ln121_1_fu_598_p2);
    and_ln107_2_fu_669_p2 <= (xor_ln107_reg_3308 and icmp_ln121_2_fu_604_p2);
    and_ln107_3_fu_2957_p2 <= (xor_ln107_reg_3308_pp0_iter8_reg and icmp_ln121_3_reg_3404_pp0_iter8_reg);
    and_ln107_4_fu_674_p2 <= (xor_ln107_reg_3308 and icmp_ln113_reg_3340);
    and_ln107_5_fu_520_p2 <= (xor_ln107_reg_3308 and icmp_ln111_reg_3318);
    and_ln107_fu_659_p2 <= (xor_ln107_reg_3308 and icmp_ln121_fu_592_p2);
    and_ln109_fu_749_p2 <= (or_ln109_1_fu_744_p2 and and_ln107_4_fu_674_p2);
    and_ln416_74_fu_1498_p2 <= (xor_ln416_74_fu_1493_p2 and tmp_483_reg_4072);
    and_ln416_75_fu_1718_p2 <= (xor_ln416_75_fu_1713_p2 and tmp_489_reg_4135);
    and_ln416_76_fu_1938_p2 <= (xor_ln416_76_fu_1933_p2 and tmp_495_reg_4198);
    and_ln416_77_fu_2158_p2 <= (xor_ln416_77_fu_2153_p2 and tmp_501_reg_4261);
    and_ln416_78_fu_2378_p2 <= (xor_ln416_78_fu_2373_p2 and tmp_507_reg_4324);
    and_ln416_79_fu_2598_p2 <= (xor_ln416_79_fu_2593_p2 and tmp_513_reg_4387);
    and_ln416_80_fu_2818_p2 <= (xor_ln416_80_fu_2813_p2 and tmp_519_reg_4450);
    and_ln416_81_fu_3049_p2 <= (xor_ln416_81_fu_3044_p2 and tmp_525_reg_4513);
    and_ln416_fu_1271_p2 <= (xor_ln416_fu_1266_p2 and tmp_477_reg_3954);
    and_ln780_74_fu_1541_p2 <= (tmp_486_fu_1503_p3 and or_ln780_74_fu_1535_p2);
    and_ln780_75_fu_1761_p2 <= (tmp_492_fu_1723_p3 and or_ln780_75_fu_1755_p2);
    and_ln780_76_fu_1981_p2 <= (tmp_498_fu_1943_p3 and or_ln780_76_fu_1975_p2);
    and_ln780_77_fu_2201_p2 <= (tmp_504_fu_2163_p3 and or_ln780_77_fu_2195_p2);
    and_ln780_78_fu_2421_p2 <= (tmp_510_fu_2383_p3 and or_ln780_78_fu_2415_p2);
    and_ln780_79_fu_2641_p2 <= (tmp_516_fu_2603_p3 and or_ln780_79_fu_2635_p2);
    and_ln780_80_fu_2861_p2 <= (tmp_522_fu_2823_p3 and or_ln780_80_fu_2855_p2);
    and_ln780_81_fu_3092_p2 <= (tmp_528_fu_3054_p3 and or_ln780_81_fu_3086_p2);
    and_ln780_fu_1314_p2 <= (tmp_480_fu_1276_p3 and or_ln780_fu_1308_p2);
    and_ln781_74_fu_1547_p2 <= (tmp_486_fu_1503_p3 and and_ln416_74_fu_1498_p2);
    and_ln781_75_fu_1767_p2 <= (tmp_492_fu_1723_p3 and and_ln416_75_fu_1718_p2);
    and_ln781_76_fu_1987_p2 <= (tmp_498_fu_1943_p3 and and_ln416_76_fu_1938_p2);
    and_ln781_77_fu_2207_p2 <= (tmp_504_fu_2163_p3 and and_ln416_77_fu_2158_p2);
    and_ln781_78_fu_2427_p2 <= (tmp_510_fu_2383_p3 and and_ln416_78_fu_2378_p2);
    and_ln781_79_fu_2647_p2 <= (tmp_516_fu_2603_p3 and and_ln416_79_fu_2598_p2);
    and_ln781_80_fu_2867_p2 <= (tmp_522_fu_2823_p3 and and_ln416_80_fu_2818_p2);
    and_ln781_81_fu_3098_p2 <= (tmp_528_fu_3054_p3 and and_ln416_81_fu_3049_p2);
    and_ln781_fu_1320_p2 <= (tmp_480_fu_1276_p3 and and_ln416_fu_1271_p2);
    and_ln785_74_fu_1578_p2 <= (xor_ln785_150_fu_1573_p2 and or_ln785_74_fu_1568_p2);
    and_ln785_75_fu_1798_p2 <= (xor_ln785_152_fu_1793_p2 and or_ln785_75_fu_1788_p2);
    and_ln785_76_fu_2018_p2 <= (xor_ln785_154_fu_2013_p2 and or_ln785_76_fu_2008_p2);
    and_ln785_77_fu_2238_p2 <= (xor_ln785_156_fu_2233_p2 and or_ln785_77_fu_2228_p2);
    and_ln785_78_fu_2458_p2 <= (xor_ln785_158_fu_2453_p2 and or_ln785_78_fu_2448_p2);
    and_ln785_79_fu_2678_p2 <= (xor_ln785_160_fu_2673_p2 and or_ln785_79_fu_2668_p2);
    and_ln785_80_fu_2898_p2 <= (xor_ln785_162_fu_2893_p2 and or_ln785_80_fu_2888_p2);
    and_ln785_81_fu_3129_p2 <= (xor_ln785_164_fu_3124_p2 and or_ln785_81_fu_3119_p2);
    and_ln785_fu_1358_p2 <= (xor_ln785_148_fu_1353_p2 and or_ln785_fu_1348_p2);
    and_ln786_148_fu_1374_p2 <= (xor_ln786_fu_1368_p2 and tmp_476_reg_4018);
    and_ln786_149_fu_1553_p2 <= (tmp_485_reg_4084 and and_ln780_74_fu_1541_p2);
    and_ln786_150_fu_1594_p2 <= (xor_ln786_74_fu_1588_p2 and tmp_482_reg_4092);
    and_ln786_151_fu_1773_p2 <= (tmp_491_reg_4147 and and_ln780_75_fu_1761_p2);
    and_ln786_152_fu_1814_p2 <= (xor_ln786_75_fu_1808_p2 and tmp_488_reg_4155);
    and_ln786_153_fu_1993_p2 <= (tmp_497_reg_4210 and and_ln780_76_fu_1981_p2);
    and_ln786_154_fu_2034_p2 <= (xor_ln786_76_fu_2028_p2 and tmp_494_reg_4218);
    and_ln786_155_fu_2213_p2 <= (tmp_503_reg_4273 and and_ln780_77_fu_2201_p2);
    and_ln786_156_fu_2254_p2 <= (xor_ln786_77_fu_2248_p2 and tmp_500_reg_4281);
    and_ln786_157_fu_2433_p2 <= (tmp_509_reg_4336 and and_ln780_78_fu_2421_p2);
    and_ln786_158_fu_2474_p2 <= (xor_ln786_78_fu_2468_p2 and tmp_506_reg_4344);
    and_ln786_159_fu_2653_p2 <= (tmp_515_reg_4399 and and_ln780_79_fu_2641_p2);
    and_ln786_160_fu_2694_p2 <= (xor_ln786_79_fu_2688_p2 and tmp_512_reg_4407);
    and_ln786_161_fu_2873_p2 <= (tmp_521_reg_4462 and and_ln780_80_fu_2861_p2);
    and_ln786_162_fu_2914_p2 <= (xor_ln786_80_fu_2908_p2 and tmp_518_reg_4470);
    and_ln786_163_fu_3104_p2 <= (tmp_527_reg_4525 and and_ln780_81_fu_3092_p2);
    and_ln786_164_fu_3145_p2 <= (xor_ln786_81_fu_3139_p2 and tmp_524_reg_4533);
    and_ln786_fu_1326_p2 <= (tmp_479_reg_3988 and and_ln780_fu_1314_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state51 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln107_reg_3272)
    begin
        if ((icmp_ln107_reg_3272 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state51)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state51) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten130_phi_fu_364_p4_assign_proc : process(indvar_flatten130_reg_360, ap_enable_reg_pp0_iter1, icmp_ln107_reg_3272, ap_CS_fsm_pp0_stage0, add_ln107_1_reg_3276, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten130_phi_fu_364_p4 <= add_ln107_1_reg_3276;
        else 
            ap_phi_mux_indvar_flatten130_phi_fu_364_p4 <= indvar_flatten130_reg_360;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten33_phi_fu_387_p4_assign_proc : process(indvar_flatten33_reg_383, ap_enable_reg_pp0_iter1, icmp_ln107_reg_3272, ap_CS_fsm_pp0_stage0, select_ln109_10_reg_3643, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten33_phi_fu_387_p4 <= select_ln109_10_reg_3643;
        else 
            ap_phi_mux_indvar_flatten33_phi_fu_387_p4 <= indvar_flatten33_reg_383;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_411_p4_assign_proc : process(indvar_flatten_reg_407, ap_enable_reg_pp0_iter1, icmp_ln107_reg_3272, ap_CS_fsm_pp0_stage0, select_ln111_4_reg_3638, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_indvar_flatten_phi_fu_411_p4 <= select_ln111_4_reg_3638;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_411_p4 <= indvar_flatten_reg_407;
        end if; 
    end process;


    ap_phi_mux_kernel_channel_phi_fu_399_p4_assign_proc : process(kernel_channel_reg_395, ap_enable_reg_pp0_iter1, icmp_ln107_reg_3272, ap_CS_fsm_pp0_stage0, select_ln109_1_reg_3377, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_channel_phi_fu_399_p4 <= select_ln109_1_reg_3377;
        else 
            ap_phi_mux_kernel_channel_phi_fu_399_p4 <= kernel_channel_reg_395;
        end if; 
    end process;


    ap_phi_mux_kernel_number_phi_fu_375_p4_assign_proc : process(kernel_number_reg_371, ap_enable_reg_pp0_iter1, icmp_ln107_reg_3272, ap_CS_fsm_pp0_stage0, select_ln107_1_reg_3324, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln107_reg_3272 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_kernel_number_phi_fu_375_p4 <= select_ln107_1_reg_3324;
        else 
            ap_phi_mux_kernel_number_phi_fu_375_p4 <= kernel_number_reg_371;
        end if; 
    end process;


    ap_phi_mux_shift_col_num_phi_fu_423_p4_assign_proc : process(shift_col_num_reg_419, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln107_reg_3272_pp0_iter1_reg, select_ln111_1_reg_3525, ap_block_pp0_stage1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_shift_col_num_phi_fu_423_p4 <= select_ln111_1_reg_3525;
        else 
            ap_phi_mux_shift_col_num_phi_fu_423_p4 <= shift_col_num_reg_419;
        end if; 
    end process;


    ap_phi_mux_shift_row_num_phi_fu_435_p4_assign_proc : process(shift_row_num_reg_431, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, icmp_ln107_reg_3272_pp0_iter1_reg, add_ln129_reg_3622, ap_block_pp0_stage1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln107_reg_3272_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_shift_row_num_phi_fu_435_p4 <= add_ln129_reg_3622;
        else 
            ap_phi_mux_shift_row_num_phi_fu_435_p4 <= shift_row_num_reg_431;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state51)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_157_fu_622_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) + unsigned(shift_col_num_reg_419));
    empty_fu_616_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(shift_col_num_reg_419));
    grp_fu_3188_p0 <= ap_const_lv10_D(5 - 1 downto 0);
    grp_fu_3188_p1 <= grp_fu_3188_p10(6 - 1 downto 0);
    grp_fu_3188_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln107_1_fu_500_p3),10));
    grp_fu_3188_p2 <= grp_fu_3188_p20(4 - 1 downto 0);
    grp_fu_3188_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln111_1_fu_836_p3),10));
    grp_fu_3196_p0 <= ap_const_lv13_D(5 - 1 downto 0);
    grp_fu_3196_p1 <= grp_fu_3196_p10(10 - 1 downto 0);
    grp_fu_3196_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_160_reg_3599),13));
    grp_fu_3196_p2 <= grp_fu_3196_p20(4 - 1 downto 0);
    grp_fu_3196_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln111_reg_3460),13));
    grp_fu_3204_p0 <= grp_fu_3204_p00(15 - 1 downto 0);
    grp_fu_3204_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_443),22));
    grp_fu_3211_p0 <= grp_fu_3211_p00(15 - 1 downto 0);
    grp_fu_3211_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_448),22));
    grp_fu_3218_p0 <= grp_fu_3218_p00(15 - 1 downto 0);
    grp_fu_3218_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_443),22));
    grp_fu_3225_p0 <= grp_fu_3225_p00(15 - 1 downto 0);
    grp_fu_3225_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_448),22));
    grp_fu_3232_p0 <= grp_fu_3232_p00(15 - 1 downto 0);
    grp_fu_3232_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_443),22));
    grp_fu_3239_p0 <= grp_fu_3239_p00(15 - 1 downto 0);
    grp_fu_3239_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_448),22));
    grp_fu_3246_p0 <= grp_fu_3246_p00(15 - 1 downto 0);
    grp_fu_3246_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_443),22));
    grp_fu_3253_p0 <= grp_fu_3253_p00(15 - 1 downto 0);
    grp_fu_3253_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_448),22));
    grp_fu_3260_p0 <= grp_fu_3260_p00(15 - 1 downto 0);
    grp_fu_3260_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_443),22));
    icmp_ln107_fu_456_p2 <= "1" when (ap_phi_mux_indvar_flatten130_phi_fu_364_p4 = ap_const_lv17_15200) else "0";
    icmp_ln109_fu_474_p2 <= "1" when (ap_phi_mux_indvar_flatten33_phi_fu_387_p4 = ap_const_lv13_A90) else "0";
    icmp_ln111_fu_494_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_411_p4 = ap_const_lv8_A9) else "0";
    icmp_ln113_fu_514_p2 <= "1" when (ap_phi_mux_shift_row_num_phi_fu_435_p4 = ap_const_lv4_D) else "0";
    icmp_ln12151_fu_646_p2 <= "1" when (kernel_channel_reg_395 = ap_const_lv5_0) else "0";
    icmp_ln121_1_fu_598_p2 <= "1" when (sub_ln121_fu_586_p2 = ap_const_lv5_2) else "0";
    icmp_ln121_2_fu_604_p2 <= "1" when (sub_ln121_fu_586_p2 = ap_const_lv5_3) else "0";
    icmp_ln121_3_fu_610_p2 <= "1" when (sub_ln121_fu_586_p2 = ap_const_lv5_4) else "0";
    icmp_ln121_4_fu_1121_p2 <= "1" when (add_ln109_reg_3356_pp0_iter1_reg = ap_const_lv5_0) else "0";
    icmp_ln121_5_fu_549_p2 <= "1" when (select_ln107_reg_3298 = ap_const_lv5_1E) else "0";
    icmp_ln121_6_fu_554_p2 <= "1" when (select_ln107_reg_3298 = ap_const_lv5_1D) else "0";
    icmp_ln121_7_fu_559_p2 <= "1" when (select_ln107_reg_3298 = ap_const_lv5_1C) else "0";
    icmp_ln121_8_fu_564_p2 <= "1" when (select_ln107_reg_3298 = ap_const_lv5_1B) else "0";
    icmp_ln121_fu_592_p2 <= "1" when (sub_ln121_fu_586_p2 = ap_const_lv5_1) else "0";

    input_fmap_address0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, zext_ln129_17_fu_980_p1, zext_ln129_16_fu_1020_p1, ap_block_pp0_stage2, zext_ln129_21_fu_1037_p1, zext_ln129_18_fu_1063_p1, ap_block_pp0_stage4, zext_ln129_22_fu_1081_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4))) then 
                input_fmap_address0 <= zext_ln129_22_fu_1081_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                input_fmap_address0 <= zext_ln129_18_fu_1063_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                input_fmap_address0 <= zext_ln129_21_fu_1037_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                input_fmap_address0 <= zext_ln129_16_fu_1020_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                input_fmap_address0 <= zext_ln129_17_fu_980_p1(12 - 1 downto 0);
            else 
                input_fmap_address0 <= "XXXXXXXXXXXX";
            end if;
        else 
            input_fmap_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_fmap_address1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp0_stage1, ap_block_pp0_stage3, zext_ln129_13_fu_968_p1, zext_ln129_12_fu_1016_p1, zext_ln129_20_fu_1033_p1, ap_block_pp0_stage2, zext_ln129_14_fu_1055_p1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3))) then 
                input_fmap_address1 <= zext_ln129_14_fu_1055_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2))) then 
                input_fmap_address1 <= zext_ln129_20_fu_1033_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                input_fmap_address1 <= zext_ln129_12_fu_1016_p1(12 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                input_fmap_address1 <= zext_ln129_13_fu_968_p1(12 - 1 downto 0);
            else 
                input_fmap_address1 <= "XXXXXXXXXXXX";
            end if;
        else 
            input_fmap_address1 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    input_fmap_ce0_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            input_fmap_ce0 <= ap_const_logic_1;
        else 
            input_fmap_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_fmap_ce1_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)))) then 
            input_fmap_ce1 <= ap_const_logic_1;
        else 
            input_fmap_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln107_fu_1150_p2 <= (icmp_ln12151_reg_3414_pp0_iter1_reg or icmp_ln109_reg_3287_pp0_iter2_reg);
    or_ln109_1_fu_744_p2 <= (xor_ln109_fu_739_p2 or icmp_ln109_reg_3287);
    or_ln109_fu_529_p2 <= (icmp_ln109_reg_3287 or and_ln107_5_fu_520_p2);
    or_ln111_1_fu_765_p2 <= (or_ln111_fu_760_p2 or icmp_ln109_reg_3287);
    or_ln111_fu_760_p2 <= (and_ln109_fu_749_p2 or and_ln107_5_reg_3345);
    or_ln340_222_fu_1390_p2 <= (or_ln340_223_fu_1385_p2 or and_ln781_reg_4034);
    or_ln340_223_fu_1385_p2 <= (xor_ln785_148_fu_1353_p2 or and_ln786_reg_4040);
    or_ln340_224_fu_1599_p2 <= (and_ln786_150_fu_1594_p2 or and_ln785_74_fu_1578_p2);
    or_ln340_225_fu_1610_p2 <= (or_ln340_226_fu_1605_p2 or and_ln781_74_reg_4108);
    or_ln340_226_fu_1605_p2 <= (xor_ln785_150_fu_1573_p2 or and_ln786_149_reg_4114);
    or_ln340_227_fu_1819_p2 <= (and_ln786_152_fu_1814_p2 or and_ln785_75_fu_1798_p2);
    or_ln340_228_fu_1830_p2 <= (or_ln340_229_fu_1825_p2 or and_ln781_75_reg_4171);
    or_ln340_229_fu_1825_p2 <= (xor_ln785_152_fu_1793_p2 or and_ln786_151_reg_4177);
    or_ln340_230_fu_2039_p2 <= (and_ln786_154_fu_2034_p2 or and_ln785_76_fu_2018_p2);
    or_ln340_231_fu_2050_p2 <= (or_ln340_232_fu_2045_p2 or and_ln781_76_reg_4234);
    or_ln340_232_fu_2045_p2 <= (xor_ln785_154_fu_2013_p2 or and_ln786_153_reg_4240);
    or_ln340_233_fu_2259_p2 <= (and_ln786_156_fu_2254_p2 or and_ln785_77_fu_2238_p2);
    or_ln340_234_fu_2270_p2 <= (or_ln340_235_fu_2265_p2 or and_ln781_77_reg_4297);
    or_ln340_235_fu_2265_p2 <= (xor_ln785_156_fu_2233_p2 or and_ln786_155_reg_4303);
    or_ln340_236_fu_2479_p2 <= (and_ln786_158_fu_2474_p2 or and_ln785_78_fu_2458_p2);
    or_ln340_237_fu_2490_p2 <= (or_ln340_238_fu_2485_p2 or and_ln781_78_reg_4360);
    or_ln340_238_fu_2485_p2 <= (xor_ln785_158_fu_2453_p2 or and_ln786_157_reg_4366);
    or_ln340_239_fu_2699_p2 <= (and_ln786_160_fu_2694_p2 or and_ln785_79_fu_2678_p2);
    or_ln340_240_fu_2710_p2 <= (or_ln340_241_fu_2705_p2 or and_ln781_79_reg_4423);
    or_ln340_241_fu_2705_p2 <= (xor_ln785_160_fu_2673_p2 or and_ln786_159_reg_4429);
    or_ln340_242_fu_2919_p2 <= (and_ln786_162_fu_2914_p2 or and_ln785_80_fu_2898_p2);
    or_ln340_243_fu_2930_p2 <= (or_ln340_244_fu_2925_p2 or and_ln781_80_reg_4486);
    or_ln340_244_fu_2925_p2 <= (xor_ln785_162_fu_2893_p2 or and_ln786_161_reg_4492);
    or_ln340_245_fu_3150_p2 <= (and_ln786_164_fu_3145_p2 or and_ln785_81_fu_3129_p2);
    or_ln340_246_fu_3161_p2 <= (or_ln340_247_fu_3156_p2 or and_ln781_81_reg_4549);
    or_ln340_247_fu_3156_p2 <= (xor_ln785_164_fu_3124_p2 or and_ln786_163_reg_4555);
    or_ln340_fu_1379_p2 <= (and_ln786_148_fu_1374_p2 or and_ln785_fu_1358_p2);
    or_ln778_74_fu_1516_p2 <= (xor_ln778_149_fu_1511_p2 or tmp_485_reg_4084);
    or_ln778_75_fu_1736_p2 <= (xor_ln778_151_fu_1731_p2 or tmp_491_reg_4147);
    or_ln778_76_fu_1956_p2 <= (xor_ln778_153_fu_1951_p2 or tmp_497_reg_4210);
    or_ln778_77_fu_2176_p2 <= (xor_ln778_155_fu_2171_p2 or tmp_503_reg_4273);
    or_ln778_78_fu_2396_p2 <= (xor_ln778_157_fu_2391_p2 or tmp_509_reg_4336);
    or_ln778_79_fu_2616_p2 <= (xor_ln778_159_fu_2611_p2 or tmp_515_reg_4399);
    or_ln778_80_fu_2836_p2 <= (xor_ln778_161_fu_2831_p2 or tmp_521_reg_4462);
    or_ln778_81_fu_3067_p2 <= (xor_ln778_163_fu_3062_p2 or tmp_527_reg_4525);
    or_ln778_fu_1289_p2 <= (xor_ln778_fu_1284_p2 or tmp_479_reg_3988);
    or_ln780_74_fu_1535_p2 <= (xor_ln780_74_fu_1529_p2 or or_ln778_74_fu_1516_p2);
    or_ln780_75_fu_1755_p2 <= (xor_ln780_75_fu_1749_p2 or or_ln778_75_fu_1736_p2);
    or_ln780_76_fu_1975_p2 <= (xor_ln780_76_fu_1969_p2 or or_ln778_76_fu_1956_p2);
    or_ln780_77_fu_2195_p2 <= (xor_ln780_77_fu_2189_p2 or or_ln778_77_fu_2176_p2);
    or_ln780_78_fu_2415_p2 <= (xor_ln780_78_fu_2409_p2 or or_ln778_78_fu_2396_p2);
    or_ln780_79_fu_2635_p2 <= (xor_ln780_79_fu_2629_p2 or or_ln778_79_fu_2616_p2);
    or_ln780_80_fu_2855_p2 <= (xor_ln780_80_fu_2849_p2 or or_ln778_80_fu_2836_p2);
    or_ln780_81_fu_3086_p2 <= (xor_ln780_81_fu_3080_p2 or or_ln778_81_fu_3067_p2);
    or_ln780_fu_1308_p2 <= (xor_ln780_fu_1302_p2 or or_ln778_fu_1289_p2);
    or_ln785_74_fu_1568_p2 <= (xor_ln785_149_fu_1562_p2 or tmp_485_reg_4084);
    or_ln785_75_fu_1788_p2 <= (xor_ln785_151_fu_1782_p2 or tmp_491_reg_4147);
    or_ln785_76_fu_2008_p2 <= (xor_ln785_153_fu_2002_p2 or tmp_497_reg_4210);
    or_ln785_77_fu_2228_p2 <= (xor_ln785_155_fu_2222_p2 or tmp_503_reg_4273);
    or_ln785_78_fu_2448_p2 <= (xor_ln785_157_fu_2442_p2 or tmp_509_reg_4336);
    or_ln785_79_fu_2668_p2 <= (xor_ln785_159_fu_2662_p2 or tmp_515_reg_4399);
    or_ln785_80_fu_2888_p2 <= (xor_ln785_161_fu_2882_p2 or tmp_521_reg_4462);
    or_ln785_81_fu_3119_p2 <= (xor_ln785_163_fu_3113_p2 or tmp_527_reg_4525);
    or_ln785_fu_1348_p2 <= (xor_ln785_fu_1342_p2 or tmp_479_reg_3988);
    or_ln786_74_fu_1584_p2 <= (and_ln786_149_reg_4114 or and_ln781_74_reg_4108);
    or_ln786_75_fu_1804_p2 <= (and_ln786_151_reg_4177 or and_ln781_75_reg_4171);
    or_ln786_76_fu_2024_p2 <= (and_ln786_153_reg_4240 or and_ln781_76_reg_4234);
    or_ln786_77_fu_2244_p2 <= (and_ln786_155_reg_4303 or and_ln781_77_reg_4297);
    or_ln786_78_fu_2464_p2 <= (and_ln786_157_reg_4366 or and_ln781_78_reg_4360);
    or_ln786_79_fu_2684_p2 <= (and_ln786_159_reg_4429 or and_ln781_79_reg_4423);
    or_ln786_80_fu_2904_p2 <= (and_ln786_161_reg_4492 or and_ln781_80_reg_4486);
    or_ln786_81_fu_3135_p2 <= (and_ln786_163_reg_4555 or and_ln781_81_reg_4549);
    or_ln786_fu_1364_p2 <= (and_ln786_reg_4040 or and_ln781_reg_4034);

    output_fmap_address0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, output_fmap_addr_reg_3828_pp0_iter8_reg, ap_enable_reg_pp0_iter9, ap_block_pp0_stage3, p_cast_fu_1077_p1, ap_block_pp0_stage4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            output_fmap_address0 <= output_fmap_addr_reg_3828_pp0_iter8_reg;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            output_fmap_address0 <= p_cast_fu_1077_p1(13 - 1 downto 0);
        else 
            output_fmap_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;


    output_fmap_ce0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_enable_reg_pp0_iter9)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1)))) then 
            output_fmap_ce0 <= ap_const_logic_1;
        else 
            output_fmap_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_fmap_d0 <= select_ln340_164_reg_4561;

    output_fmap_we0_assign_proc : process(ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, icmp_ln107_reg_3272_pp0_iter9_reg, ap_enable_reg_pp0_iter9)
    begin
        if (((icmp_ln107_reg_3272_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1))) then 
            output_fmap_we0 <= ap_const_logic_1;
        else 
            output_fmap_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast_fu_1077_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_162_reg_3783),64));
    p_dup_fu_755_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(select_ln109_reg_3369));
    p_mid13_fu_874_p2 <= std_logic_vector(unsigned(ap_const_lv4_3) + unsigned(select_ln109_reg_3369));
    p_mid1_fu_778_p2 <= std_logic_vector(unsigned(ap_const_lv4_2) + unsigned(select_ln109_reg_3369));
    p_shl6_cast_fu_862_p3 <= (trunc_ln129_6_reg_3473 & ap_const_lv4_0);
    p_shl7_cast_fu_903_p3 <= (trunc_ln129_4_reg_3540 & ap_const_lv4_0);
    p_shl_cast_fu_915_p3 <= (trunc_ln129_8_reg_3557 & ap_const_lv4_0);
    select_ln107_1_fu_500_p3 <= 
        add_ln107_reg_3281 when (icmp_ln109_reg_3287(0) = '1') else 
        kernel_number_reg_371;
    select_ln107_2_fu_652_p3 <= 
        tmp_92_cast_fu_631_p3 when (icmp_ln109_reg_3287(0) = '1') else 
        add_ln129_2_fu_580_p2;
    select_ln107_fu_480_p3 <= 
        ap_const_lv5_0 when (icmp_ln109_fu_474_p2(0) = '1') else 
        ap_phi_mux_kernel_channel_phi_fu_399_p4;
    select_ln109_10_fu_955_p3 <= 
        ap_const_lv13_1 when (icmp_ln109_reg_3287(0) = '1') else 
        add_ln109_1_reg_3483;
    select_ln109_1_fu_542_p3 <= 
        add_ln109_fu_524_p2 when (and_ln107_5_fu_520_p2(0) = '1') else 
        select_ln107_reg_3298;
    select_ln109_2_fu_1154_p3 <= 
        icmp_ln121_4_reg_3895 when (and_ln107_5_reg_3345_pp0_iter2_reg(0) = '1') else 
        or_ln107_fu_1150_p2;
    select_ln109_3_fu_707_p3 <= 
        add_ln129_3_fu_681_p2 when (and_ln107_5_reg_3345(0) = '1') else 
        select_ln107_2_fu_652_p3;
    select_ln109_4_fu_714_p3 <= 
        icmp_ln121_5_reg_3384 when (and_ln107_5_reg_3345(0) = '1') else 
        and_ln107_fu_659_p2;
    select_ln109_5_fu_720_p3 <= 
        icmp_ln121_6_reg_3389 when (and_ln107_5_reg_3345(0) = '1') else 
        and_ln107_1_fu_664_p2;
    select_ln109_6_fu_726_p3 <= 
        icmp_ln121_7_reg_3394 when (and_ln107_5_reg_3345(0) = '1') else 
        and_ln107_2_fu_669_p2;
    select_ln109_7_fu_2961_p3 <= 
        icmp_ln121_8_reg_3399_pp0_iter8_reg when (and_ln107_5_reg_3345_pp0_iter8_reg(0) = '1') else 
        and_ln107_3_fu_2957_p2;
    select_ln109_8_fu_732_p3 <= 
        ap_const_lv4_1 when (or_ln109_reg_3362(0) = '1') else 
        empty_fu_616_p2;
    select_ln109_9_fu_830_p3 <= 
        ap_const_lv4_2 when (or_ln109_reg_3362(0) = '1') else 
        empty_157_reg_3409;
    select_ln109_fu_534_p3 <= 
        ap_const_lv4_0 when (or_ln109_fu_529_p2(0) = '1') else 
        ap_phi_mux_shift_col_num_phi_fu_423_p4;
    select_ln111_1_fu_836_p3 <= 
        p_dup_reg_3455 when (and_ln109_reg_3449(0) = '1') else 
        select_ln109_reg_3369;
    select_ln111_2_fu_783_p3 <= 
        p_mid1_fu_778_p2 when (and_ln109_fu_749_p2(0) = '1') else 
        select_ln109_8_fu_732_p3;
    select_ln111_3_fu_879_p3 <= 
        p_mid13_fu_874_p2 when (and_ln109_reg_3449(0) = '1') else 
        select_ln109_9_fu_830_p3;
    select_ln111_4_fu_949_p3 <= 
        ap_const_lv8_1 when (or_ln109_reg_3362(0) = '1') else 
        add_ln111_reg_3478;
    select_ln111_fu_770_p3 <= 
        ap_const_lv4_0 when (or_ln111_1_fu_765_p2(0) = '1') else 
        shift_row_num_reg_431;
    select_ln121_1_fu_1417_p3 <= 
        sext_ln107_reg_3932 when (select_ln109_4_reg_3430_pp0_iter2_reg(0) = '1') else 
        select_ln340_148_reg_4057;
    select_ln121_2_fu_1637_p3 <= 
        sext_ln107_reg_3932_pp0_iter3_reg when (select_ln109_5_reg_3436_pp0_iter3_reg(0) = '1') else 
        select_ln340_150_reg_4120;
    select_ln121_3_fu_1857_p3 <= 
        sext_ln107_reg_3932_pp0_iter4_reg when (select_ln109_4_reg_3430_pp0_iter4_reg(0) = '1') else 
        select_ln340_152_reg_4183;
    select_ln121_4_fu_2077_p3 <= 
        sext_ln107_reg_3932_pp0_iter5_reg when (select_ln109_5_reg_3436_pp0_iter5_reg(0) = '1') else 
        select_ln340_154_reg_4246;
    select_ln121_5_fu_2297_p3 <= 
        sext_ln107_reg_3932_pp0_iter5_reg when (select_ln109_6_reg_3443_pp0_iter5_reg(0) = '1') else 
        select_ln340_156_reg_4309;
    select_ln121_6_fu_2517_p3 <= 
        sext_ln107_reg_3932_pp0_iter6_reg when (select_ln109_5_reg_3436_pp0_iter6_reg(0) = '1') else 
        select_ln340_158_reg_4372;
    select_ln121_7_fu_2737_p3 <= 
        sext_ln107_reg_3932_pp0_iter7_reg when (select_ln109_6_reg_3443_pp0_iter7_reg(0) = '1') else 
        select_ln340_160_reg_4435;
    select_ln121_8_fu_2967_p3 <= 
        sext_ln107_reg_3932_pp0_iter8_reg when (select_ln109_7_fu_2961_p3(0) = '1') else 
        select_ln340_162_reg_4498;
    select_ln121_fu_1160_p3 <= 
        sext_ln107_fu_1147_p1 when (select_ln109_2_fu_1154_p3(0) = '1') else 
        output_fmap_load_reg_3858;
    select_ln340_148_fu_1409_p3 <= 
        select_ln340_fu_1395_p3 when (or_ln340_222_fu_1390_p2(0) = '1') else 
        select_ln388_fu_1402_p3;
    select_ln340_149_fu_1615_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_224_fu_1599_p2(0) = '1') else 
        add_ln415_74_reg_4078;
    select_ln340_150_fu_1629_p3 <= 
        select_ln340_149_fu_1615_p3 when (or_ln340_225_fu_1610_p2(0) = '1') else 
        select_ln388_74_fu_1622_p3;
    select_ln340_151_fu_1835_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_227_fu_1819_p2(0) = '1') else 
        add_ln415_75_reg_4141;
    select_ln340_152_fu_1849_p3 <= 
        select_ln340_151_fu_1835_p3 when (or_ln340_228_fu_1830_p2(0) = '1') else 
        select_ln388_75_fu_1842_p3;
    select_ln340_153_fu_2055_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_230_fu_2039_p2(0) = '1') else 
        add_ln415_76_reg_4204;
    select_ln340_154_fu_2069_p3 <= 
        select_ln340_153_fu_2055_p3 when (or_ln340_231_fu_2050_p2(0) = '1') else 
        select_ln388_76_fu_2062_p3;
    select_ln340_155_fu_2275_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_233_fu_2259_p2(0) = '1') else 
        add_ln415_77_reg_4267;
    select_ln340_156_fu_2289_p3 <= 
        select_ln340_155_fu_2275_p3 when (or_ln340_234_fu_2270_p2(0) = '1') else 
        select_ln388_77_fu_2282_p3;
    select_ln340_157_fu_2495_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_236_fu_2479_p2(0) = '1') else 
        add_ln415_78_reg_4330;
    select_ln340_158_fu_2509_p3 <= 
        select_ln340_157_fu_2495_p3 when (or_ln340_237_fu_2490_p2(0) = '1') else 
        select_ln388_78_fu_2502_p3;
    select_ln340_159_fu_2715_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_239_fu_2699_p2(0) = '1') else 
        add_ln415_79_reg_4393;
    select_ln340_160_fu_2729_p3 <= 
        select_ln340_159_fu_2715_p3 when (or_ln340_240_fu_2710_p2(0) = '1') else 
        select_ln388_79_fu_2722_p3;
    select_ln340_161_fu_2935_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_242_fu_2919_p2(0) = '1') else 
        add_ln415_80_reg_4456;
    select_ln340_162_fu_2949_p3 <= 
        select_ln340_161_fu_2935_p3 when (or_ln340_243_fu_2930_p2(0) = '1') else 
        select_ln388_80_fu_2942_p3;
    select_ln340_163_fu_3166_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_245_fu_3150_p2(0) = '1') else 
        add_ln415_81_reg_4519;
    select_ln340_164_fu_3180_p3 <= 
        select_ln340_163_fu_3166_p3 when (or_ln340_246_fu_3161_p2(0) = '1') else 
        select_ln388_81_fu_3173_p3;
    select_ln340_fu_1395_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_fu_1379_p2(0) = '1') else 
        add_ln415_reg_3982;
    select_ln388_74_fu_1622_p3 <= 
        ap_const_lv16_8000 when (and_ln786_150_fu_1594_p2(0) = '1') else 
        add_ln415_74_reg_4078;
    select_ln388_75_fu_1842_p3 <= 
        ap_const_lv16_8000 when (and_ln786_152_fu_1814_p2(0) = '1') else 
        add_ln415_75_reg_4141;
    select_ln388_76_fu_2062_p3 <= 
        ap_const_lv16_8000 when (and_ln786_154_fu_2034_p2(0) = '1') else 
        add_ln415_76_reg_4204;
    select_ln388_77_fu_2282_p3 <= 
        ap_const_lv16_8000 when (and_ln786_156_fu_2254_p2(0) = '1') else 
        add_ln415_77_reg_4267;
    select_ln388_78_fu_2502_p3 <= 
        ap_const_lv16_8000 when (and_ln786_158_fu_2474_p2(0) = '1') else 
        add_ln415_78_reg_4330;
    select_ln388_79_fu_2722_p3 <= 
        ap_const_lv16_8000 when (and_ln786_160_fu_2694_p2(0) = '1') else 
        add_ln415_79_reg_4393;
    select_ln388_80_fu_2942_p3 <= 
        ap_const_lv16_8000 when (and_ln786_162_fu_2914_p2(0) = '1') else 
        add_ln415_80_reg_4456;
    select_ln388_81_fu_3173_p3 <= 
        ap_const_lv16_8000 when (and_ln786_164_fu_3145_p2(0) = '1') else 
        add_ln415_81_reg_4519;
    select_ln388_fu_1402_p3 <= 
        ap_const_lv16_8000 when (and_ln786_148_fu_1374_p2(0) = '1') else 
        add_ln415_reg_3982;
        sext_ln107_fu_1147_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(L3_bias_V_load_reg_3713),16));

        sext_ln1192_134_fu_1175_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_reg_3905),24));

        sext_ln1192_135_fu_1476_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_74_reg_3916_pp0_iter3_reg),25));

        sext_ln1192_136_fu_1430_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_74_reg_3916),24));

        sext_ln1192_137_fu_1696_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_75_reg_3960_pp0_iter3_reg),25));

        sext_ln1192_138_fu_1650_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_75_reg_3960_pp0_iter3_reg),24));

        sext_ln1192_139_fu_1916_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_76_reg_3863_pp0_iter5_reg),25));

        sext_ln1192_140_fu_1870_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_76_reg_3863_pp0_iter4_reg),24));

        sext_ln1192_141_fu_2136_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_77_reg_3874_pp0_iter5_reg),25));

        sext_ln1192_142_fu_2090_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_77_reg_3874_pp0_iter5_reg),24));

        sext_ln1192_143_fu_2356_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_78_reg_3971_pp0_iter6_reg),25));

        sext_ln1192_144_fu_2310_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_78_reg_3971_pp0_iter5_reg),24));

        sext_ln1192_145_fu_2576_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_79_reg_3996_pp0_iter6_reg),25));

        sext_ln1192_146_fu_2530_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_79_reg_3996_pp0_iter6_reg),24));

        sext_ln1192_147_fu_2796_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_80_reg_4007_pp0_iter7_reg),25));

        sext_ln1192_148_fu_2750_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_80_reg_4007_pp0_iter7_reg),24));

        sext_ln1192_149_fu_3027_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_81_reg_4046_pp0_iter8_reg),25));

        sext_ln1192_150_fu_2981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_81_reg_4046_pp0_iter7_reg),24));

        sext_ln1192_fu_1249_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(mul_ln1118_reg_3905),25));

        sext_ln703_73_fu_1473_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_s_reg_4062),25));

        sext_ln703_74_fu_1693_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_73_reg_4125),25));

        sext_ln703_75_fu_1913_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_74_reg_4188),25));

        sext_ln703_76_fu_2133_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_75_reg_4251),25));

        sext_ln703_77_fu_2353_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_76_reg_4314),25));

        sext_ln703_78_fu_2573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_77_reg_4377),25));

        sext_ln703_79_fu_2793_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_78_reg_4440),25));

        sext_ln703_80_fu_3024_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln728_79_reg_4503),25));

        sext_ln703_fu_1246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_reg_3944),25));

    shl_ln728_73_fu_1642_p3 <= (select_ln121_2_fu_1637_p3 & ap_const_lv8_0);
    shl_ln728_74_fu_1862_p3 <= (select_ln121_3_fu_1857_p3 & ap_const_lv8_0);
    shl_ln728_75_fu_2082_p3 <= (select_ln121_4_fu_2077_p3 & ap_const_lv8_0);
    shl_ln728_76_fu_2302_p3 <= (select_ln121_5_fu_2297_p3 & ap_const_lv8_0);
    shl_ln728_77_fu_2522_p3 <= (select_ln121_6_fu_2517_p3 & ap_const_lv8_0);
    shl_ln728_78_fu_2742_p3 <= (select_ln121_7_fu_2737_p3 & ap_const_lv8_0);
    shl_ln728_79_fu_2973_p3 <= (select_ln121_8_fu_2967_p3 & ap_const_lv8_0);
    shl_ln728_s_fu_1422_p3 <= (select_ln121_1_fu_1417_p3 & ap_const_lv8_0);
    shl_ln_fu_1167_p3 <= (select_ln121_fu_1160_p3 & ap_const_lv8_0);
    sub_ln121_fu_586_p2 <= std_logic_vector(unsigned(ap_const_lv5_0) - unsigned(kernel_channel_reg_395));
    sub_ln129_1_fu_910_p2 <= std_logic_vector(unsigned(p_shl7_cast_fu_903_p3) - unsigned(trunc_ln129_3_reg_3535));
    sub_ln129_2_fu_869_p2 <= std_logic_vector(unsigned(p_shl6_cast_fu_862_p3) - unsigned(trunc_ln129_5_reg_3468));
    sub_ln129_3_fu_922_p2 <= std_logic_vector(unsigned(p_shl_cast_fu_915_p3) - unsigned(trunc_ln129_7_reg_3552));
    sub_ln129_fu_701_p2 <= std_logic_vector(unsigned(zext_ln129_4_fu_697_p1) - unsigned(zext_ln129_3_fu_687_p1));
    tmp_480_fu_1276_p3 <= add_ln1192_fu_1252_p2(24 downto 24);
    tmp_481_fu_1294_p3 <= add_ln1192_fu_1252_p2(24 downto 24);
    tmp_486_fu_1503_p3 <= add_ln1192_74_fu_1479_p2(24 downto 24);
    tmp_487_fu_1521_p3 <= add_ln1192_74_fu_1479_p2(24 downto 24);
    tmp_492_fu_1723_p3 <= add_ln1192_75_fu_1699_p2(24 downto 24);
    tmp_493_fu_1741_p3 <= add_ln1192_75_fu_1699_p2(24 downto 24);
    tmp_498_fu_1943_p3 <= add_ln1192_76_fu_1919_p2(24 downto 24);
    tmp_499_fu_1961_p3 <= add_ln1192_76_fu_1919_p2(24 downto 24);
    tmp_504_fu_2163_p3 <= add_ln1192_77_fu_2139_p2(24 downto 24);
    tmp_505_fu_2181_p3 <= add_ln1192_77_fu_2139_p2(24 downto 24);
    tmp_510_fu_2383_p3 <= add_ln1192_78_fu_2359_p2(24 downto 24);
    tmp_511_fu_2401_p3 <= add_ln1192_78_fu_2359_p2(24 downto 24);
    tmp_516_fu_2603_p3 <= add_ln1192_79_fu_2579_p2(24 downto 24);
    tmp_517_fu_2621_p3 <= add_ln1192_79_fu_2579_p2(24 downto 24);
    tmp_522_fu_2823_p3 <= add_ln1192_80_fu_2799_p2(24 downto 24);
    tmp_523_fu_2841_p3 <= add_ln1192_80_fu_2799_p2(24 downto 24);
    tmp_528_fu_3054_p3 <= add_ln1192_81_fu_3030_p2(24 downto 24);
    tmp_529_fu_3072_p3 <= add_ln1192_81_fu_3030_p2(24 downto 24);
    tmp_91_cast_fu_569_p3 <= (trunc_ln129_reg_3267 & ap_const_lv4_0);
    tmp_92_cast_fu_631_p3 <= (trunc_ln129_1_fu_628_p1 & ap_const_lv4_0);
    tmp_94_cast_fu_639_p3 <= (trunc_ln129_2_reg_3335 & ap_const_lv4_0);
    tmp_fu_690_p3 <= (select_ln109_1_reg_3377 & ap_const_lv4_0);
    trunc_ln129_1_fu_628_p1 <= add_ln107_reg_3281(5 - 1 downto 0);
    trunc_ln129_2_fu_510_p1 <= select_ln107_1_fu_500_p3(5 - 1 downto 0);
    trunc_ln129_3_fu_854_p1 <= add_ln129_4_fu_849_p2(12 - 1 downto 0);
    trunc_ln129_4_fu_858_p1 <= add_ln129_4_fu_849_p2(8 - 1 downto 0);
    trunc_ln129_5_fu_801_p1 <= add_ln129_5_fu_795_p2(12 - 1 downto 0);
    trunc_ln129_6_fu_805_p1 <= add_ln129_5_fu_795_p2(8 - 1 downto 0);
    trunc_ln129_7_fu_895_p1 <= add_ln129_6_fu_890_p2(12 - 1 downto 0);
    trunc_ln129_8_fu_899_p1 <= add_ln129_6_fu_890_p2(8 - 1 downto 0);
    trunc_ln129_fu_452_p1 <= ap_phi_mux_kernel_number_phi_fu_375_p4(5 - 1 downto 0);
    xor_ln107_fu_488_p2 <= (icmp_ln109_fu_474_p2 xor ap_const_lv1_1);
    xor_ln109_fu_739_p2 <= (icmp_ln111_reg_3318 xor ap_const_lv1_1);
    xor_ln416_74_fu_1493_p2 <= (tmp_485_reg_4084 xor ap_const_lv1_1);
    xor_ln416_75_fu_1713_p2 <= (tmp_491_reg_4147 xor ap_const_lv1_1);
    xor_ln416_76_fu_1933_p2 <= (tmp_497_reg_4210 xor ap_const_lv1_1);
    xor_ln416_77_fu_2153_p2 <= (tmp_503_reg_4273 xor ap_const_lv1_1);
    xor_ln416_78_fu_2373_p2 <= (tmp_509_reg_4336 xor ap_const_lv1_1);
    xor_ln416_79_fu_2593_p2 <= (tmp_515_reg_4399 xor ap_const_lv1_1);
    xor_ln416_80_fu_2813_p2 <= (tmp_521_reg_4462 xor ap_const_lv1_1);
    xor_ln416_81_fu_3044_p2 <= (tmp_527_reg_4525 xor ap_const_lv1_1);
    xor_ln416_fu_1266_p2 <= (tmp_479_reg_3988 xor ap_const_lv1_1);
    xor_ln778_148_fu_1338_p2 <= (tmp_480_reg_4024 xor or_ln778_reg_4029);
    xor_ln778_149_fu_1511_p2 <= (tmp_483_reg_4072 xor ap_const_lv1_1);
    xor_ln778_150_fu_1558_p2 <= (tmp_486_reg_4098 xor or_ln778_74_reg_4103);
    xor_ln778_151_fu_1731_p2 <= (tmp_489_reg_4135 xor ap_const_lv1_1);
    xor_ln778_152_fu_1778_p2 <= (tmp_492_reg_4161 xor or_ln778_75_reg_4166);
    xor_ln778_153_fu_1951_p2 <= (tmp_495_reg_4198 xor ap_const_lv1_1);
    xor_ln778_154_fu_1998_p2 <= (tmp_498_reg_4224 xor or_ln778_76_reg_4229);
    xor_ln778_155_fu_2171_p2 <= (tmp_501_reg_4261 xor ap_const_lv1_1);
    xor_ln778_156_fu_2218_p2 <= (tmp_504_reg_4287 xor or_ln778_77_reg_4292);
    xor_ln778_157_fu_2391_p2 <= (tmp_507_reg_4324 xor ap_const_lv1_1);
    xor_ln778_158_fu_2438_p2 <= (tmp_510_reg_4350 xor or_ln778_78_reg_4355);
    xor_ln778_159_fu_2611_p2 <= (tmp_513_reg_4387 xor ap_const_lv1_1);
    xor_ln778_160_fu_2658_p2 <= (tmp_516_reg_4413 xor or_ln778_79_reg_4418);
    xor_ln778_161_fu_2831_p2 <= (tmp_519_reg_4450 xor ap_const_lv1_1);
    xor_ln778_162_fu_2878_p2 <= (tmp_522_reg_4476 xor or_ln778_80_reg_4481);
    xor_ln778_163_fu_3062_p2 <= (tmp_525_reg_4513 xor ap_const_lv1_1);
    xor_ln778_164_fu_3109_p2 <= (tmp_528_reg_4539 xor or_ln778_81_reg_4544);
    xor_ln778_fu_1284_p2 <= (tmp_477_reg_3954 xor ap_const_lv1_1);
    xor_ln780_74_fu_1529_p2 <= (tmp_487_fu_1521_p3 xor ap_const_lv1_1);
    xor_ln780_75_fu_1749_p2 <= (tmp_493_fu_1741_p3 xor ap_const_lv1_1);
    xor_ln780_76_fu_1969_p2 <= (tmp_499_fu_1961_p3 xor ap_const_lv1_1);
    xor_ln780_77_fu_2189_p2 <= (tmp_505_fu_2181_p3 xor ap_const_lv1_1);
    xor_ln780_78_fu_2409_p2 <= (tmp_511_fu_2401_p3 xor ap_const_lv1_1);
    xor_ln780_79_fu_2629_p2 <= (tmp_517_fu_2621_p3 xor ap_const_lv1_1);
    xor_ln780_80_fu_2849_p2 <= (tmp_523_fu_2841_p3 xor ap_const_lv1_1);
    xor_ln780_81_fu_3080_p2 <= (tmp_529_fu_3072_p3 xor ap_const_lv1_1);
    xor_ln780_fu_1302_p2 <= (tmp_481_fu_1294_p3 xor ap_const_lv1_1);
    xor_ln785_148_fu_1353_p2 <= (tmp_476_reg_4018 xor ap_const_lv1_1);
    xor_ln785_149_fu_1562_p2 <= (xor_ln778_150_fu_1558_p2 xor ap_const_lv1_1);
    xor_ln785_150_fu_1573_p2 <= (tmp_482_reg_4092 xor ap_const_lv1_1);
    xor_ln785_151_fu_1782_p2 <= (xor_ln778_152_fu_1778_p2 xor ap_const_lv1_1);
    xor_ln785_152_fu_1793_p2 <= (tmp_488_reg_4155 xor ap_const_lv1_1);
    xor_ln785_153_fu_2002_p2 <= (xor_ln778_154_fu_1998_p2 xor ap_const_lv1_1);
    xor_ln785_154_fu_2013_p2 <= (tmp_494_reg_4218 xor ap_const_lv1_1);
    xor_ln785_155_fu_2222_p2 <= (xor_ln778_156_fu_2218_p2 xor ap_const_lv1_1);
    xor_ln785_156_fu_2233_p2 <= (tmp_500_reg_4281 xor ap_const_lv1_1);
    xor_ln785_157_fu_2442_p2 <= (xor_ln778_158_fu_2438_p2 xor ap_const_lv1_1);
    xor_ln785_158_fu_2453_p2 <= (tmp_506_reg_4344 xor ap_const_lv1_1);
    xor_ln785_159_fu_2662_p2 <= (xor_ln778_160_fu_2658_p2 xor ap_const_lv1_1);
    xor_ln785_160_fu_2673_p2 <= (tmp_512_reg_4407 xor ap_const_lv1_1);
    xor_ln785_161_fu_2882_p2 <= (xor_ln778_162_fu_2878_p2 xor ap_const_lv1_1);
    xor_ln785_162_fu_2893_p2 <= (tmp_518_reg_4470 xor ap_const_lv1_1);
    xor_ln785_163_fu_3113_p2 <= (xor_ln778_164_fu_3109_p2 xor ap_const_lv1_1);
    xor_ln785_164_fu_3124_p2 <= (tmp_524_reg_4533 xor ap_const_lv1_1);
    xor_ln785_fu_1342_p2 <= (xor_ln778_148_fu_1338_p2 xor ap_const_lv1_1);
    xor_ln786_74_fu_1588_p2 <= (or_ln786_74_fu_1584_p2 xor ap_const_lv1_1);
    xor_ln786_75_fu_1808_p2 <= (or_ln786_75_fu_1804_p2 xor ap_const_lv1_1);
    xor_ln786_76_fu_2028_p2 <= (or_ln786_76_fu_2024_p2 xor ap_const_lv1_1);
    xor_ln786_77_fu_2248_p2 <= (or_ln786_77_fu_2244_p2 xor ap_const_lv1_1);
    xor_ln786_78_fu_2468_p2 <= (or_ln786_78_fu_2464_p2 xor ap_const_lv1_1);
    xor_ln786_79_fu_2688_p2 <= (or_ln786_79_fu_2684_p2 xor ap_const_lv1_1);
    xor_ln786_80_fu_2908_p2 <= (or_ln786_80_fu_2904_p2 xor ap_const_lv1_1);
    xor_ln786_81_fu_3139_p2 <= (or_ln786_81_fu_3135_p2 xor ap_const_lv1_1);
    xor_ln786_fu_1368_p2 <= (or_ln786_fu_1364_p2 xor ap_const_lv1_1);
    zext_ln107_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln107_1_reg_3324),64));
    zext_ln129_11_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln111_reg_3460),12));
    zext_ln129_12_fu_1016_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln129_7_reg_3653),64));
    zext_ln129_13_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln129_8_reg_3617),64));
    zext_ln129_14_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln129_9_reg_3663),64));
    zext_ln129_15_fu_940_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln129_fu_935_p2),12));
    zext_ln129_16_fu_1020_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln129_10_reg_3668),64));
    zext_ln129_17_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln129_11_reg_3633),64));
    zext_ln129_18_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln129_12_reg_3678),64));
    zext_ln129_19_fu_993_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln129_1_fu_988_p2),12));
    zext_ln129_20_fu_1033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln129_13_reg_3683),64));
    zext_ln129_21_fu_1037_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln129_14_reg_3688),64));
    zext_ln129_22_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln129_15_reg_3693),64));
    zext_ln129_2_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_reg_3356),9));
    zext_ln129_3_fu_687_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln109_1_reg_3377),60));
    zext_ln129_4_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_690_p3),60));
    zext_ln129_5_fu_821_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln109_3_reg_3425),64));
    zext_ln129_7_fu_845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln111_1_fu_836_p3),60));
    zext_ln129_8_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln111_2_fu_783_p3),60));
    zext_ln129_9_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln111_3_fu_879_p3),60));
    zext_ln129_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kernel_channel_reg_395),9));
    zext_ln415_74_fu_1457_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_484_reg_3922_pp0_iter3_reg),16));
    zext_ln415_75_fu_1677_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_490_reg_3966_pp0_iter3_reg),16));
    zext_ln415_76_fu_1897_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_496_reg_3869_pp0_iter4_reg),16));
    zext_ln415_77_fu_2117_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_502_reg_3880_pp0_iter5_reg),16));
    zext_ln415_78_fu_2337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_508_reg_3977_pp0_iter6_reg),16));
    zext_ln415_79_fu_2557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_514_reg_4002_pp0_iter6_reg),16));
    zext_ln415_80_fu_2777_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_520_reg_4013_pp0_iter7_reg),16));
    zext_ln415_81_fu_3008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_526_reg_4052_pp0_iter8_reg),16));
    zext_ln415_fu_1216_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_478_reg_3911),16));
end behav;
